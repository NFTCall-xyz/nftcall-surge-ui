/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { type BigNumberish, Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { MintableERC20, MintableERC20Interface } from '../../../contracts/mocked/MintableERC20'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'initialMaxMintAmountPerUser',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'mintAmount',
        type: 'uint256',
      },
    ],
    name: 'ownerMint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'maxMintAmount',
        type: 'uint256',
      },
    ],
    name: 'setMaxMintAmountPerUser',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'whitelisted',
        type: 'bool',
      },
    ],
    name: 'setWhitelistAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620010a8380380620010a8833981016040819052620000349162000197565b8282600362000044838262000299565b50600462000053828262000299565b505050620000706200006a6200007c60201b60201c565b62000080565b60085550620003659050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000fa57600080fd5b81516001600160401b0380821115620001175762000117620000d2565b604051601f8301601f19908116603f01168101908282118183101715620001425762000142620000d2565b816040528381526020925086838588010111156200015f57600080fd5b600091505b8382101562000183578582018301518183018401529082019062000164565b600093810190920192909252949350505050565b600080600060608486031215620001ad57600080fd5b83516001600160401b0380821115620001c557600080fd5b620001d387838801620000e8565b94506020860151915080821115620001ea57600080fd5b50620001f986828701620000e8565b925050604084015190509250925092565b600181811c908216806200021f57607f821691505b6020821081036200024057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200029457600081815260208120601f850160051c810160208610156200026f5750805b601f850160051c820191505b8181101562000290578281556001016200027b565b5050505b505050565b81516001600160401b03811115620002b557620002b5620000d2565b620002cd81620002c684546200020a565b8462000246565b602080601f831160018114620003055760008415620002ec5750858301515b600019600386901b1c1916600185901b17855562000290565b600085815260208120601f198616915b82811015620003365788860151825594840194600190910190840162000315565b5085821015620003555787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d3380620003756000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a457c2d711610071578063a457c2d714610227578063a9059cbb1461023a578063b39b8afa1461024d578063dd62ed3e14610260578063f2fde38b1461027357600080fd5b806370a08231146101d3578063715018a6146101fc5780638da5cb5b1461020457806395d89b411461021f57600080fd5b806323b872dd116100e957806323b872dd14610178578063313ce5671461018b578063395093511461019a5780633f914aef146101ad578063484b973c146101c057600080fd5b806306fdde031461011b578063095ea7b3146101395780631249c58b1461015c57806318160ddd14610166575b600080fd5b610123610286565b6040516101309190610b0d565b60405180910390f35b61014c610147366004610b77565b610318565b6040519015158152602001610130565b610164610332565b005b6002545b604051908152602001610130565b61014c610186366004610ba1565b610407565b60405160128152602001610130565b61014c6101a8366004610b77565b61042b565b6101646101bb366004610bdd565b61044d565b6101646101ce366004610b77565b610480565b61016a6101e1366004610c19565b6001600160a01b031660009081526020819052604090205490565b6101646104c0565b6005546040516001600160a01b039091168152602001610130565b6101236104d4565b61014c610235366004610b77565b6104e3565b61014c610248366004610b77565b61055e565b61016461025b366004610c3b565b61056c565b61016a61026e366004610c54565b610579565b610164610281366004610c19565b6105a4565b60606003805461029590610c87565b80601f01602080910402602001604051908101604052809291908181526020018280546102c190610c87565b801561030e5780601f106102e35761010080835404028352916020019161030e565b820191906000526020600020905b8154815290600101906020018083116102f157829003601f168201915b5050505050905090565b60003361032681858561061d565b60019150505b92915050565b600854336000818152600760205260409020549091116103b55760405162461bcd60e51b815260206004820152603360248201527f596f75206861766520616c7265616479206d696e74656420746865206d61786960448201527236bab69030b6b7bab73a1030b63637bbb2b21760691b60648201526084015b60405180910390fd5b6001600160a01b0381166000908152600760205260408120546008546103db9190610cd7565b6008546001600160a01b03841660009081526007602052604090205590506104038282610741565b5050565b60003361041585828561080c565b610420858585610886565b506001949350505050565b60003361032681858561043e8383610579565b6104489190610cea565b61061d565b610455610a35565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b610488610a35565b6001600160a01b038216600090815260076020526040812080548392906104b0908490610cea565b9091555061040390508282610741565b6104c8610a35565b6104d26000610a8f565b565b60606004805461029590610c87565b600033816104f18286610579565b9050838110156105515760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103ac565b610420828686840361061d565b600033610326818585610886565b610574610a35565b600855565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105ac610a35565b6001600160a01b0381166106115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ac565b61061a81610a8f565b50565b6001600160a01b03831661067f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ac565b6001600160a01b0382166106e05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ac565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166107975760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103ac565b6107a360008383610ae1565b80600260008282546107b59190610cea565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60006108188484610579565b9050600019811461088057818110156108735760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103ac565b610880848484840361061d565b50505050565b6001600160a01b0383166108ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ac565b6001600160a01b03821661094c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ac565b610957838383610ae1565b6001600160a01b038316600090815260208190526040902054818110156109cf5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103ac565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610880565b6005546001600160a01b031633146104d25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ac565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383161580610afe57506001600160a01b038216155b15610b0857505050565b505050565b600060208083528351808285015260005b81811015610b3a57858101830151858201604001528201610b1e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b7257600080fd5b919050565b60008060408385031215610b8a57600080fd5b610b9383610b5b565b946020939093013593505050565b600080600060608486031215610bb657600080fd5b610bbf84610b5b565b9250610bcd60208501610b5b565b9150604084013590509250925092565b60008060408385031215610bf057600080fd5b610bf983610b5b565b915060208301358015158114610c0e57600080fd5b809150509250929050565b600060208284031215610c2b57600080fd5b610c3482610b5b565b9392505050565b600060208284031215610c4d57600080fd5b5035919050565b60008060408385031215610c6757600080fd5b610c7083610b5b565b9150610c7e60208401610b5b565b90509250929050565b600181811c90821680610c9b57607f821691505b602082108103610cbb57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561032c5761032c610cc1565b8082018082111561032c5761032c610cc156fea26469706673582212205aef1f4322566e49ede86d52ee427d5a71d9fa0c40e777a406e3437fbc9c622e64736f6c63430008110033'

type MintableERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: MintableERC20ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class MintableERC20__factory extends ContractFactory {
  constructor(...args: MintableERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    name: string,
    symbol: string,
    initialMaxMintAmountPerUser: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<MintableERC20> {
    return super.deploy(name, symbol, initialMaxMintAmountPerUser, overrides || {}) as Promise<MintableERC20>
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    initialMaxMintAmountPerUser: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, initialMaxMintAmountPerUser, overrides || {})
  }
  override attach(address: string): MintableERC20 {
    return super.attach(address) as MintableERC20
  }
  override connect(signer: Signer): MintableERC20__factory {
    return super.connect(signer) as MintableERC20__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): MintableERC20Interface {
    return new utils.Interface(_abi) as MintableERC20Interface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MintableERC20 {
    return new Contract(address, _abi, signerOrProvider) as MintableERC20
  }
}
