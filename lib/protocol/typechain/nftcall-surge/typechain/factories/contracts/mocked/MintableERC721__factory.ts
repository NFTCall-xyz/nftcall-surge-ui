/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MintableERC721,
  MintableERC721Interface,
} from "../../../contracts/mocked/MintableERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001aff38038062001aff833981016040819052620000349162000123565b818160006200004483826200021c565b5060016200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61180780620002f86000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806342842e0e116100a257806395d89b411161007157806395d89b411461022d578063a22cb46514610235578063b88d4fde14610248578063c87b56dd1461025b578063e985e9c51461026e57600080fd5b806342842e0e146101e15780634f6ccce7146101f45780636352211e1461020757806370a082311461021a57600080fd5b80631249c58b116100e95780631249c58b1461019857806318160ddd146101a057806323b872dd146101b25780632f745c59146101c557806332cb6b0c146101d857600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e61012936600461132b565b6102aa565b60405190151581526020015b60405180910390f35b61014b6102d5565b60405161013a9190611398565b61016b6101663660046113ab565b610367565b6040516001600160a01b03909116815260200161013a565b6101966101913660046113e0565b61038e565b005b6101966104a8565b6008545b60405190815260200161013a565b6101966101c036600461140a565b6104cc565b6101a46101d33660046113e0565b6104fd565b6101a461271081565b6101966101ef36600461140a565b610593565b6101a46102023660046113ab565b6105ae565b61016b6102153660046113ab565b610641565b6101a4610228366004611446565b6106a1565b61014b610727565b610196610243366004611461565b610736565b6101966102563660046114b3565b610745565b61014b6102693660046113ab565b61077d565b61012e61027c36600461158f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663780e9d6360e01b14806102cf57506102cf826107f1565b92915050565b6060600080546102e4906115c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610310906115c2565b801561035d5780601f106103325761010080835404028352916020019161035d565b820191906000526020600020905b81548152906001019060200180831161034057829003601f168201915b5050505050905090565b600061037282610841565b506000908152600460205260409020546001600160a01b031690565b600061039982610641565b9050806001600160a01b0316836001600160a01b03160361040b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104275750610427813361027c565b6104995760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610402565b6104a383836108a0565b505050565b60006104b360085490565b90506104c9336104c4836001611612565b61090e565b50565b6104d63382610928565b6104f25760405162461bcd60e51b815260040161040290611625565b6104a38383836109a7565b6000610508836106a1565b821061056a5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610402565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6104a383838360405180602001604052806000815250610745565b60006105b960085490565b821061061c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610402565b6008828154811061062f5761062f611672565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102cf5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610402565b60006001600160a01b03821661070b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610402565b506001600160a01b031660009081526003602052604090205490565b6060600180546102e4906115c2565b610741338383610b18565b5050565b61074f3383610928565b61076b5760405162461bcd60e51b815260040161040290611625565b61077784848484610be6565b50505050565b606061078882610841565b600061079f60408051602081019091526000815290565b905060008151116107bf57604051806020016040528060008152506107ea565b806107c984610c19565b6040516020016107da929190611688565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b148061082257506001600160e01b03198216635b5e139f60e01b145b806102cf57506301ffc9a760e01b6001600160e01b03198316146102cf565b6000818152600260205260409020546001600160a01b03166104c95760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610402565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906108d582610641565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610741828260405180602001604052806000815250610cac565b60008061093483610641565b9050806001600160a01b0316846001600160a01b0316148061097b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061099f5750836001600160a01b031661099484610367565b6001600160a01b0316145b949350505050565b826001600160a01b03166109ba82610641565b6001600160a01b0316146109e05760405162461bcd60e51b8152600401610402906116b7565b6001600160a01b038216610a425760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610402565b610a4f8383836001610cdf565b826001600160a01b0316610a6282610641565b6001600160a01b031614610a885760405162461bcd60e51b8152600401610402906116b7565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610b795760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610402565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610bf18484846109a7565b610bfd84848484610e13565b6107775760405162461bcd60e51b8152600401610402906116fc565b60606000610c2683610f14565b600101905060008167ffffffffffffffff811115610c4657610c4661149d565b6040519080825280601f01601f191660200182016040528015610c70576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c7a57509392505050565b610cb68383610fec565b610cc36000848484610e13565b6104a35760405162461bcd60e51b8152600401610402906116fc565b6001811115610d4e5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610402565b816001600160a01b038516610daa57610da581600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610dcd565b836001600160a01b0316856001600160a01b031614610dcd57610dcd8582611185565b6001600160a01b038416610de957610de481611222565b610e0c565b846001600160a01b0316846001600160a01b031614610e0c57610e0c84826112d1565b5050505050565b60006001600160a01b0384163b15610f0957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e5790339089908890889060040161174e565b6020604051808303816000875af1925050508015610e92575060408051601f3d908101601f19168201909252610e8f9181019061178b565b60015b610eef573d808015610ec0576040519150601f19603f3d011682016040523d82523d6000602084013e610ec5565b606091505b508051600003610ee75760405162461bcd60e51b8152600401610402906116fc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061099f565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f535772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f7f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f9d57662386f26fc10000830492506010015b6305f5e1008310610fb5576305f5e100830492506008015b6127108310610fc957612710830492506004015b60648310610fdb576064830492506002015b600a83106102cf5760010192915050565b6001600160a01b0382166110425760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610402565b6000818152600260205260409020546001600160a01b0316156110a75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610402565b6110b5600083836001610cdf565b6000818152600260205260409020546001600160a01b03161561111a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610402565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001611192846106a1565b61119c91906117a8565b6000838152600760205260409020549091508082146111ef576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611234906001906117a8565b6000838152600960205260408120546008805493945090928490811061125c5761125c611672565b90600052602060002001549050806008838154811061127d5761127d611672565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806112b5576112b56117bb565b6001900381819060005260206000200160009055905550505050565b60006112dc836106a1565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b0319811681146104c957600080fd5b60006020828403121561133d57600080fd5b81356107ea81611315565b60005b8381101561136357818101518382015260200161134b565b50506000910152565b60008151808452611384816020860160208601611348565b601f01601f19169290920160200192915050565b6020815260006107ea602083018461136c565b6000602082840312156113bd57600080fd5b5035919050565b80356001600160a01b03811681146113db57600080fd5b919050565b600080604083850312156113f357600080fd5b6113fc836113c4565b946020939093013593505050565b60008060006060848603121561141f57600080fd5b611428846113c4565b9250611436602085016113c4565b9150604084013590509250925092565b60006020828403121561145857600080fd5b6107ea826113c4565b6000806040838503121561147457600080fd5b61147d836113c4565b91506020830135801515811461149257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156114c957600080fd5b6114d2856113c4565b93506114e0602086016113c4565b925060408501359150606085013567ffffffffffffffff8082111561150457600080fd5b818701915087601f83011261151857600080fd5b81358181111561152a5761152a61149d565b604051601f8201601f19908116603f011681019083821181831017156115525761155261149d565b816040528281528a602084870101111561156b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156115a257600080fd5b6115ab836113c4565b91506115b9602084016113c4565b90509250929050565b600181811c908216806115d657607f821691505b6020821081036115f657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102cf576102cf6115fc565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000835161169a818460208801611348565b8351908301906116ae818360208801611348565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117819083018461136c565b9695505050505050565b60006020828403121561179d57600080fd5b81516107ea81611315565b818103818111156102cf576102cf6115fc565b634e487b7160e01b600052603160045260246000fdfea26469706673582212200be89a76c92f7cefeb23078156c08c1d45dce0adbbd9ac62315abdea542337e764736f6c63430008110033";

type MintableERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintableERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintableERC721__factory extends ContractFactory {
  constructor(...args: MintableERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MintableERC721> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<MintableERC721>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): MintableERC721 {
    return super.attach(address) as MintableERC721;
  }
  override connect(signer: Signer): MintableERC721__factory {
    return super.connect(signer) as MintableERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintableERC721Interface {
    return new utils.Interface(_abi) as MintableERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintableERC721 {
    return new Contract(address, _abi, signerOrProvider) as MintableERC721;
  }
}
