/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../common'
import type { SurgeUI, SurgeUIInterface } from '../../contracts/SurgeUI'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
    ],
    name: 'getAnalytics',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'TVL',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'ncETHPrice',
            type: 'uint256',
          },
        ],
        internalType: 'struct Analytics',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collectionAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollection',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollection',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collectionAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'riskCacheAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollectionStaus',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'delta',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'openInterest',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalLockedValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'collectionWeight',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'callOptionAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'putOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollectionStaus',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'collectionAddresses',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollections',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollection[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'collectionAddresses',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'riskCacheAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollectionsStaus',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'delta',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'openInterest',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalLockedValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'collectionWeight',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'callOptionAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'putOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollectionStaus[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'optionTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'getPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'enum PositionState',
            name: 'state',
            type: 'uint8',
          },
          {
            internalType: 'enum OptionType',
            name: 'optionType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'payer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'strikeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'premium',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct OptionPosition',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'wETHAddress',
        type: 'address',
      },
    ],
    name: 'getVault',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'wETHBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'wETHAllowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'balance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lockedBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxWithdraw',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'releaseTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct VaultLPToken',
            name: 'lpToken',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'ncETHPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'wETHAllowance',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalSupply',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalAssets',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executionFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalLockedAssets',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'unrealizedPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct Vault',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'wETHAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'userAddress',
        type: 'address',
      },
    ],
    name: 'getVaultWithUser',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'wETHBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'wETHAllowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'balance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lockedBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxWithdraw',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'releaseTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct VaultLPToken',
            name: 'lpToken',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'ncETHPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'wETHAllowance',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalSupply',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalAssets',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executionFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalLockedAssets',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'unrealizedPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct Vault',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b506119f2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806369c34f661161005b57806369c34f66146101a1578063777a3003146101c157806399a14189146101e1578063d823c3eb1461020157600080fd5b80630a29701d1461008d578063347c5d43146101405780633adbb5af146101535780633bf4212014610173575b600080fd5b6100a061009b366004611270565b610221565b60408051825180518252602080820151818401528184015183850152606080830151818501526080808401518186015260a093840151848601529186015160c0808601919091529486015160e08086019190915290860151610100808601919091529186015161012085015291850151610140840152928401516101608301528301516101808201529101516101a08201526101c0015b60405180910390f35b6100a061014e3660046112cc565b61023e565b610166610161366004611317565b61025f565b604051610137919061136d565b6101866101813660046113db565b61031e565b60408051825181526020928301519281019290925201610137565b6101b46101af3660046114ce565b610439565b604051610137919061157e565b6101d46101cf3660046115cd565b6104fe565b6040516101379190611616565b6101f46101ef3660046112cc565b6105dd565b604051610137919061166c565b61021461020f366004611270565b610614565b604051610137919061168d565b610229611182565b61023585858585610628565b95945050505050565b610246611182565b600061025485858584610628565b9150505b9392505050565b6102a96040805160e0810190915280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b6040516352e5491f60e01b81526004810183905283906001600160a01b038216906352e5491f9060240160e060405180830381865afa1580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031491906116bb565b9150505b92915050565b604080518082019091526000808252602082015260408051808201909152600080825260208201526000849050806001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610389573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ad9190611758565b8252836001600160a01b0381166307a2d13a6103cb6012600a61186b565b6040518263ffffffff1660e01b81526004016103e991815260200190565b602060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190611758565b60208401525090949350505050565b60606000855167ffffffffffffffff81111561045757610457611414565b60405190808252806020026020018201604052801561049057816020015b61047d611205565b8152602001906001900390816104755790505b50905060005b86518110156104f4576104c48782815181106104b4576104b4611877565b6020026020010151878787610c79565b8282815181106104d6576104d6611877565b602002602001018190525080806104ec9061188d565b915050610496565b5095945050505050565b60606000845167ffffffffffffffff81111561051c5761051c611414565b60405190808252806020026020018201604052801561057157816020015b61055e60405180606001604052806000815260200160008152602001600081525090565b81526020019060019003908161053a5790505b50905060005b85518110156105d4576105a486828151811061059557610595611877565b60200260200101518686611045565b8282815181106105b6576105b6611877565b602002602001018190525080806105cc9061188d565b915050610577565b50949350505050565b61060160405180606001604052806000815260200160008152602001600081525090565b61060c848484611045565b949350505050565b61061c611205565b61023585858585610c79565b610630611182565b610638611182565b85856001600160a01b0385161561096f576040516370a0823160e01b81526001600160a01b0386811660048301528791908316906370a0823190602401602060405180830381865afa158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b69190611758565b8451604090810191909152516370a0823160e01b81526001600160a01b0387811660048301528216906370a0823190602401602060405180830381865afa158015610705573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107299190611758565b845152604051636eb1769f60e11b81526001600160a01b038781166004830152898116602483015282169063dd62ed3e90604401602060405180830381865afa15801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e9190611758565b845160200152604051636eb1769f60e11b81526001600160a01b0387811660048301528a8116602483015282169063dd62ed3e90604401602060405180830381865afa1580156107f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108169190611758565b60408581019190915251632c9aab9b60e11b81526001600160a01b038781166004830152831690635935573690602401602060405180830381865afa158015610863573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108879190611758565b84516060015260405163ce96cb7760e01b81526001600160a01b03878116600483015283169063ce96cb7790602401602060405180830381865afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190611758565b845160800152604051630684cb8960e31b81526001600160a01b0387811660048301528316906334265c4890602401602060405180830381865afa158015610943573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109679190611758565b845160a00152505b816001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d19190611758565b60808401526001600160a01b0381166307a2d13a6109f16012600a61186b565b6040518263ffffffff1660e01b8152600401610a0f91815260200190565b602060405180830381865afa158015610a2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a509190611758565b836020018181525050806001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abb9190611758565b836060018181525050816001600160a01b0316633d1b760b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190611758565b8360a0018181525050816001600160a01b0316632e9403886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b919190611758565b8360c0018181525050816001600160a01b03166308b8e7d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfc9190611758565b8360e0018181525050816001600160a01b031663568c11626040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c679190611758565b61010084015250909695505050505050565b610c81611205565b610c89611205565b60405163220386fb60e21b81526001600160a01b03878116600483015286919082169063880e1bec906024016040805180830381865afa158015610cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf591906118a6565b602084015282526040516353bac0b160e01b81526001600160a01b03888116600483015286916000918316906353bac0b19060240160a060405180830381865afa158015610d47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6b91906118ee565b9050600081608001519050806001600160a01b0316631a39d8ef6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610db4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd89190611758565b60808601526040516356fbd1cb60e11b81526001600160a01b0382169063adf7a39690610e0a9060009060040161197e565b602060405180830381865afa158015610e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4b9190611758565b6101008601526040516356fbd1cb60e11b81526001600160a01b0382169063adf7a39690610e7e9060019060040161197e565b602060405180830381865afa158015610e9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebf9190611758565b610120860152604051630530de8560e31b81526001600160a01b03821690632986f42890610ef29060019060040161197e565b602060405180830381865afa158015610f0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f339190611758565b604051630530de8560e31b81526001600160a01b03831690632986f42890610f609060009060040161197e565b602060405180830381865afa158015610f7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa19190611758565b610fab919061198c565b60a0860152606082015163ffffffff1660e086015260405163153623c960e11b81526001600160a01b038b81166004830152889190821690632a6c4792906024016040805180830381865afa158015611008573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102c91906118a6565b6060880152604087015250939998505050505050505050565b61106960405180606001604052806000815260200160008152602001600081525090565b61108d60405180606001604052806000815260200160008152602001600081525090565b60405163220386fb60e21b81526001600160a01b03868116600483015285919082169063880e1bec906024016040805180830381865afa1580156110d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f991906118a6565b602084015282526040516365ab438d60e11b815284906001600160a01b0382169063cb56871a90611131908a9060009060040161199f565b602060405180830381865afa15801561114e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111729190611758565b6040840152509095945050505050565b6040518061012001604052806111c76040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b038116811461126d57600080fd5b50565b6000806000806080858703121561128657600080fd5b843561129181611258565b935060208501356112a181611258565b925060408501356112b181611258565b915060608501356112c181611258565b939692955090935050565b6000806000606084860312156112e157600080fd5b83356112ec81611258565b925060208401356112fc81611258565b9150604084013561130c81611258565b809150509250925092565b6000806040838503121561132a57600080fd5b823561133581611258565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b6002811061136957611369611343565b9052565b815160e08201906004811061138457611384611343565b80835250602083015161139a6020840182611359565b5060018060a01b036040840151166040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b600080604083850312156113ee57600080fd5b82356113f981611258565b9150602083013561140981611258565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261143b57600080fd5b8135602067ffffffffffffffff8083111561145857611458611414565b8260051b604051601f19603f8301168101818110848211171561147d5761147d611414565b60405293845285810183019383810192508785111561149b57600080fd5b83870191505b848210156114c35781356114b481611258565b835291830191908301906114a1565b979650505050505050565b600080600080608085870312156114e457600080fd5b843567ffffffffffffffff8111156114fb57600080fd5b6115078782880161142a565b94505060208501356112a181611258565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b6020808252825182820181905260009190848201906040850190845b818110156115c1576115ad838551611518565b92840192610140929092019160010161159a565b50909695505050505050565b6000806000606084860312156115e257600080fd5b833567ffffffffffffffff8111156115f957600080fd5b6116058682870161142a565b93505060208401356112fc81611258565b6020808252825182820181905260009190848201906040850190845b818110156115c1576116598385518051825260208082015190830152604090810151910152565b9284019260609290920191600101611632565b81518152602080830151908201526040808301519082015260608101610318565b61014081016103188284611518565b8051600281106116ab57600080fd5b919050565b80516116ab81611258565b600060e082840312156116cd57600080fd5b60405160e0810181811067ffffffffffffffff821117156116f0576116f0611414565b60405282516004811061170257600080fd5b81526117106020840161169c565b6020820152611721604084016116b0565b6040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b60006020828403121561176a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156117c25781600019048211156117a8576117a8611771565b808516156117b557918102915b93841c939080029061178c565b509250929050565b6000826117d957506001610318565b816117e657506000610318565b81600181146117fc576002811461180657611822565b6001915050610318565b60ff84111561181757611817611771565b50506001821b610318565b5060208310610133831016604e8410600b8410161715611845575081810a610318565b61184f8383611787565b806000190482111561186357611863611771565b029392505050565b600061025883836117ca565b634e487b7160e01b600052603260045260246000fd5b60006001820161189f5761189f611771565b5060010190565b600080604083850312156118b957600080fd5b505080516020909101519092909150565b805180151581146116ab57600080fd5b805163ffffffff811681146116ab57600080fd5b600060a0828403121561190057600080fd5b60405160a0810181811067ffffffffffffffff8211171561192357611923611414565b60405261192f836118ca565b815261193d602084016118ca565b602082015261194e604084016118da565b604082015261195f606084016118da565b6060820152608083015161197281611258565b60808201529392505050565b602081016103188284611359565b8082018082111561031857610318611771565b6001600160a01b038316815260408101610258602083018461135956fea2646970667358221220882cd55083d7f3cb72d7505bb015e5a158ca283d5b1ff956af3d00d136dcaf5964736f6c63430008110033'

type SurgeUIConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: SurgeUIConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class SurgeUI__factory extends ContractFactory {
  constructor(...args: SurgeUIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<SurgeUI> {
    return super.deploy(overrides || {}) as Promise<SurgeUI>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): SurgeUI {
    return super.attach(address) as SurgeUI
  }
  override connect(signer: Signer): SurgeUI__factory {
    return super.connect(signer) as SurgeUI__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): SurgeUIInterface {
    return new utils.Interface(_abi) as SurgeUIInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SurgeUI {
    return new Contract(address, _abi, signerOrProvider) as SurgeUI
  }
}
