/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../common'
import type { SurgeUI, SurgeUIInterface } from '../../contracts/SurgeUI'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collectionAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollection',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollection',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'collectionAddresses',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollections',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollection[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'optionTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'getPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'enum PositionState',
            name: 'state',
            type: 'uint8',
          },
          {
            internalType: 'enum OptionType',
            name: 'optionType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'payer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'strikeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'premium',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct OptionPosition',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'wETHAddress',
        type: 'address',
      },
    ],
    name: 'getVault',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'wETHBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'wETHAllowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'balance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lockedBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxWithdraw',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'releaseTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct VaultLPToken',
            name: 'lpToken',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'wETHAllowance',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalSupply',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalAssets',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalActiveOptions',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executionFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalLockedAssets',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'unrealizedPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct Vault',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'wETHAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'userAddress',
        type: 'address',
      },
    ],
    name: 'getVaultWithUser',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'wETHBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'wETHAllowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'balance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lockedBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxWithdraw',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'releaseTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct VaultLPToken',
            name: 'lpToken',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'wETHAllowance',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalSupply',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalAssets',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalActiveOptions',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executionFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalLockedAssets',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'unrealizedPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct Vault',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b506116b5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630a29701d1461005c578063347c5d431461010f5780633adbb5af14610122578063777a30031461014257806399a1418914610162575b600080fd5b61006f61006a366004611048565b610182565b60408051825180518252602080820151818401528184015183850152606080830151818501526080808401518186015260a093840151848601529186015160c0808601919091529486015160e08086019190915290860151610100808601919091529186015161012085015291850151610140840152928401516101608301528301516101808201529101516101a08201526101c0015b60405180910390f35b61006f61011d3660046110a4565b61019f565b6101356101303660046110ef565b6101c0565b6040516101069190611145565b61015561015036600461121e565b61027f565b60405161010691906112df565b6101756101703660046110a4565b61035e565b6040516101069190611341565b61018a610f9d565b61019685858585610395565b95945050505050565b6101a7610f9d565b60006101b585858584610395565b9150505b9392505050565b61020a6040805160e0810190915280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b6040516352e5491f60e01b81526004810183905283906001600160a01b038216906352e5491f9060240160e060405180830381865afa158015610251573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610275919061137c565b9150505b92915050565b60606000845167ffffffffffffffff81111561029d5761029d6111b3565b6040519080825280602002602001820160405280156102f257816020015b6102df60405180606001604052806000815260200160008152602001600081525090565b8152602001906001900390816102bb5790505b50905060005b85518110156103555761032586828151811061031657610316611419565b60200260200101518686610a3f565b82828151811061033757610337611419565b6020026020010181905250808061034d90611445565b9150506102f8565b50949350505050565b61038260405180606001604052806000815260200160008152602001600081525090565b61038d848484610a3f565b949350505050565b61039d610f9d565b6103a5610f9d565b856001600160a01b038416156106db576040516370a0823160e01b81526001600160a01b038581166004830152869188918216906370a0823190602401602060405180830381865afa1580156103ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610423919061145e565b8451604090810191909152516370a0823160e01b81526001600160a01b0387811660048301528316906370a0823190602401602060405180830381865afa158015610472573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610496919061145e565b845152604051636eb1769f60e11b81526001600160a01b038781166004830152898116602483015283169063dd62ed3e90604401602060405180830381865afa1580156104e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050b919061145e565b845160200152604051636eb1769f60e11b81526001600160a01b0387811660048301528a8116602483015283169063dd62ed3e90604401602060405180830381865afa15801561055f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610583919061145e565b6020850152604051632c9aab9b60e11b81526001600160a01b038781166004830152821690635935573690602401602060405180830381865afa1580156105ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f2919061145e565b84516060015260405163ce96cb7760e01b81526001600160a01b03878116600483015282169063ce96cb7790602401602060405180830381865afa15801561063e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610662919061145e565b845160800152604051630684cb8960e31b81526001600160a01b0387811660048301528216906334265c4890602401602060405180830381865afa1580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d2919061145e565b845160a0015250505b806001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073d919061145e565b826060018181525050600080826001600160a01b0316633ac2a0326040518163ffffffff1660e01b8152600401600060405180830381865afa158015610787573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107af9190810190611477565b905060005b815181101561087e5761085f8a856001600160a01b03166353bac0b18585815181106107e2576107e2611419565b60200260200101516040518263ffffffff1660e01b815260040161081591906001600160a01b0391909116815260200190565b60a060405180830381865afa158015610832573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108569190611535565b60800151610b7c565b5161086a90846115c5565b92508061087681611445565b9150506107b4565b5081846080018181525050826001600160a01b0316633d1b760b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108eb919061145e565b8460a0018181525050826001600160a01b0316632e9403886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610932573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610956919061145e565b8460c0018181525050826001600160a01b03166308b8e7d06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561099d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c1919061145e565b8460e0018181525050826001600160a01b031663568c11626040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2c919061145e565b6101008501525091979650505050505050565b610a6360405180606001604052806000815260200160008152602001600081525090565b610a8760405180606001604052806000815260200160008152602001600081525090565b60405163220386fb60e21b81526001600160a01b03868116600483015285919082169063880e1bec906024016040805180830381865afa158015610acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af391906115d8565b602084015282526040516365ab438d60e11b815284906001600160a01b0382169063cb56871a90610b2b908a906000906004016115fc565b602060405180830381865afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c919061145e565b6040840152509095945050505050565b60608282600042815b836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be7919061145e565b811015610d8857604051634f6ccce760e01b8152600481018290526000906001600160a01b03861690634f6ccce790602401602060405180830381865afa158015610c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5a919061145e565b6040516352e5491f60e01b8152600481018290529091506000906001600160a01b038716906352e5491f9060240160e060405180830381865afa158015610ca5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc9919061137c565b9050600281516003811115610ce057610ce061111b565b148015610d6457506060810151604051634674dce360e01b815285916001600160a01b038a1691634674dce391610d1d9160040190815260200190565b608060405180830381865afa158015610d3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5e9190611619565b60600151115b15610d7557610d7285611445565b94505b505080610d8190611445565b9050610b85565b508167ffffffffffffffff811115610da257610da26111b3565b604051908082528060200260200182016040528015610dcb578160200160208202803683370190505b5094506000805b83821015610f9157604051634f6ccce760e01b8152600481018390526000906001600160a01b03871690634f6ccce790602401602060405180830381865afa158015610e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e46919061145e565b6040516352e5491f60e01b8152600481018290529091506000906001600160a01b038816906352e5491f9060240160e060405180830381865afa158015610e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb5919061137c565b9050600281516003811115610ecc57610ecc61111b565b148015610f5057506060810151604051634674dce360e01b815286916001600160a01b038b1691634674dce391610f099160040190815260200190565b608060405180830381865afa158015610f26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4a9190611619565b60600151115b15610f7f5781898481518110610f6857610f68611419565b6020908102919091010152610f7c83611445565b92505b610f8884611445565b93505050610dd2565b50505050505092915050565b604051806101200160405280610fe26040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b038116811461103557600080fd5b50565b803561104381611020565b919050565b6000806000806080858703121561105e57600080fd5b843561106981611020565b9350602085013561107981611020565b9250604085013561108981611020565b9150606085013561109981611020565b939692955090935050565b6000806000606084860312156110b957600080fd5b83356110c481611020565b925060208401356110d481611020565b915060408401356110e481611020565b809150509250925092565b6000806040838503121561110257600080fd5b823561110d81611020565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b600281106111415761114161111b565b9052565b815160e08201906004811061115c5761115c61111b565b8083525060208301516111726020840182611131565b5060018060a01b036040840151166040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156111f2576111f26111b3565b604052919050565b600067ffffffffffffffff821115611214576112146111b3565b5060051b60200190565b60008060006060848603121561123357600080fd5b833567ffffffffffffffff81111561124a57600080fd5b8401601f8101861361125b57600080fd5b8035602061127061126b836111fa565b6111c9565b82815260059290921b8301810191818101908984111561128f57600080fd5b938201935b838510156112b65784356112a781611020565b82529382019390820190611294565b96506112c59050878201611038565b94505050506112d660408501611038565b90509250925092565b6020808252825182820181905260009190848201906040850190845b81811015611335576113228385518051825260208082015190830152604090810151910152565b92840192606092909201916001016112fb565b50909695505050505050565b81518152602080830151908201526040808301519082015260608101610279565b80516002811061104357600080fd5b805161104381611020565b600060e0828403121561138e57600080fd5b60405160e0810181811067ffffffffffffffff821117156113b1576113b16111b3565b6040528251600481106113c357600080fd5b81526113d160208401611362565b60208201526113e260408401611371565b6040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114575761145761142f565b5060010190565b60006020828403121561147057600080fd5b5051919050565b6000602080838503121561148a57600080fd5b825167ffffffffffffffff8111156114a157600080fd5b8301601f810185136114b257600080fd5b80516114c061126b826111fa565b81815260059190911b820183019083810190878311156114df57600080fd5b928401925b828410156115065783516114f781611020565b825292840192908401906114e4565b979650505050505050565b8051801515811461104357600080fd5b805163ffffffff8116811461104357600080fd5b600060a0828403121561154757600080fd5b60405160a0810181811067ffffffffffffffff8211171561156a5761156a6111b3565b60405261157683611511565b815261158460208401611511565b602082015261159560408401611521565b60408201526115a660608401611521565b606082015260808301516115b981611020565b60808201529392505050565b808201808211156102795761027961142f565b600080604083850312156115eb57600080fd5b505080516020909101519092909150565b6001600160a01b0383168152604081016101b96020830184611131565b60006080828403121561162b57600080fd5b6040516080810181811067ffffffffffffffff8211171561164e5761164e6111b3565b806040525082518152602083015160208201526040830151604082015260608301516060820152809150509291505056fea264697066735822122044b64767f5c520a895890d4b564d06271ac7bdd247b00a1a6800b62efacd72de64736f6c63430008110033'

type SurgeUIConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: SurgeUIConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class SurgeUI__factory extends ContractFactory {
  constructor(...args: SurgeUIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<SurgeUI> {
    return super.deploy(overrides || {}) as Promise<SurgeUI>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): SurgeUI {
    return super.attach(address) as SurgeUI
  }
  override connect(signer: Signer): SurgeUI__factory {
    return super.connect(signer) as SurgeUI__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): SurgeUIInterface {
    return new utils.Interface(_abi) as SurgeUIInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SurgeUI {
    return new Contract(address, _abi, signerOrProvider) as SurgeUI
  }
}
