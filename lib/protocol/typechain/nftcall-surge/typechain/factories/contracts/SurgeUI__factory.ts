/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../common'
import type { SurgeUI, SurgeUIInterface } from '../../contracts/SurgeUI'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
    ],
    name: 'getAnalytics',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'TVL',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'ncETHPrice',
            type: 'uint256',
          },
        ],
        internalType: 'struct Analytics',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collectionAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollection',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollection',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collectionAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'riskCacheAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollectionStaus',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'delta',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'openInterest',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalLockedValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'collectionWeight',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'callOptionAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'putOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollectionStaus',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'collectionAddresses',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollections',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollection[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'collectionAddresses',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'riskCacheAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollectionsStaus',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'delta',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'openInterest',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalLockedValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'collectionWeight',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'callOptionAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'putOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollectionStaus[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'optionTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'getPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'enum PositionState',
            name: 'state',
            type: 'uint8',
          },
          {
            internalType: 'enum OptionType',
            name: 'optionType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'payer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'strikeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'premium',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct OptionPosition',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'wETHAddress',
        type: 'address',
      },
    ],
    name: 'getVault',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'wETHBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'wETHAllowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'balance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'allowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lockedBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxWithdraw',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'releaseTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct VaultLPToken',
            name: 'lpToken',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'ncETHPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'wETHAllowance',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalSupply',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalAssets',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executionFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalLockedAssets',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'unrealizedPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct Vault',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'wETHAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'userAddress',
        type: 'address',
      },
    ],
    name: 'getVaultWithUser',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'wETHBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'wETHAllowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'balance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'allowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lockedBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxWithdraw',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'releaseTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct VaultLPToken',
            name: 'lpToken',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'ncETHPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'wETHAllowance',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalSupply',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalAssets',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executionFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalLockedAssets',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'unrealizedPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct Vault',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b50611a9a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806369c34f661161005b57806369c34f6614610117578063777a30031461013757806399a1418914610157578063d823c3eb1461017757600080fd5b80630a29701d1461008d578063347c5d43146100b65780633adbb5af146100c95780633bf42120146100e9575b600080fd5b6100a061009b366004611265565b610197565b6040516100ad91906112c1565b60405180910390f35b6100a06100c4366004611374565b6101b4565b6100dc6100d73660046113bf565b6101d5565b6040516100ad9190611415565b6100fc6100f7366004611483565b610294565b604080518251815260209283015192810192909252016100ad565b61012a610125366004611576565b6103af565b6040516100ad9190611626565b61014a610145366004611675565b610474565b6040516100ad91906116be565b61016a610165366004611374565b610553565b6040516100ad9190611714565b61018a610185366004611265565b61058a565b6040516100ad9190611735565b61019f611170565b6101ab8585858561059e565b95945050505050565b6101bc611170565b60006101ca8585858461059e565b9150505b9392505050565b61021f6040805160e0810190915280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b6040516352e5491f60e01b81526004810183905283906001600160a01b038216906352e5491f9060240160e060405180830381865afa158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190611763565b9150505b92915050565b604080518082019091526000808252602082015260408051808201909152600080825260208201526000849050806001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103239190611800565b8252836001600160a01b0381166307a2d13a6103416012600a611913565b6040518263ffffffff1660e01b815260040161035f91815260200190565b602060405180830381865afa15801561037c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a09190611800565b60208401525090949350505050565b60606000855167ffffffffffffffff8111156103cd576103cd6114bc565b60405190808252806020026020018201604052801561040657816020015b6103f36111fa565b8152602001906001900390816103eb5790505b50905060005b865181101561046a5761043a87828151811061042a5761042a61191f565b6020026020010151878787610c67565b82828151811061044c5761044c61191f565b6020026020010181905250808061046290611935565b91505061040c565b5095945050505050565b60606000845167ffffffffffffffff811115610492576104926114bc565b6040519080825280602002602001820160405280156104e757816020015b6104d460405180606001604052806000815260200160008152602001600081525090565b8152602001906001900390816104b05790505b50905060005b855181101561054a5761051a86828151811061050b5761050b61191f565b60200260200101518686611033565b82828151811061052c5761052c61191f565b6020026020010181905250808061054290611935565b9150506104ed565b50949350505050565b61057760405180606001604052806000815260200160008152602001600081525090565b610582848484611033565b949350505050565b6105926111fa565b6101ab85858585610c67565b6105a6611170565b6105ae611170565b85856001600160a01b0385161561095d576040516370a0823160e01b81526001600160a01b0386811660048301528791908316906370a0823190602401602060405180830381865afa158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190611800565b845160409081019190915251636eb1769f60e11b81526001600160a01b0387811660048301528a8116602483015283169063dd62ed3e90604401602060405180830381865afa158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a79190611800565b8451606001526040516370a0823160e01b81526001600160a01b0387811660048301528216906370a0823190602401602060405180830381865afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107179190611800565b845152604051636eb1769f60e11b81526001600160a01b038781166004830152898116602483015282169063dd62ed3e90604401602060405180830381865afa158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c9190611800565b845160200152604051636eb1769f60e11b81526001600160a01b0387811660048301528a8116602483015282169063dd62ed3e90604401602060405180830381865afa1580156107e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108049190611800565b60408581019190915251632c9aab9b60e11b81526001600160a01b038781166004830152831690635935573690602401602060405180830381865afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108759190611800565b84516080015260405163ce96cb7760e01b81526001600160a01b03878116600483015283169063ce96cb7790602401602060405180830381865afa1580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e59190611800565b845160a00152604051630684cb8960e31b81526001600160a01b0387811660048301528316906334265c4890602401602060405180830381865afa158015610931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109559190611800565b845160c00152505b816001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa15801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf9190611800565b60808401526001600160a01b0381166307a2d13a6109df6012600a611913565b6040518263ffffffff1660e01b81526004016109fd91815260200190565b602060405180830381865afa158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e9190611800565b836020018181525050806001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa99190611800565b836060018181525050816001600160a01b0316633d1b760b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610af0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b149190611800565b8360a0018181525050816001600160a01b0316632e9403886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7f9190611800565b8360c0018181525050816001600160a01b03166308b8e7d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bea9190611800565b8360e0018181525050816001600160a01b031663568c11626040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c559190611800565b61010084015250909695505050505050565b610c6f6111fa565b610c776111fa565b60405163220386fb60e21b81526001600160a01b03878116600483015286919082169063880e1bec906024016040805180830381865afa158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce3919061194e565b602084015282526040516353bac0b160e01b81526001600160a01b03888116600483015286916000918316906353bac0b19060240160a060405180830381865afa158015610d35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d599190611996565b9050600081608001519050806001600160a01b0316631a39d8ef6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc69190611800565b60808601526040516356fbd1cb60e11b81526001600160a01b0382169063adf7a39690610df890600090600401611a26565b602060405180830381865afa158015610e15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e399190611800565b6101008601526040516356fbd1cb60e11b81526001600160a01b0382169063adf7a39690610e6c90600190600401611a26565b602060405180830381865afa158015610e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ead9190611800565b610120860152604051630530de8560e31b81526001600160a01b03821690632986f42890610ee090600190600401611a26565b602060405180830381865afa158015610efd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f219190611800565b604051630530de8560e31b81526001600160a01b03831690632986f42890610f4e90600090600401611a26565b602060405180830381865afa158015610f6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8f9190611800565b610f999190611a34565b60a0860152606082015163ffffffff1660e086015260405163153623c960e11b81526001600160a01b038b81166004830152889190821690632a6c4792906024016040805180830381865afa158015610ff6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101a919061194e565b6060880152604087015250939998505050505050505050565b61105760405180606001604052806000815260200160008152602001600081525090565b61107b60405180606001604052806000815260200160008152602001600081525090565b60405163220386fb60e21b81526001600160a01b03868116600483015285919082169063880e1bec906024016040805180830381865afa1580156110c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e7919061194e565b602084015282526040516365ab438d60e11b815284906001600160a01b0382169063cb56871a9061111f908a90600090600401611a47565b602060405180830381865afa15801561113c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111609190611800565b6040840152509095945050505050565b6040518061012001604052806111bc6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b038116811461126257600080fd5b50565b6000806000806080858703121561127b57600080fd5b84356112868161124d565b935060208501356112968161124d565b925060408501356112a68161124d565b915060608501356112b68161124d565b939692955090935050565b60006101e082019050611314828451805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b602083015160e0830152604083015161010081818501526060850151610120850152608085015161014085015260a085015161016085015260c085015161018085015260e08501516101a0850152808501516101c0850152505092915050565b60008060006060848603121561138957600080fd5b83356113948161124d565b925060208401356113a48161124d565b915060408401356113b48161124d565b809150509250925092565b600080604083850312156113d257600080fd5b82356113dd8161124d565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b60028110611411576114116113eb565b9052565b815160e08201906004811061142c5761142c6113eb565b8083525060208301516114426020840182611401565b5060018060a01b036040840151166040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6000806040838503121561149657600080fd5b82356114a18161124d565b915060208301356114b18161124d565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126114e357600080fd5b8135602067ffffffffffffffff80831115611500576115006114bc565b8260051b604051601f19603f83011681018181108482111715611525576115256114bc565b60405293845285810183019383810192508785111561154357600080fd5b83870191505b8482101561156b57813561155c8161124d565b83529183019190830190611549565b979650505050505050565b6000806000806080858703121561158c57600080fd5b843567ffffffffffffffff8111156115a357600080fd5b6115af878288016114d2565b94505060208501356112968161124d565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b6020808252825182820181905260009190848201906040850190845b81811015611669576116558385516115c0565b928401926101409290920191600101611642565b50909695505050505050565b60008060006060848603121561168a57600080fd5b833567ffffffffffffffff8111156116a157600080fd5b6116ad868287016114d2565b93505060208401356113a48161124d565b6020808252825182820181905260009190848201906040850190845b81811015611669576117018385518051825260208082015190830152604090810151910152565b92840192606092909201916001016116da565b8151815260208083015190820152604080830151908201526060810161028e565b610140810161028e82846115c0565b80516002811061175357600080fd5b919050565b80516117538161124d565b600060e0828403121561177557600080fd5b60405160e0810181811067ffffffffffffffff82111715611798576117986114bc565b6040528251600481106117aa57600080fd5b81526117b860208401611744565b60208201526117c960408401611758565b6040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b60006020828403121561181257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561186a57816000190482111561185057611850611819565b8085161561185d57918102915b93841c9390800290611834565b509250929050565b6000826118815750600161028e565b8161188e5750600061028e565b81600181146118a457600281146118ae576118ca565b600191505061028e565b60ff8411156118bf576118bf611819565b50506001821b61028e565b5060208310610133831016604e8410600b84101617156118ed575081810a61028e565b6118f7838361182f565b806000190482111561190b5761190b611819565b029392505050565b60006101ce8383611872565b634e487b7160e01b600052603260045260246000fd5b60006001820161194757611947611819565b5060010190565b6000806040838503121561196157600080fd5b505080516020909101519092909150565b8051801515811461175357600080fd5b805163ffffffff8116811461175357600080fd5b600060a082840312156119a857600080fd5b60405160a0810181811067ffffffffffffffff821117156119cb576119cb6114bc565b6040526119d783611972565b81526119e560208401611972565b60208201526119f660408401611982565b6040820152611a0760608401611982565b60608201526080830151611a1a8161124d565b60808201529392505050565b6020810161028e8284611401565b8082018082111561028e5761028e611819565b6001600160a01b0383168152604081016101ce602083018461140156fea26469706673582212208f5424588d1039c4de5fce3fe2e9976c478bae0de137469ee47cee9c15e432f564736f6c63430008110033'

type SurgeUIConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: SurgeUIConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class SurgeUI__factory extends ContractFactory {
  constructor(...args: SurgeUIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<SurgeUI> {
    return super.deploy(overrides || {}) as Promise<SurgeUI>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): SurgeUI {
    return super.attach(address) as SurgeUI
  }
  override connect(signer: Signer): SurgeUI__factory {
    return super.connect(signer) as SurgeUI__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): SurgeUIInterface {
    return new utils.Interface(_abi) as SurgeUIInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SurgeUI {
    return new Contract(address, _abi, signerOrProvider) as SurgeUI
  }
}
