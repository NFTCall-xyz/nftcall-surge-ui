/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { SurgeUI, SurgeUIInterface } from '../../contracts/SurgeUI'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
    ],
    name: 'getAnalytics',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'TVL',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'ncETHPrice',
            type: 'uint256',
          },
        ],
        internalType: 'struct Analytics',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collectionAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollection',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollection',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collectionAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'riskCacheAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollectionStaus',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'delta',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'openInterest',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalLockedValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'collectionWeight',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'callOptionAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'putOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollectionStaus',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'collectionAddresses',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollections',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollection[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'collectionAddresses',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'riskCacheAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollectionsStaus',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'delta',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'openInterest',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalLockedValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'collectionWeight',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'callOptionAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'putOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollectionStaus[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'optionTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'getPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'enum PositionState',
            name: 'state',
            type: 'uint8',
          },
          {
            internalType: 'enum OptionType',
            name: 'optionType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'payer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'strikeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'premium',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct OptionPosition',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'wETHAddress',
        type: 'address',
      },
    ],
    name: 'getVault',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'wETHBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'wETHAllowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'balance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'allowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lockedBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxWithdraw',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxRedeem',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'releaseTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct VaultLPToken',
            name: 'lpToken',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'ncETHPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'wETHAllowance',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalSupply',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalAssets',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executionFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'reserveRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'feeRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'profitFeeRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'timeWindowForActivation',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumLockRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumCallStrikePriceRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPutStrikePriceRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minimumCallStrikePriceRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minimumPutStrikePriceRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumDuration',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minimumDuration',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'timeScale',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalLockedAssets',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'unrealizedPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct Vault',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'wETHAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'userAddress',
        type: 'address',
      },
    ],
    name: 'getVaultWithUser',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'wETHBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'wETHAllowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'balance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'allowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lockedBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxWithdraw',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxRedeem',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'releaseTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct VaultLPToken',
            name: 'lpToken',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'ncETHPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'wETHAllowance',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalSupply',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalAssets',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executionFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'reserveRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'feeRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'profitFeeRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'timeWindowForActivation',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumLockRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumCallStrikePriceRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPutStrikePriceRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minimumCallStrikePriceRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minimumPutStrikePriceRatio',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumDuration',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minimumDuration',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'timeScale',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalLockedAssets',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'unrealizedPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct Vault',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b50612123806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806369c34f661161005b57806369c34f6614610117578063777a30031461013757806399a1418914610157578063d823c3eb1461017757600080fd5b80630a29701d1461008d578063347c5d43146100b65780633adbb5af146100c95780633bf42120146100e9575b600080fd5b6100a061009b366004611840565b610197565b6040516100ad919061189c565b60405180910390f35b6100a06100c43660046119fd565b6101b4565b6100dc6100d7366004611a48565b6101d5565b6040516100ad9190611a9e565b6100fc6100f7366004611b0c565b610294565b604080518251815260209283015192810192909252016100ad565b61012a610125366004611bff565b6103af565b6040516100ad9190611caf565b61014a610145366004611cfe565b610474565b6040516100ad9190611d47565b61016a6101653660046119fd565b610553565b6040516100ad9190611d9d565b61018a610185366004611840565b61058a565b6040516100ad9190611dbe565b61019f6116ef565b6101ab8585858561059e565b95945050505050565b6101bc6116ef565b60006101ca8585858461059e565b9150505b9392505050565b61021f6040805160e0810190915280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b6040516352e5491f60e01b81526004810183905283906001600160a01b038216906352e5491f9060240160e060405180830381865afa158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190611dec565b9150505b92915050565b604080518082019091526000808252602082015260408051808201909152600080825260208201526000849050806001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103239190611e89565b8252836001600160a01b0381166307a2d13a6103416012600a611f9c565b6040518263ffffffff1660e01b815260040161035f91815260200190565b602060405180830381865afa15801561037c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a09190611e89565b60208401525090949350505050565b60606000855167ffffffffffffffff8111156103cd576103cd611b45565b60405190808252806020026020018201604052801561040657816020015b6103f36117d5565b8152602001906001900390816103eb5790505b50905060005b865181101561046a5761043a87828151811061042a5761042a611fa8565b60200260200101518787876111e6565b82828151811061044c5761044c611fa8565b6020026020010181905250808061046290611fbe565b91505061040c565b5095945050505050565b60606000845167ffffffffffffffff81111561049257610492611b45565b6040519080825280602002602001820160405280156104e757816020015b6104d460405180606001604052806000815260200160008152602001600081525090565b8152602001906001900390816104b05790505b50905060005b855181101561054a5761051a86828151811061050b5761050b611fa8565b602002602001015186866115b2565b82828151811061052c5761052c611fa8565b6020026020010181905250808061054290611fbe565b9150506104ed565b50949350505050565b61057760405180606001604052806000815260200160008152602001600081525090565b6105828484846115b2565b949350505050565b6105926117d5565b6101ab858585856111e6565b6105a66116ef565b6105ae6116ef565b85856001600160a01b038516156109cd576040516370a0823160e01b81526001600160a01b0386811660048301528791908316906370a0823190602401602060405180830381865afa158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190611e89565b845160409081019190915251636eb1769f60e11b81526001600160a01b0387811660048301528a8116602483015283169063dd62ed3e90604401602060405180830381865afa158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a79190611e89565b8451606001526040516370a0823160e01b81526001600160a01b0387811660048301528216906370a0823190602401602060405180830381865afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107179190611e89565b845152604051636eb1769f60e11b81526001600160a01b038781166004830152898116602483015282169063dd62ed3e90604401602060405180830381865afa158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c9190611e89565b845160200152604051636eb1769f60e11b81526001600160a01b0387811660048301528a8116602483015282169063dd62ed3e90604401602060405180830381865afa1580156107e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108049190611e89565b60408581019190915251632c9aab9b60e11b81526001600160a01b038781166004830152831690635935573690602401602060405180830381865afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108759190611e89565b84516080015260405163ce96cb7760e01b81526001600160a01b03878116600483015283169063ce96cb7790602401602060405180830381865afa1580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e59190611e89565b845160a00152604051636c82bbbf60e11b81526001600160a01b03878116600483015283169063d905777e90602401602060405180830381865afa158015610931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109559190611e89565b845160c00152604051630684cb8960e31b81526001600160a01b0387811660048301528316906334265c4890602401602060405180830381865afa1580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190611e89565b845160e00152505b816001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2f9190611e89565b60808401526001600160a01b0381166307a2d13a610a4f6012600a611f9c565b6040518263ffffffff1660e01b8152600401610a6d91815260200190565b602060405180830381865afa158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae9190611e89565b836020018181525050806001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610af5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b199190611e89565b836060018181525050816001600160a01b0316633d1b760b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b849190611e89565b8360a0018181525050816001600160a01b031663e37dbfd96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bef9190611e89565b8360c0018181525050816001600160a01b03166341744dd46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5a9190611e89565b8360e0018181525050816001600160a01b031663c4a56d2c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc59190611e89565b83610100018181525050816001600160a01b031663823024476040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d319190611e89565b83610120018181525050816001600160a01b031663ae7de94d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9d9190611e89565b83610140018181525050816001600160a01b0316637b2285dd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e099190611e89565b83610160018181525050816001600160a01b0316635702a9926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e759190611e89565b836101a0018181525050816001600160a01b03166319f00a6d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ebd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee19190611e89565b83610180018181525050816001600160a01b031662728dda6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4c9190611e89565b836101c0018181525050816001600160a01b031663928c4bbd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb89190611e89565b836101e0018181525050816001600160a01b0316632d28e89d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611000573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110249190611e89565b83610200018181525050816001600160a01b031663ec8e69da6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561106c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110909190611e89565b83610220018181525050816001600160a01b0316632e9403886040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fc9190611e89565b83610240018181525050816001600160a01b03166308b8e7d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611144573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111689190611e89565b83610260018181525050816001600160a01b031663568c11626040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d49190611e89565b61028084015250909695505050505050565b6111ee6117d5565b6111f66117d5565b60405163220386fb60e21b81526001600160a01b03878116600483015286919082169063880e1bec906024016040805180830381865afa15801561123e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112629190611fd7565b602084015282526040516353bac0b160e01b81526001600160a01b03888116600483015286916000918316906353bac0b19060240160a060405180830381865afa1580156112b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d8919061201f565b9050600081608001519050806001600160a01b0316631a39d8ef6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611321573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113459190611e89565b60808601526040516356fbd1cb60e11b81526001600160a01b0382169063adf7a39690611377906000906004016120af565b602060405180830381865afa158015611394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b89190611e89565b6101008601526040516356fbd1cb60e11b81526001600160a01b0382169063adf7a396906113eb906001906004016120af565b602060405180830381865afa158015611408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142c9190611e89565b610120860152604051630530de8560e31b81526001600160a01b03821690632986f4289061145f906001906004016120af565b602060405180830381865afa15801561147c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a09190611e89565b604051630530de8560e31b81526001600160a01b03831690632986f428906114cd906000906004016120af565b602060405180830381865afa1580156114ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150e9190611e89565b61151891906120bd565b60a0860152606082015163ffffffff1660e086015260405163153623c960e11b81526001600160a01b038b81166004830152889190821690632a6c4792906024016040805180830381865afa158015611575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115999190611fd7565b6060880152604087015250939998505050505050505050565b6115d660405180606001604052806000815260200160008152602001600081525090565b6115fa60405180606001604052806000815260200160008152602001600081525090565b60405163220386fb60e21b81526001600160a01b03868116600483015285919082169063880e1bec906024016040805180830381865afa158015611642573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116669190611fd7565b602084015282526040516365ab438d60e11b815284906001600160a01b0382169063cb56871a9061169e908a906000906004016120d0565b602060405180830381865afa1580156116bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116df9190611e89565b6040840152509095945050505050565b604051806102a0016040528061174360405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b038116811461183d57600080fd5b50565b6000806000806080858703121561185657600080fd5b843561186181611828565b9350602085013561187181611828565b9250604085013561188181611828565b9150606085013561189181611828565b939692955090935050565b6000610380820190506118f9828451805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b60208301516101008381019190915260408401516101208085019190915260608501516101408086019190915260808601516101608087019190915260a08701516101808088019190915260c08801516101a08089019190915260e08901516101c0808a0191909152958901516101e0808a019190915294890151610200808a019190915293890151610220808a019190915292890151610240808a019190915291890151610260808a019190915290890151610280808a0191909152958901516102a0890152938801516102c0880152918701516102e0870152860151610300860152850151610320850152840151610340840152909201516103609091015290565b600080600060608486031215611a1257600080fd5b8335611a1d81611828565b92506020840135611a2d81611828565b91506040840135611a3d81611828565b809150509250925092565b60008060408385031215611a5b57600080fd5b8235611a6681611828565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b60028110611a9a57611a9a611a74565b9052565b815160e082019060048110611ab557611ab5611a74565b808352506020830151611acb6020840182611a8a565b5060018060a01b036040840151166040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b60008060408385031215611b1f57600080fd5b8235611b2a81611828565b91506020830135611b3a81611828565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611b6c57600080fd5b8135602067ffffffffffffffff80831115611b8957611b89611b45565b8260051b604051601f19603f83011681018181108482111715611bae57611bae611b45565b604052938452858101830193838101925087851115611bcc57600080fd5b83870191505b84821015611bf4578135611be581611828565b83529183019190830190611bd2565b979650505050505050565b60008060008060808587031215611c1557600080fd5b843567ffffffffffffffff811115611c2c57600080fd5b611c3887828801611b5b565b945050602085013561187181611828565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b6020808252825182820181905260009190848201906040850190845b81811015611cf257611cde838551611c49565b928401926101409290920191600101611ccb565b50909695505050505050565b600080600060608486031215611d1357600080fd5b833567ffffffffffffffff811115611d2a57600080fd5b611d3686828701611b5b565b9350506020840135611a2d81611828565b6020808252825182820181905260009190848201906040850190845b81811015611cf257611d8a8385518051825260208082015190830152604090810151910152565b9284019260609290920191600101611d63565b8151815260208083015190820152604080830151908201526060810161028e565b610140810161028e8284611c49565b805160028110611ddc57600080fd5b919050565b8051611ddc81611828565b600060e08284031215611dfe57600080fd5b60405160e0810181811067ffffffffffffffff82111715611e2157611e21611b45565b604052825160048110611e3357600080fd5b8152611e4160208401611dcd565b6020820152611e5260408401611de1565b6040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b600060208284031215611e9b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611ef3578160001904821115611ed957611ed9611ea2565b80851615611ee657918102915b93841c9390800290611ebd565b509250929050565b600082611f0a5750600161028e565b81611f175750600061028e565b8160018114611f2d5760028114611f3757611f53565b600191505061028e565b60ff841115611f4857611f48611ea2565b50506001821b61028e565b5060208310610133831016604e8410600b8410161715611f76575081810a61028e565b611f808383611eb8565b8060001904821115611f9457611f94611ea2565b029392505050565b60006101ce8383611efb565b634e487b7160e01b600052603260045260246000fd5b600060018201611fd057611fd0611ea2565b5060010190565b60008060408385031215611fea57600080fd5b505080516020909101519092909150565b80518015158114611ddc57600080fd5b805163ffffffff81168114611ddc57600080fd5b600060a0828403121561203157600080fd5b60405160a0810181811067ffffffffffffffff8211171561205457612054611b45565b60405261206083611ffb565b815261206e60208401611ffb565b602082015261207f6040840161200b565b60408201526120906060840161200b565b606082015260808301516120a381611828565b60808201529392505050565b6020810161028e8284611a8a565b8082018082111561028e5761028e611ea2565b6001600160a01b0383168152604081016101ce6020830184611a8a56fea2646970667358221220e862df7c4551564096d54276d8e4dd5d9962c7ce37f3058520281155b608ffd164736f6c63430008110033'

type SurgeUIConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: SurgeUIConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class SurgeUI__factory extends ContractFactory {
  constructor(...args: SurgeUIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<SurgeUI> {
    return super.deploy(overrides || {}) as Promise<SurgeUI>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: string }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): SurgeUI {
    return super.attach(address) as SurgeUI
  }
  override connect(signer: Signer): SurgeUI__factory {
    return super.connect(signer) as SurgeUI__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): SurgeUIInterface {
    return new utils.Interface(_abi) as SurgeUIInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SurgeUI {
    return new Contract(address, _abi, signerOrProvider) as SurgeUI
  }
}
