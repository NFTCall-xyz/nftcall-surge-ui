/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { SurgeUI, SurgeUIInterface } from '../../contracts/SurgeUI'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
    ],
    name: 'getAnalytics',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'TVL',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'ncETHPrice',
            type: 'uint256',
          },
        ],
        internalType: 'struct Analytics',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collectionAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollection',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollection',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collectionAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'riskCacheAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollectionStaus',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'delta',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'openInterest',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalLockedValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'collectionWeight',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'callOptionAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'putOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollectionStaus',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'collectionAddresses',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollections',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollection[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'collectionAddresses',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'riskCacheAddress',
        type: 'address',
      },
    ],
    name: 'getNFTCollectionsStaus',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'vol',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'delta',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'openInterest',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'optionTokenTotalLockedValue',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'collectionWeight',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'callOptionAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'putOptionAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTCollectionStaus[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'optionTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'getPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'enum PositionState',
            name: 'state',
            type: 'uint8',
          },
          {
            internalType: 'enum OptionType',
            name: 'optionType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'payer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'strikeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'premium',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct OptionPosition',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'wETHAddress',
        type: 'address',
      },
    ],
    name: 'getVault',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'wETHBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'wETHAllowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'balance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'allowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lockedBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxWithdraw',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxRedeem',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'releaseTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct VaultLPToken',
            name: 'lpToken',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'ncETHPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'wETHAllowance',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalSupply',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalAssets',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executionFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalLockedAssets',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'unrealizedPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct Vault',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lpTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'wETHAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'userAddress',
        type: 'address',
      },
    ],
    name: 'getVaultWithUser',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'wETHBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'wETHAllowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'balance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'allowance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'lockedBalance',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxWithdraw',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxRedeem',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'releaseTime',
                type: 'uint256',
              },
            ],
            internalType: 'struct VaultLPToken',
            name: 'lpToken',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'ncETHPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'wETHAllowance',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalSupply',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalAssets',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executionFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalLockedAssets',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'unrealizedPNL',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'unrealizedPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct Vault',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b50611b1b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806369c34f661161005b57806369c34f6614610117578063777a30031461013757806399a1418914610157578063d823c3eb1461017757600080fd5b80630a29701d1461008d578063347c5d43146100b65780633adbb5af146100c95780633bf42120146100e9575b600080fd5b6100a061009b3660046112dd565b610197565b6040516100ad9190611339565b60405180910390f35b6100a06100c43660046113f5565b6101b4565b6100dc6100d7366004611440565b6101d5565b6040516100ad9190611496565b6100fc6100f7366004611504565b610294565b604080518251815260209283015192810192909252016100ad565b61012a6101253660046115f7565b6103af565b6040516100ad91906116a7565b61014a6101453660046116f6565b610474565b6040516100ad919061173f565b61016a6101653660046113f5565b610553565b6040516100ad9190611795565b61018a6101853660046112dd565b61058a565b6040516100ad91906117b6565b61019f6111e0565b6101ab8585858561059e565b95945050505050565b6101bc6111e0565b60006101ca8585858461059e565b9150505b9392505050565b61021f6040805160e0810190915280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b6040516352e5491f60e01b81526004810183905283906001600160a01b038216906352e5491f9060240160e060405180830381865afa158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a91906117e4565b9150505b92915050565b604080518082019091526000808252602082015260408051808201909152600080825260208201526000849050806001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103239190611881565b8252836001600160a01b0381166307a2d13a6103416012600a611994565b6040518263ffffffff1660e01b815260040161035f91815260200190565b602060405180830381865afa15801561037c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a09190611881565b60208401525090949350505050565b60606000855167ffffffffffffffff8111156103cd576103cd61153d565b60405190808252806020026020018201604052801561040657816020015b6103f3611272565b8152602001906001900390816103eb5790505b50905060005b865181101561046a5761043a87828151811061042a5761042a6119a0565b6020026020010151878787610cd7565b82828151811061044c5761044c6119a0565b60200260200101819052508080610462906119b6565b91505061040c565b5095945050505050565b60606000845167ffffffffffffffff8111156104925761049261153d565b6040519080825280602002602001820160405280156104e757816020015b6104d460405180606001604052806000815260200160008152602001600081525090565b8152602001906001900390816104b05790505b50905060005b855181101561054a5761051a86828151811061050b5761050b6119a0565b602002602001015186866110a3565b82828151811061052c5761052c6119a0565b60200260200101819052508080610542906119b6565b9150506104ed565b50949350505050565b61057760405180606001604052806000815260200160008152602001600081525090565b6105828484846110a3565b949350505050565b610592611272565b6101ab85858585610cd7565b6105a66111e0565b6105ae6111e0565b85856001600160a01b038516156109cd576040516370a0823160e01b81526001600160a01b0386811660048301528791908316906370a0823190602401602060405180830381865afa158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190611881565b845160409081019190915251636eb1769f60e11b81526001600160a01b0387811660048301528a8116602483015283169063dd62ed3e90604401602060405180830381865afa158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a79190611881565b8451606001526040516370a0823160e01b81526001600160a01b0387811660048301528216906370a0823190602401602060405180830381865afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107179190611881565b845152604051636eb1769f60e11b81526001600160a01b038781166004830152898116602483015282169063dd62ed3e90604401602060405180830381865afa158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c9190611881565b845160200152604051636eb1769f60e11b81526001600160a01b0387811660048301528a8116602483015282169063dd62ed3e90604401602060405180830381865afa1580156107e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108049190611881565b60408581019190915251632c9aab9b60e11b81526001600160a01b038781166004830152831690635935573690602401602060405180830381865afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108759190611881565b84516080015260405163ce96cb7760e01b81526001600160a01b03878116600483015283169063ce96cb7790602401602060405180830381865afa1580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e59190611881565b845160a00152604051636c82bbbf60e11b81526001600160a01b03878116600483015283169063d905777e90602401602060405180830381865afa158015610931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109559190611881565b845160c00152604051630684cb8960e31b81526001600160a01b0387811660048301528316906334265c4890602401602060405180830381865afa1580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190611881565b845160e00152505b816001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2f9190611881565b60808401526001600160a01b0381166307a2d13a610a4f6012600a611994565b6040518263ffffffff1660e01b8152600401610a6d91815260200190565b602060405180830381865afa158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae9190611881565b836020018181525050806001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610af5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b199190611881565b836060018181525050816001600160a01b0316633d1b760b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b849190611881565b8360a0018181525050816001600160a01b0316632e9403886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bef9190611881565b8360c0018181525050816001600160a01b03166308b8e7d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5a9190611881565b8360e0018181525050816001600160a01b031663568c11626040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc59190611881565b61010084015250909695505050505050565b610cdf611272565b610ce7611272565b60405163220386fb60e21b81526001600160a01b03878116600483015286919082169063880e1bec906024016040805180830381865afa158015610d2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5391906119cf565b602084015282526040516353bac0b160e01b81526001600160a01b03888116600483015286916000918316906353bac0b19060240160a060405180830381865afa158015610da5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc99190611a17565b9050600081608001519050806001600160a01b0316631a39d8ef6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e369190611881565b60808601526040516356fbd1cb60e11b81526001600160a01b0382169063adf7a39690610e6890600090600401611aa7565b602060405180830381865afa158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea99190611881565b6101008601526040516356fbd1cb60e11b81526001600160a01b0382169063adf7a39690610edc90600190600401611aa7565b602060405180830381865afa158015610ef9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1d9190611881565b610120860152604051630530de8560e31b81526001600160a01b03821690632986f42890610f5090600190600401611aa7565b602060405180830381865afa158015610f6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f919190611881565b604051630530de8560e31b81526001600160a01b03831690632986f42890610fbe90600090600401611aa7565b602060405180830381865afa158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff9190611881565b6110099190611ab5565b60a0860152606082015163ffffffff1660e086015260405163153623c960e11b81526001600160a01b038b81166004830152889190821690632a6c4792906024016040805180830381865afa158015611066573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108a91906119cf565b6060880152604087015250939998505050505050505050565b6110c760405180606001604052806000815260200160008152602001600081525090565b6110eb60405180606001604052806000815260200160008152602001600081525090565b60405163220386fb60e21b81526001600160a01b03868116600483015285919082169063880e1bec906024016040805180830381865afa158015611133573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115791906119cf565b602084015282526040516365ab438d60e11b815284906001600160a01b0382169063cb56871a9061118f908a90600090600401611ac8565b602060405180830381865afa1580156111ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d09190611881565b6040840152509095945050505050565b60405180610120016040528061123460405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b03811681146112da57600080fd5b50565b600080600080608085870312156112f357600080fd5b84356112fe816112c5565b9350602085013561130e816112c5565b9250604085013561131e816112c5565b9150606085013561132e816112c5565b939692955090935050565b600061020082019050611396828451805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b60208301516101008381019190915260408401516101208401526060840151610140840152608084015161016084015260a084015161018084015260c08401516101a084015260e08401516101c0840152909201516101e09091015290565b60008060006060848603121561140a57600080fd5b8335611415816112c5565b92506020840135611425816112c5565b91506040840135611435816112c5565b809150509250925092565b6000806040838503121561145357600080fd5b823561145e816112c5565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b600281106114925761149261146c565b9052565b815160e0820190600481106114ad576114ad61146c565b8083525060208301516114c36020840182611482565b5060018060a01b036040840151166040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6000806040838503121561151757600080fd5b8235611522816112c5565b91506020830135611532816112c5565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261156457600080fd5b8135602067ffffffffffffffff808311156115815761158161153d565b8260051b604051601f19603f830116810181811084821117156115a6576115a661153d565b6040529384528581018301938381019250878511156115c457600080fd5b83870191505b848210156115ec5781356115dd816112c5565b835291830191908301906115ca565b979650505050505050565b6000806000806080858703121561160d57600080fd5b843567ffffffffffffffff81111561162457600080fd5b61163087828801611553565b945050602085013561130e816112c5565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b6020808252825182820181905260009190848201906040850190845b818110156116ea576116d6838551611641565b9284019261014092909201916001016116c3565b50909695505050505050565b60008060006060848603121561170b57600080fd5b833567ffffffffffffffff81111561172257600080fd5b61172e86828701611553565b9350506020840135611425816112c5565b6020808252825182820181905260009190848201906040850190845b818110156116ea576117828385518051825260208082015190830152604090810151910152565b928401926060929092019160010161175b565b8151815260208083015190820152604080830151908201526060810161028e565b610140810161028e8284611641565b8051600281106117d457600080fd5b919050565b80516117d4816112c5565b600060e082840312156117f657600080fd5b60405160e0810181811067ffffffffffffffff821117156118195761181961153d565b60405282516004811061182b57600080fd5b8152611839602084016117c5565b602082015261184a604084016117d9565b6040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b60006020828403121561189357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156118eb5781600019048211156118d1576118d161189a565b808516156118de57918102915b93841c93908002906118b5565b509250929050565b6000826119025750600161028e565b8161190f5750600061028e565b8160018114611925576002811461192f5761194b565b600191505061028e565b60ff8411156119405761194061189a565b50506001821b61028e565b5060208310610133831016604e8410600b841016171561196e575081810a61028e565b61197883836118b0565b806000190482111561198c5761198c61189a565b029392505050565b60006101ce83836118f3565b634e487b7160e01b600052603260045260246000fd5b6000600182016119c8576119c861189a565b5060010190565b600080604083850312156119e257600080fd5b505080516020909101519092909150565b805180151581146117d457600080fd5b805163ffffffff811681146117d457600080fd5b600060a08284031215611a2957600080fd5b60405160a0810181811067ffffffffffffffff82111715611a4c57611a4c61153d565b604052611a58836119f3565b8152611a66602084016119f3565b6020820152611a7760408401611a03565b6040820152611a8860608401611a03565b60608201526080830151611a9b816112c5565b60808201529392505050565b6020810161028e8284611482565b8082018082111561028e5761028e61189a565b6001600160a01b0383168152604081016101ce602083018461148256fea2646970667358221220085491eeb1ea0e3aa061ca47cdd0fe3ac9775e7faec512ee592f3cec2f62b4ec64736f6c63430008110033'

type SurgeUIConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: SurgeUIConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class SurgeUI__factory extends ContractFactory {
  constructor(...args: SurgeUIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
    this.contractName = 'SurgeUI'
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<SurgeUI> {
    return super.deploy(overrides || {}) as Promise<SurgeUI>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: string }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): SurgeUI {
    return super.attach(address) as SurgeUI
  }
  override connect(signer: Signer): SurgeUI__factory {
    return super.connect(signer) as SurgeUI__factory
  }
  static readonly contractName: 'SurgeUI'

  public readonly contractName: 'SurgeUI'

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): SurgeUIInterface {
    return new utils.Interface(_abi) as SurgeUIInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SurgeUI {
    return new Contract(address, _abi, signerOrProvider) as SurgeUI
  }
}
