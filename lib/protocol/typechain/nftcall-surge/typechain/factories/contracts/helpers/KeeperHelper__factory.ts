/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../../common'
import type { KeeperHelper, KeeperHelperInterface } from '../../../contracts/helpers/KeeperHelper'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'positionIds',
        type: 'uint256[]',
      },
    ],
    name: 'batchActivateOptions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'positionIds',
        type: 'uint256[]',
      },
    ],
    name: 'batchCloseOptions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'positionIds',
        type: 'uint256[]',
      },
    ],
    name: 'batchForceClosePendingPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
    ],
    name: 'getActiveOptions',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
    ],
    name: 'getExpiredOptions',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'positionIds',
        type: 'uint256[]',
      },
    ],
    name: 'getOptionData',
    outputs: [
      {
        components: [
          {
            internalType: 'enum PositionState',
            name: 'state',
            type: 'uint8',
          },
          {
            internalType: 'enum OptionType',
            name: 'optionType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'payer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'strikeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'premium',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct OptionPosition[]',
        name: 'optionPositions',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'entryPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'strikePrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'duration',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'expiry',
            type: 'uint256',
          },
        ],
        internalType: 'struct Strike[]',
        name: 'strikes',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
    ],
    name: 'getPendingOptions',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'positionIds',
        type: 'uint256[]',
      },
    ],
    name: 'sumPNLWeightedDelta',
    outputs: [
      {
        internalType: 'int256',
        name: 'PNL',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'weightedDelta',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'PNL',
        type: 'int256',
      },
    ],
    name: 'updateCollectionRisk',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405162001ca738038062001ca7833981016040819052610031916100af565b61003a3361005f565b600180546001600160a01b0319166001600160a01b03929092169190911790556100df565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c157600080fd5b81516001600160a01b03811681146100d857600080fd5b9392505050565b611bb880620000ef6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639437920a116100715780639437920a14610140578063ab50a70514610168578063c07c3d8e1461017b578063efb725af1461018e578063f2fde38b146101a1578063ffa4b629146101b457600080fd5b80633054ee1e146100b95780633ba76c79146100ce5780634f6a457a146100e157806369f75016146100f4578063715018a61461011d5780638da5cb5b14610125575b600080fd5b6100cc6100c7366004611655565b6101d5565b005b6100cc6100dc36600461168a565b610252565b6100cc6100ef36600461168a565b61030d565b610107610102366004611712565b6103d3565b6040516101149190611736565b60405180910390f35b6100cc610863565b6000546040516001600160a01b039091168152602001610114565b61015361014e36600461168a565b610877565b60408051928352602083019190915201610114565b6100cc61017636600461168a565b610964565b610107610189366004611712565b610a2a565b61010761019c366004611712565b610d99565b6100cc6101af366004611712565b61121d565b6101c76101c236600461168a565b61129b565b6040516101149291906117eb565b6101dd611596565b60015460405163182a770f60e11b81526001600160a01b0385811660048301526024820185905260448201849052909116908190633054ee1e90606401600060405180830381600087803b15801561023457600080fd5b505af1158015610248573d6000803e3d6000fd5b5050505050505050565b61025a611596565b6001546001600160a01b031660005b82811015610306576000848483818110610285576102856118a8565b60405163acdc350560e01b81526001600160a01b038a811660048301526020909202939093013560248401819052935085169163acdc35059150604401600060405180830381600087803b1580156102dc57600080fd5b505af11580156102f0573d6000803e3d6000fd5b5050505050806102ff906118d4565b9050610269565b5050505050565b610315611596565b6001546001600160a01b031660005b82811015610306576000848483818110610340576103406118a8565b60405163e2b21ab560e01b81526001600160a01b038a811660048301526020909202939093013560248401819052935085169163e2b21ab5915060440160408051808303816000875af115801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf91906118ed565b505050806103cc906118d4565b9050610324565b6001546040516353bac0b160e01b81526001600160a01b0383811660048301526060926000929116906353bac0b19060240160a060405180830381865afa158015610422573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610446919061195b565b608001519050600042815b836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561048f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b391906119f9565b81101561065257604051634f6ccce760e01b8152600481018290526000906001600160a01b03861690634f6ccce790602401602060405180830381865afa158015610502573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052691906119f9565b6040516352e5491f60e01b8152600481018290529091506000906001600160a01b038716906352e5491f9060240160e060405180830381865afa158015610571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105959190611a21565b90506002815160038111156105ac576105ac61177a565b14801561062e57506001546060820151604051634674dce360e01b8152600481019190915285916001600160a01b031690634674dce390602401608060405180830381865afa158015610603573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106279190611acc565b6060015111155b1561063f5761063c856118d4565b94505b50508061064b906118d4565b9050610451565b508167ffffffffffffffff81111561066c5761066c611911565b604051908082528060200260200182016040528015610695578160200160208202803683370190505b5093506000805b8382101561085957604051634f6ccce760e01b8152600481018390526000906001600160a01b03871690634f6ccce790602401602060405180830381865afa1580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071091906119f9565b6040516352e5491f60e01b8152600481018290529091506000906001600160a01b038816906352e5491f9060240160e060405180830381865afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190611a21565b90506002815160038111156107965761079661177a565b14801561081857506001546060820151604051634674dce360e01b8152600481019190915286916001600160a01b031690634674dce390602401608060405180830381865afa1580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108119190611acc565b6060015111155b156108475781888481518110610830576108306118a8565b6020908102919091010152610844836118d4565b92505b610850846118d4565b9350505061069c565b5050505050919050565b61086b611596565b61087560006115f0565b565b60015460009081906001600160a01b0316815b8481101561095a5760008686838181106108a6576108a66118a8565b604051630c953da560e11b81526001600160a01b038c81166004830152602090920293909301356024840181905293506000928392509086169063192a7b4a906044016040805180830381865afa158015610905573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092991906118ed565b90925090506109388288611b40565b96506109448187611b40565b955050505080610953906118d4565b905061088a565b5050935093915050565b61096c611596565b6001546001600160a01b031660005b82811015610306576000848483818110610997576109976118a8565b604051630e85fc3f60e31b81526001600160a01b038a811660048301526020909202939093013560248401819052935085169163742fe1f891506044016020604051808303816000875af11580156109f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1791906119f9565b505080610a23906118d4565b905061097b565b6001546040516353bac0b160e01b81526001600160a01b0383811660048301526060926000929116906353bac0b19060240160a060405180830381865afa158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d919061195b565b6080015190506000805b826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ae5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0991906119f9565b811015610c14576001604051634f6ccce760e01b8152600481018390526001600160a01b03851690632985be34908290634f6ccce790602401602060405180830381865afa158015610b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8391906119f9565b6040518263ffffffff1660e01b8152600401610ba191815260200190565b602060405180830381865afa158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be29190611b67565b6003811115610bf357610bf361177a565b03610c0457610c01826118d4565b91505b610c0d816118d4565b9050610aa7565b508067ffffffffffffffff811115610c2e57610c2e611911565b604051908082528060200260200182016040528015610c57578160200160208202803683370190505b5092506000805b82811015610d9057604051634f6ccce760e01b8152600481018390526000906001600160a01b03861690634f6ccce790602401602060405180830381865afa158015610cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd291906119f9565b90506001604051630a616f8d60e21b8152600481018390526001600160a01b03871690632985be3490602401602060405180830381865afa158015610d1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3f9190611b67565b6003811115610d5057610d5061177a565b03610d7f5780868381518110610d6857610d686118a8565b6020908102919091010152610d7c826118d4565b91505b610d88836118d4565b925050610c5e565b50505050919050565b6001546040516353bac0b160e01b81526001600160a01b0383811660048301526060926000929116906353bac0b19060240160a060405180830381865afa158015610de8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0c919061195b565b608001519050600042815b836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7991906119f9565b81101561101757604051634f6ccce760e01b8152600481018290526000906001600160a01b03861690634f6ccce790602401602060405180830381865afa158015610ec8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eec91906119f9565b6040516352e5491f60e01b8152600481018290529091506000906001600160a01b038716906352e5491f9060240160e060405180830381865afa158015610f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5b9190611a21565b9050600281516003811115610f7257610f7261177a565b148015610ff357506001546060820151604051634674dce360e01b8152600481019190915285916001600160a01b031690634674dce390602401608060405180830381865afa158015610fc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fed9190611acc565b60600151115b1561100457611001856118d4565b94505b505080611010906118d4565b9050610e17565b508167ffffffffffffffff81111561103157611031611911565b60405190808252806020026020018201604052801561105a578160200160208202803683370190505b5093506000805b8382101561085957604051634f6ccce760e01b8152600481018390526000906001600160a01b03871690634f6ccce790602401602060405180830381865afa1580156110b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d591906119f9565b6040516352e5491f60e01b8152600481018290529091506000906001600160a01b038816906352e5491f9060240160e060405180830381865afa158015611120573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111449190611a21565b905060028151600381111561115b5761115b61177a565b1480156111dc57506001546060820151604051634674dce360e01b8152600481019190915286916001600160a01b031690634674dce390602401608060405180830381865afa1580156111b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d69190611acc565b60600151115b1561120b57818884815181106111f4576111f46118a8565b6020908102919091010152611208836118d4565b92505b611214846118d4565b93505050611061565b611225611596565b6001600160a01b03811661128f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b611298816115f0565b50565b6060808267ffffffffffffffff8111156112b7576112b7611911565b60405190808252806020026020018201604052801561133257816020015b61131f6040805160e0810190915280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816112d55790505b5091508267ffffffffffffffff81111561134e5761134e611911565b6040519080825280602002602001820160405280156113aa57816020015b6113976040518060800160405280600081526020016000815260200160008152602001600081525090565b81526020019060019003908161136c5790505b506001546040516353bac0b160e01b81526001600160a01b038881166004830152929350600092909116906353bac0b19060240160a060405180830381865afa1580156113fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141f919061195b565b60800151905060005b8481101561095a57816001600160a01b03166352e5491f878784818110611451576114516118a8565b905060200201356040518263ffffffff1660e01b815260040161147691815260200190565b60e060405180830381865afa158015611493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b79190611a21565b8482815181106114c9576114c96118a8565b602090810291909101015260015484516001600160a01b0390911690634674dce3908690849081106114fd576114fd6118a8565b6020026020010151606001516040518263ffffffff1660e01b815260040161152791815260200190565b608060405180830381865afa158015611544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115689190611acc565b83828151811061157a5761157a6118a8565b60200260200101819052508061158f906118d4565b9050611428565b6000546001600160a01b031633146108755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611286565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461129857600080fd5b60008060006060848603121561166a57600080fd5b833561167581611640565b95602085013595506040909401359392505050565b60008060006040848603121561169f57600080fd5b83356116aa81611640565b9250602084013567ffffffffffffffff808211156116c757600080fd5b818601915086601f8301126116db57600080fd5b8135818111156116ea57600080fd5b8760208260051b85010111156116ff57600080fd5b6020830194508093505050509250925092565b60006020828403121561172457600080fd5b813561172f81611640565b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561176e57835183529284019291840191600101611752565b50909695505050505050565b634e487b7160e01b600052602160045260246000fd5b600081518084526020808501945080840160005b838110156117e05781518051885283810151848901526040808201519089015260609081015190880152608090960195908201906001016117a4565b509495945050505050565b6040808252835182820181905260009190606090818501906020808901865b838110156118895781518051600481106118265761182661177a565b8652808401516002811061183c5761183c61177a565b86850152808801516001600160a01b03168887015286810151878701526080808201519087015260a0808201519087015260c0908101519086015260e0909401939082019060010161180a565b5050868303908701525061189d8187611790565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016118e6576118e66118be565b5060010190565b6000806040838503121561190057600080fd5b505080516020909101519092909150565b634e487b7160e01b600052604160045260246000fd5b8051801515811461193757600080fd5b919050565b805163ffffffff8116811461193757600080fd5b805161193781611640565b600060a0828403121561196d57600080fd5b60405160a0810181811067ffffffffffffffff8211171561199e57634e487b7160e01b600052604160045260246000fd5b6040526119aa83611927565b81526119b860208401611927565b60208201526119c96040840161193c565b60408201526119da6060840161193c565b606082015260808301516119ed81611640565b60808201529392505050565b600060208284031215611a0b57600080fd5b5051919050565b80516004811061193757600080fd5b600060e08284031215611a3357600080fd5b60405160e0810181811067ffffffffffffffff82111715611a6457634e487b7160e01b600052604160045260246000fd5b604052611a7083611a12565b8152602083015160028110611a8457600080fd5b6020820152611a9560408401611950565b6040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b600060808284031215611ade57600080fd5b6040516080810181811067ffffffffffffffff82111715611b0f57634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b8181036000831280158383131683831282161715611b6057611b606118be565b5092915050565b600060208284031215611b7957600080fd5b61172f82611a1256fea2646970667358221220efafb8453d03a509bf7b0b6bece74e9dd54b3df227d569ce1afd3ddd6e730d5a64736f6c63430008110033'

type KeeperHelperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: KeeperHelperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class KeeperHelper__factory extends ContractFactory {
  constructor(...args: KeeperHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    vault_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KeeperHelper> {
    return super.deploy(vault_, overrides || {}) as Promise<KeeperHelper>
  }
  override getDeployTransaction(
    vault_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(vault_, overrides || {})
  }
  override attach(address: string): KeeperHelper {
    return super.attach(address) as KeeperHelper
  }
  override connect(signer: Signer): KeeperHelper__factory {
    return super.connect(signer) as KeeperHelper__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): KeeperHelperInterface {
    return new utils.Interface(_abi) as KeeperHelperInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): KeeperHelper {
    return new Contract(address, _abi, signerOrProvider) as KeeperHelper
  }
}
