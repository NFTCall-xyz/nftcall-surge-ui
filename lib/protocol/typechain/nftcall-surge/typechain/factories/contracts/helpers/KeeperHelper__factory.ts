/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../../common'
import type { KeeperHelper, KeeperHelperInterface } from '../../../contracts/helpers/KeeperHelper'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'positionIds',
        type: 'uint256[]',
      },
    ],
    name: 'batchActivateOptions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'positionIds',
        type: 'uint256[]',
      },
    ],
    name: 'batchCloseOptions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'positionIds',
        type: 'uint256[]',
      },
    ],
    name: 'batchForceClosePendingPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
    ],
    name: 'getActiveOptions',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
    ],
    name: 'getExpiredOptions',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'positionIds',
        type: 'uint256[]',
      },
    ],
    name: 'getOptionData',
    outputs: [
      {
        components: [
          {
            internalType: 'enum PositionState',
            name: 'state',
            type: 'uint8',
          },
          {
            internalType: 'enum OptionType',
            name: 'optionType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'payer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'strikeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'premium',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct OptionPosition[]',
        name: 'optionPositions',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'spotPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'strikePrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'duration',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'expiry',
            type: 'uint256',
          },
        ],
        internalType: 'struct Strike[]',
        name: 'strikes',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
    ],
    name: 'getPendingOptions',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405162001d1638038062001d16833981016040819052610031916100af565b61003a3361005f565b600180546001600160a01b0319166001600160a01b03929092169190911790556100df565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c157600080fd5b81516001600160a01b03811681146100d857600080fd5b9392505050565b611c2780620000ef6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063ab50a70511610066578063ab50a70514610117578063c07c3d8e1461012a578063efb725af1461013d578063f2fde38b14610150578063ffa4b6291461016357600080fd5b80633ba76c79146100a35780634f6a457a146100b857806369f75016146100cb578063715018a6146100f45780638da5cb5b146100fc575b600080fd5b6100b66100b136600461174c565b610184565b005b6100b66100c636600461174c565b61031f565b6100de6100d93660046117d4565b6104c4565b6040516100eb91906117f8565b60405180910390f35b6100b6610954565b6000546040516001600160a01b0390911681526020016100eb565b6100b661012536600461174c565b610968565b6100de6101383660046117d4565b610b17565b6100de61014b3660046117d4565b610e86565b6100b661015e3660046117d4565b61130a565b61017661017136600461174c565b611388565b6040516100eb9291906118ad565b61018c61168d565b6001546040516353bac0b160e01b81526001600160a01b0385811660048301529091169060009082906353bac0b19060240160a060405180830381865afa1580156101db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ff91906119b4565b60800151905060005b8381101561031757600085858381811061022457610224611a52565b9050602002013590506000836001600160a01b03166352e5491f836040518263ffffffff1660e01b815260040161025d91815260200190565b60e060405180830381865afa15801561027a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029e9190611a77565b60405163acdc350560e01b81526001600160a01b038a81166004830152602482018590529192509086169063acdc350590604401600060405180830381600087803b1580156102ec57600080fd5b505af1158015610300573d6000803e3d6000fd5b5050505050508061031090611b22565b9050610208565b505050505050565b61032761168d565b6001546040516353bac0b160e01b81526001600160a01b0385811660048301529091169060009082906353bac0b19060240160a060405180830381865afa158015610376573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039a91906119b4565b60800151905060005b838110156103175760008585838181106103bf576103bf611a52565b9050602002013590506000836001600160a01b03166352e5491f836040518263ffffffff1660e01b81526004016103f891815260200190565b60e060405180830381865afa158015610415573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104399190611a77565b60405163e2b21ab560e01b81526001600160a01b038a81166004830152602482018590529192509086169063e2b21ab5906044016020604051808303816000875af115801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190611b49565b505050806104bd90611b22565b90506103a3565b6001546040516353bac0b160e01b81526001600160a01b0383811660048301526060926000929116906353bac0b19060240160a060405180830381865afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053791906119b4565b608001519050600042815b836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a49190611b49565b81101561074357604051634f6ccce760e01b8152600481018290526000906001600160a01b03861690634f6ccce790602401602060405180830381865afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190611b49565b6040516352e5491f60e01b8152600481018290529091506000906001600160a01b038716906352e5491f9060240160e060405180830381865afa158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106869190611a77565b905060028151600381111561069d5761069d61183c565b14801561071f57506001546060820151604051634674dce360e01b8152600481019190915285916001600160a01b031690634674dce390602401608060405180830381865afa1580156106f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107189190611b62565b6060015111155b156107305761072d85611b22565b94505b50508061073c90611b22565b9050610542565b508167ffffffffffffffff81111561075d5761075d61196a565b604051908082528060200260200182016040528015610786578160200160208202803683370190505b5093506000805b8382101561094a57604051634f6ccce760e01b8152600481018390526000906001600160a01b03871690634f6ccce790602401602060405180830381865afa1580156107dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108019190611b49565b6040516352e5491f60e01b8152600481018290529091506000906001600160a01b038816906352e5491f9060240160e060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190611a77565b90506002815160038111156108875761088761183c565b14801561090957506001546060820151604051634674dce360e01b8152600481019190915286916001600160a01b031690634674dce390602401608060405180830381865afa1580156108de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109029190611b62565b6060015111155b15610938578188848151811061092157610921611a52565b602090810291909101015261093583611b22565b92505b61094184611b22565b9350505061078d565b5050505050919050565b61095c61168d565b61096660006116e7565b565b61097061168d565b6001546040516353bac0b160e01b81526001600160a01b0385811660048301529091169060009082906353bac0b19060240160a060405180830381865afa1580156109bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e391906119b4565b6080015190504260005b84811015610b0e576000868683818110610a0957610a09611a52565b9050602002013590506000846001600160a01b03166352e5491f836040518263ffffffff1660e01b8152600401610a4291815260200190565b60e060405180830381865afa158015610a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a839190611a77565b604051630e85fc3f60e31b81526001600160a01b038b81166004830152602482018590529192509087169063742fe1f8906044016020604051808303816000875af1158015610ad6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afa9190611b49565b50505080610b0790611b22565b90506109ed565b50505050505050565b6001546040516353bac0b160e01b81526001600160a01b0383811660048301526060926000929116906353bac0b19060240160a060405180830381865afa158015610b66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8a91906119b4565b6080015190506000805b826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190611b49565b811015610d01576001604051634f6ccce760e01b8152600481018390526001600160a01b03851690632985be34908290634f6ccce790602401602060405180830381865afa158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c709190611b49565b6040518263ffffffff1660e01b8152600401610c8e91815260200190565b602060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf9190611bd6565b6003811115610ce057610ce061183c565b03610cf157610cee82611b22565b91505b610cfa81611b22565b9050610b94565b508067ffffffffffffffff811115610d1b57610d1b61196a565b604051908082528060200260200182016040528015610d44578160200160208202803683370190505b5092506000805b82811015610e7d57604051634f6ccce760e01b8152600481018390526000906001600160a01b03861690634f6ccce790602401602060405180830381865afa158015610d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbf9190611b49565b90506001604051630a616f8d60e21b8152600481018390526001600160a01b03871690632985be3490602401602060405180830381865afa158015610e08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2c9190611bd6565b6003811115610e3d57610e3d61183c565b03610e6c5780868381518110610e5557610e55611a52565b6020908102919091010152610e6982611b22565b91505b610e7583611b22565b925050610d4b565b50505050919050565b6001546040516353bac0b160e01b81526001600160a01b0383811660048301526060926000929116906353bac0b19060240160a060405180830381865afa158015610ed5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef991906119b4565b608001519050600042815b836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f669190611b49565b81101561110457604051634f6ccce760e01b8152600481018290526000906001600160a01b03861690634f6ccce790602401602060405180830381865afa158015610fb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd99190611b49565b6040516352e5491f60e01b8152600481018290529091506000906001600160a01b038716906352e5491f9060240160e060405180830381865afa158015611024573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110489190611a77565b905060028151600381111561105f5761105f61183c565b1480156110e057506001546060820151604051634674dce360e01b8152600481019190915285916001600160a01b031690634674dce390602401608060405180830381865afa1580156110b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110da9190611b62565b60600151115b156110f1576110ee85611b22565b94505b5050806110fd90611b22565b9050610f04565b508167ffffffffffffffff81111561111e5761111e61196a565b604051908082528060200260200182016040528015611147578160200160208202803683370190505b5093506000805b8382101561094a57604051634f6ccce760e01b8152600481018390526000906001600160a01b03871690634f6ccce790602401602060405180830381865afa15801561119e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c29190611b49565b6040516352e5491f60e01b8152600481018290529091506000906001600160a01b038816906352e5491f9060240160e060405180830381865afa15801561120d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112319190611a77565b90506002815160038111156112485761124861183c565b1480156112c957506001546060820151604051634674dce360e01b8152600481019190915286916001600160a01b031690634674dce390602401608060405180830381865afa15801561129f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c39190611b62565b60600151115b156112f857818884815181106112e1576112e1611a52565b60209081029190910101526112f583611b22565b92505b61130184611b22565b9350505061114e565b61131261168d565b6001600160a01b03811661137c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b611385816116e7565b50565b6060808267ffffffffffffffff8111156113a4576113a461196a565b60405190808252806020026020018201604052801561141f57816020015b61140c6040805160e0810190915280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816113c25790505b5091508267ffffffffffffffff81111561143b5761143b61196a565b60405190808252806020026020018201604052801561149757816020015b6114846040518060800160405280600081526020016000815260200160008152602001600081525090565b8152602001906001900390816114595790505b506001546040516353bac0b160e01b81526001600160a01b038881166004830152929350600092909116906353bac0b19060240160a060405180830381865afa1580156114e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150c91906119b4565b60800151905060005b8481101561168357816001600160a01b03166352e5491f87878481811061153e5761153e611a52565b905060200201356040518263ffffffff1660e01b815260040161156391815260200190565b60e060405180830381865afa158015611580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a49190611a77565b8482815181106115b6576115b6611a52565b602090810291909101015260015484516001600160a01b0390911690634674dce3908690849081106115ea576115ea611a52565b6020026020010151606001516040518263ffffffff1660e01b815260040161161491815260200190565b608060405180830381865afa158015611631573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116559190611b62565b83828151811061166757611667611a52565b60200260200101819052508061167c90611b22565b9050611515565b5050935093915050565b6000546001600160a01b031633146109665760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611373565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461138557600080fd5b60008060006040848603121561176157600080fd5b833561176c81611737565b9250602084013567ffffffffffffffff8082111561178957600080fd5b818601915086601f83011261179d57600080fd5b8135818111156117ac57600080fd5b8760208260051b85010111156117c157600080fd5b6020830194508093505050509250925092565b6000602082840312156117e657600080fd5b81356117f181611737565b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561183057835183529284019291840191600101611814565b50909695505050505050565b634e487b7160e01b600052602160045260246000fd5b600081518084526020808501945080840160005b838110156118a2578151805188528381015184890152604080820151908901526060908101519088015260809096019590820190600101611866565b509495945050505050565b6040808252835182820181905260009190606090818501906020808901865b8381101561194b5781518051600481106118e8576118e861183c565b865280840151600281106118fe576118fe61183c565b86850152808801516001600160a01b03168887015286810151878701526080808201519087015260a0808201519087015260c0908101519086015260e090940193908201906001016118cc565b5050868303908701525061195f8187611852565b979650505050505050565b634e487b7160e01b600052604160045260246000fd5b8051801515811461199057600080fd5b919050565b805163ffffffff8116811461199057600080fd5b805161199081611737565b600060a082840312156119c657600080fd5b60405160a0810181811067ffffffffffffffff821117156119f757634e487b7160e01b600052604160045260246000fd5b604052611a0383611980565b8152611a1160208401611980565b6020820152611a2260408401611995565b6040820152611a3360608401611995565b60608201526080830151611a4681611737565b60808201529392505050565b634e487b7160e01b600052603260045260246000fd5b80516004811061199057600080fd5b600060e08284031215611a8957600080fd5b60405160e0810181811067ffffffffffffffff82111715611aba57634e487b7160e01b600052604160045260246000fd5b604052611ac683611a68565b8152602083015160028110611ada57600080fd5b6020820152611aeb604084016119a9565b6040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201528091505092915050565b600060018201611b4257634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215611b5b57600080fd5b5051919050565b600060808284031215611b7457600080fd5b6040516080810181811067ffffffffffffffff82111715611ba557634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b600060208284031215611be857600080fd5b6117f182611a6856fea2646970667358221220e629d9347f0a017a6d4136a32bf87ef52f791433e50df1c531f0eedbef31702d64736f6c63430008110033'

type KeeperHelperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: KeeperHelperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class KeeperHelper__factory extends ContractFactory {
  constructor(...args: KeeperHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    vault_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KeeperHelper> {
    return super.deploy(vault_, overrides || {}) as Promise<KeeperHelper>
  }
  override getDeployTransaction(
    vault_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(vault_, overrides || {})
  }
  override attach(address: string): KeeperHelper {
    return super.attach(address) as KeeperHelper
  }
  override connect(signer: Signer): KeeperHelper__factory {
    return super.connect(signer) as KeeperHelper__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): KeeperHelperInterface {
    return new utils.Interface(_abi) as KeeperHelperInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): KeeperHelper {
    return new Contract(address, _abi, signerOrProvider) as KeeperHelper
  }
}
