/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider } from '@ethersproject/providers'
import { Contract, Signer, utils } from 'ethers'

import type { IOracle, IOracleInterface } from '../../../contracts/interfaces/IOracle'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getAssetPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getAssetPriceAndVol',
    outputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'assets',
        type: 'address[]',
      },
    ],
    name: 'getAssets',
    outputs: [
      {
        internalType: 'uint256[2][]',
        name: 'prices',
        type: 'uint256[2][]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

export class IOracle__factory {
  static readonly abi = _abi
  static createInterface(): IOracleInterface {
    return new utils.Interface(_abi) as IOracleInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IOracle {
    return new Contract(address, _abi, signerOrProvider) as IOracle
  }
}
