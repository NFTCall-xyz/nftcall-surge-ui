/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../common'
import type { OptionPricer, OptionPricerInterface } from '../../contracts/OptionPricer'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AlreadyInitialised',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'enum OptionType',
        name: 'ot',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
    ],
    name: 'getAdjustedVol',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum OptionType',
        name: 'ot',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'getPremium',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'riskCache_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracle_',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'optionPrices',
    outputs: [
      {
        internalType: 'uint256',
        name: 'call',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'put',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'skewP1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'skewP2',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deltaP1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deltaP2',
        type: 'uint256',
      },
    ],
    name: 'updatePricerParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60806040526000805460ff60a01b191690556103e8620000226006600a620001c2565b6200002f906030620001d7565b6200003b9190620001f1565b6007553480156200004b57600080fd5b5062000057336200005d565b62000214565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000104578160001904821115620000e857620000e8620000ad565b80851615620000f657918102915b93841c9390800290620000c8565b509250929050565b6000826200011d57506001620001bc565b816200012c57506000620001bc565b8160018114620001455760028114620001505762000170565b6001915050620001bc565b60ff841115620001645762000164620000ad565b50506001821b620001bc565b5060208310610133831016604e8410600b841016171562000195575081810a620001bc565b620001a18383620000c3565b8060001904821115620001b857620001b8620000ad565b0290505b92915050565b6000620001d083836200010c565b9392505050565b8082028115828204841417620001bc57620001bc620000ad565b6000826200020f57634e487b7160e01b600052601260045260246000fd5b500490565b610f3180620002246000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e3578063959c0889146100fe578063b891f7b014610111578063f2fde38b1461013957600080fd5b806311277a251461008d578063485cc955146100b3578063493443a2146100c8578063715018a6146100db575b600080fd5b6100a061009b366004610acf565b61014c565b6040519081526020015b60405180910390f35b6100c66100c1366004610b0b565b610545565b005b6100c66100d6366004610b3e565b610659565b6100c6610695565b6000546040516001600160a01b0390911681526020016100aa565b6100a061010c366004610b70565b6106a9565b61012461011f366004610b3e565b610745565b604080519283526020830191909152016100aa565b6100c6610147366004610bb2565b6108c5565b60025460405163220386fb60e21b81526001600160a01b038581166004830152600092839283929091169063880e1bec906024016040805180830381865afa15801561019c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c09190610bd4565b60015460405163153623c960e11b81526001600160a01b038a811660048301529395509193506000921690632a6c4792906024016040805180830381865afa158015610210573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102349190610bd4565b50905081600087600181111561024c5761024c610bf8565b036103bd578386116102a55760405162461bcd60e51b815260206004820152601d60248201527f496c6c6567616c20737472696b6520707269636520666f722043414c4c00000060448201526064015b60405180910390fd5b6102b16006600a610d0a565b600454859081906102c2828b610d16565b6102cc898c610d16565b6102d69089610d29565b6102e09190610d29565b6102ea9190610d29565b6102f49190610d56565b6102fe9190610d56565b6103089190610d56565b6103146006600a610d0a565b6003548690610323828b610d16565b61032d9088610d29565b6103379190610d29565b6103419190610d56565b61034b9190610d56565b6103559190610d6a565b61035f9082610d7d565b9050600261036f6006600a610d0a565b6103799190610da5565b600083131561038a5760065461038e565b6005545b6103988484610db4565b6103a29190610db4565b6103ac9190610de4565b6103b69082610e12565b905061053a565b83861061040c5760405162461bcd60e51b815260206004820152601c60248201527f496c6c6567616c20737472696b6520707269636520666f722050555400000000604482015260640161029c565b6000866104198680610d29565b6104239190610d56565b90506104316006600a610d0a565b600454869081906104428286610d16565b61044c8a87610d16565b610456908a610d29565b6104609190610d29565b61046a9190610d29565b6104749190610d56565b61047e9190610d56565b6104889190610d56565b6104946006600a610d0a565b60035487906104a38286610d16565b6104ad9089610d29565b6104b79190610d29565b6104c19190610d56565b6104cb9190610d56565b6104d59190610d6a565b6104df9083610d7d565b915060026104ef6006600a610d0a565b6104f99190610da5565b600084121561050a5760065461050e565b6005545b6105188585610db4565b6105229190610db4565b61052c9190610de4565b6105369083610d7d565b9150505b979650505050505050565b61054d61093e565b600054600160a01b900460ff161561057a5760405163161b906f60e01b815230600482015260240161029c565b6000805460ff60a01b1916600160a01b179055600180546001600160a01b038085166001600160a01b031992831617909255600280549284169290911691909117905560646105cb6006600a610d0a565b6105d690600a610d29565b6105e09190610d56565b60035560646105f16006600a610d0a565b6105fc906014610d29565b6106069190610d56565b60045560646106176006600a610d0a565b610622906032610d29565b61062c9190610d56565b600555606461063d6006600a610d0a565b610648906014610d29565b6106529190610d56565b6006555050565b61066161093e565b6040805160808101825285815260208101859052908101839052606001819052600393909355600491909155600555600655565b61069d61093e565b6106a76000610998565b565b60008060006106ba87878787610745565b915091506106f260405180604001604052806011815260200170676f742070726963653a2025732c20257360781b81525083836109e8565b600088600181111561070657610706610bf8565b036107135750905061073c565b600188600181111561072757610727610bf8565b0361073557915061073c9050565b6000925050505b95945050505050565b6000808061075560066012610d16565b61076090600a610d0a565b905060006040518060a00160405280868152602001878152602001898152602001888152602001836007546107959190610db4565b81525090506107c2604051806060016040528060288152602001610ed46028913986888460800151610a34565b6108026040518060400160405280602081526020017f737472696b652070726963653a2025732c2073706f742070726963653a202573815250888a6109e8565b6040805163b6e62e5960e01b81528251600482015260208301516024820152908201516044820152606082015160648201526080820151608482015273__$eb86d565a3113b3c398b1080d0d395c3b4$__9063b6e62e599060a4016040805180830381865af4158015610879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089d9190610bd4565b90945092506108ac8285610d56565b93506108b88284610d56565b9250505094509492505050565b6108cd61093e565b6001600160a01b0381166109325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161029c565b61093b81610998565b50565b6000546001600160a01b031633146106a75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a2f838383604051602401610a0093929190610e7f565b60408051601f198184030181529190526020810180516001600160e01b031663ca47c4eb60e01b179052610a83565b505050565b610a7d84848484604051602401610a4e9493929190610ea4565b60408051601f198184030181529190526020810180516001600160e01b031663a7a8785360e01b179052610a83565b50505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b0381168114610abb57600080fd5b919050565b803560028110610abb57600080fd5b600080600060608486031215610ae457600080fd5b610aed84610aa4565b9250610afb60208501610ac0565b9150604084013590509250925092565b60008060408385031215610b1e57600080fd5b610b2783610aa4565b9150610b3560208401610aa4565b90509250929050565b60008060008060808587031215610b5457600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600060a08688031215610b8857600080fd5b610b9186610ac0565b97602087013597506040870135966060810135965060800135945092505050565b600060208284031215610bc457600080fd5b610bcd82610aa4565b9392505050565b60008060408385031215610be757600080fd5b505080516020909101519092909150565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610c5f578160001904821115610c4557610c45610c0e565b80851615610c5257918102915b93841c9390800290610c29565b509250929050565b600082610c7657506001610d04565b81610c8357506000610d04565b8160018114610c995760028114610ca357610cbf565b6001915050610d04565b60ff841115610cb457610cb4610c0e565b50506001821b610d04565b5060208310610133831016604e8410600b8410161715610ce2575081810a610d04565b610cec8383610c24565b8060001904821115610d0057610d00610c0e565b0290505b92915050565b6000610bcd8383610c67565b81810381811115610d0457610d04610c0e565b8082028115828204841417610d0457610d04610c0e565b634e487b7160e01b600052601260045260246000fd5b600082610d6557610d65610d40565b500490565b80820180821115610d0457610d04610c0e565b8082018281126000831280158216821582161715610d9d57610d9d610c0e565b505092915050565b6000610bcd60ff841683610c67565b80820260008212600160ff1b84141615610dd057610dd0610c0e565b8181058314821517610d0457610d04610c0e565b600082610df357610df3610d40565b600160ff1b821460001984141615610e0d57610e0d610c0e565b500590565b8181036000831280158383131683831282161715610e3257610e32610c0e565b5092915050565b6000815180845260005b81811015610e5f57602081850181015186830182015201610e43565b506000602082860101526020601f19601f83011685010191505092915050565b606081526000610e926060830186610e39565b60208301949094525060400152919050565b608081526000610eb76080830187610e39565b602083019590955250604081019290925260609091015291905056fe6475726174696f6e3a2025732c20766f6c3a2025732c20207269736b46726565526174653a202573a264697066735822122021a204287e6dba65a280821cd3b00781cba501ba1985960217ca846818e09acf64736f6c63430008110033'

type OptionPricerConstructorParams =
  | [linkLibraryAddresses: OptionPricerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: OptionPricerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  )
}

export class OptionPricer__factory extends ContractFactory {
  constructor(...args: OptionPricerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      const [linkLibraryAddresses, signer] = args
      super(_abi, OptionPricer__factory.linkBytecode(linkLibraryAddresses), signer)
    }
  }

  static linkBytecode(linkLibraryAddresses: OptionPricerLibraryAddresses): string {
    let linkedBytecode = _bytecode

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$eb86d565a3113b3c398b1080d0d395c3b4\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/BlackScholes.sol:BlackScholes'].replace(/^0x/, '').toLowerCase()
    )

    return linkedBytecode
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<OptionPricer> {
    return super.deploy(overrides || {}) as Promise<OptionPricer>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): OptionPricer {
    return super.attach(address) as OptionPricer
  }
  override connect(signer: Signer): OptionPricer__factory {
    return super.connect(signer) as OptionPricer__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): OptionPricerInterface {
    return new utils.Interface(_abi) as OptionPricerInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OptionPricer {
    return new Contract(address, _abi, signerOrProvider) as OptionPricer
  }
}

export interface OptionPricerLibraryAddresses {
  ['contracts/libraries/BlackScholes.sol:BlackScholes']: string
}
