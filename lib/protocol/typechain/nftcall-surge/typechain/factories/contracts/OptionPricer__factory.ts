/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { OptionPricer, OptionPricerInterface } from '../../contracts/OptionPricer'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AlreadyInitialised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
    ],
    name: 'IllegalStrikePrice',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collection',
        type: 'address',
      },
      {
        internalType: 'enum OptionType',
        name: 'ot',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'lockValue',
        type: 'uint256',
      },
    ],
    name: 'getAdjustedVol',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum OptionType',
        name: 'ot',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'getPremiumDeltaStdVega',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'riskCache_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracle_',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'optionDelta',
    outputs: [
      {
        internalType: 'int256',
        name: 'callDelta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'putDelta',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'optionPrices',
    outputs: [
      {
        internalType: 'uint256',
        name: 'call',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'put',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'optionPricesDeltaStdVega',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'callPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'putPrice',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'callDelta',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'putDelta',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'vega',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'stdVega',
            type: 'uint256',
          },
        ],
        internalType: 'struct BlackScholes.PricesDeltaStdVega',
        name: 'pricesDeltaStdVega',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'skewP1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'skewP2',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deltaP1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deltaP2',
        type: 'uint256',
      },
    ],
    name: 'updatePricerParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60806040526000805460ff60a01b191690556103e8620000226006600a620001c2565b6200002f906030620001d7565b6200003b9190620001f1565b6008553480156200004b57600080fd5b5062000057336200005d565b62000214565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000104578160001904821115620000e857620000e8620000ad565b80851615620000f657918102915b93841c9390800290620000c8565b509250929050565b6000826200011d57506001620001bc565b816200012c57506000620001bc565b8160018114620001455760028114620001505762000170565b6001915050620001bc565b60ff841115620001645762000164620000ad565b50506001821b620001bc565b5060208310610133831016604e8410600b841016171562000195575081810a620001bc565b620001a18383620000c3565b8060001904821115620001b857620001b8620000ad565b0290505b92915050565b6000620001d083836200010c565b9392505050565b8082028115828204841417620001bc57620001bc620000ad565b6000826200020f57634e487b7160e01b600052601260045260246000fd5b500490565b6113d780620002246000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b00d62dd11610066578063b00d62dd1461013b578063b891f7b01461015c578063c0c53b8b1461016f578063c14c293114610182578063f2fde38b146101e157600080fd5b806302e1d4d6146100a3578063493443a2146100db578063715018a6146100f05780638da5cb5b146100f8578063a2f1372f14610113575b600080fd5b6100b66100b1366004610e6e565b6101f4565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b6100ee6100e9366004610eb0565b61029c565b005b6100ee6102d8565b6000546040516001600160a01b0390911681526020016100d2565b610126610121366004610eb0565b6102ec565b604080519283526020830191909152016100d2565b61014e610149366004610ef7565b6103c7565b6040519081526020016100d2565b61012661016a366004610eb0565b610a79565b6100ee61017d366004610f3b565b610b05565b610195610190366004610eb0565b610c29565b6040516100d29190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b6100ee6101ef366004610f86565b610d37565b600080600080600061020889898989610c29565b905060008a600181111561021e5761021e610faa565b03610245578060000151816040015182608001518360a00151945094509450945050610290565b60018a600181111561025957610259610faa565b03610280578060200151816060015182608001518360a00151945094509450945050610290565b6000806000809450945094509450505b95509550955095915050565b6102a4610db0565b6040805160808101825285815260208101859052908101839052606001819052600493909355600591909155600655600755565b6102e0610db0565b6102ea6000610e0a565b565b600080806102fc60066012610fd6565b61030790600a6110d3565b905060006040518060a001604052808681526020018781526020018981526020018881526020018360085461033c91906110df565b9052604051634698f9d560e11b815290915073__$eb86d565a3113b3c398b1080d0d395c3b4$__90638d31f3aa9061037890849060040161110f565b6040805180830381865af4158015610394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b89190611149565b90999098509650505050505050565b60035460405163220386fb60e21b81526001600160a01b038681166004830152600092839283929091169063880e1bec906024016040805180830381865afa158015610417573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b9190611149565b60025460405163153623c960e11b81526001600160a01b038b811660048301529395509193506000921690632a6c4792906024016040805180830381865afa15801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af9190611149565b5090506000600160009054906101000a90046001600160a01b03166001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b919061116d565b6001546040516353bac0b160e01b81526001600160a01b038c81166004830152929350600092909116906353bac0b19060240160a060405180830381865afa15801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f91906111aa565b9050600081608001516001600160a01b031663d4c3eea06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610609919061116d565b90508460008b600181111561062057610620610faa565b036107a957868a1161066657335b604051633177075360e11b81526001600160a01b03909116600482015260248101889052604481018b90526064015b60405180910390fd5b6106726006600a6110d3565b60055488908190610683828f610fd6565b8b8f61068f9190610fd6565b610699908c611248565b6106a39190611248565b6106ad9190611248565b6106b79190611275565b6106c19190611275565b6106cb9190611275565b6106d76006600a6110d3565b60045489906106e6828f610fd6565b6106f0908b611248565b6106fa9190611248565b6107049190611275565b61070e9190611275565b6107189190611289565b610722908261129c565b606084015190915063ffffffff168461073d6012600a6110d3565b6107478c86611289565b60008913156107585760075461075c565b6006545b6107668a876110df565b61077091906110df565b61077a91906110df565b61078491906112c4565b61078e91906112c4565b61079891906112c4565b6107a290826112f2565b905061090d565b868a106107b6573361062e565b60008a6107c38980611248565b6107cd9190611275565b90506107db6006600a6110d3565b600554899081906107ec8286610fd6565b6107f68d87610fd6565b610800908d611248565b61080a9190611248565b6108149190611248565b61081e9190611275565b6108289190611275565b6108329190611275565b61083e6006600a6110d3565b6004548a9061084d8286610fd6565b610857908c611248565b6108619190611248565b61086b9190611275565b6108759190611275565b61087f9190611289565b610889908361129c565b606085015190925063ffffffff16856108a46012600a6110d3565b6108ae8d87611289565b60008a12156108bf576007546108c3565b6006545b6108cd8b886110df565b6108d791906110df565b6108e191906110df565b6108eb91906112c4565b6108f591906112c4565b6108ff91906112c4565b610909908361129c565b9150505b60008461091c6006600a6110d3565b600160009054906101000a90046001600160a01b03166001600160a01b0316632e9403886040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610993919061116d565b61099d9190611248565b6109a79190611275565b905060026109b76006600a6110d3565b6109c19190611275565b811115610a17576109d46006600a6110d3565b60026109e26006600a6110d3565b6109ec9190611275565b6109f69083610fd6565b610a0090846110df565b610a0a91906112c4565b610a14908361129c565b91505b610bb8821315610a695760405162461bcd60e51b815260206004820152601e60248201527f41646a757374656420766f6c206578636565647320333030206c696d69740000604482015260640161065d565b509b9a5050505050505050505050565b60008080610a8960066012610fd6565b610a9490600a6110d3565b905060006040518060a0016040528086815260200187815260200189815260200188815260200183600854610ac991906110df565b905260405163b6e62e5960e01b815290915073__$eb86d565a3113b3c398b1080d0d395c3b4$__9063b6e62e599061037890849060040161110f565b610b0d610db0565b600054600160a01b900460ff1615610b3a5760405163161b906f60e01b815230600482015260240161065d565b6000805460ff60a01b1916600160a01b179055600180546001600160a01b038086166001600160a01b0319928316179092556002805485841690831617905560038054928416929091169190911790556064610b986006600a6110d3565b610ba390600a611248565b610bad9190611275565b6004556064610bbe6006600a6110d3565b610bc9906014611248565b610bd39190611275565b6005556064610be46006600a6110d3565b610bef906032611248565b610bf99190611275565b6006908155606490610c0c90600a6110d3565b610c17906014611248565b610c219190611275565b600755505050565b610c626040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000610c7060066012610fd6565b610c7b90600a6110d3565b905060006040518060a0016040528085815260200186815260200188815260200187815260200183600854610cb091906110df565b9052604051626dab0f60e31b815290915073__$eb86d565a3113b3c398b1080d0d395c3b4$__9063036d587890610ceb90849060040161110f565b60c060405180830381865af4158015610d08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2c9190611319565b979650505050505050565b610d3f610db0565b6001600160a01b038116610da45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161065d565b610dad81610e0a565b50565b6000546001600160a01b031633146102ea5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161065d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803560028110610e6957600080fd5b919050565b600080600080600060a08688031215610e8657600080fd5b610e8f86610e5a565b97602087013597506040870135966060810135965060800135945092505050565b60008060008060808587031215610ec657600080fd5b5050823594602084013594506040840135936060013592509050565b6001600160a01b0381168114610dad57600080fd5b60008060008060808587031215610f0d57600080fd5b8435610f1881610ee2565b9350610f2660208601610e5a565b93969395505050506040820135916060013590565b600080600060608486031215610f5057600080fd5b8335610f5b81610ee2565b92506020840135610f6b81610ee2565b91506040840135610f7b81610ee2565b809150509250925092565b600060208284031215610f9857600080fd5b8135610fa381610ee2565b9392505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610fe957610fe9610fc0565b92915050565b600181815b8085111561102a57816000190482111561101057611010610fc0565b8085161561101d57918102915b93841c9390800290610ff4565b509250929050565b60008261104157506001610fe9565b8161104e57506000610fe9565b8160018114611064576002811461106e5761108a565b6001915050610fe9565b60ff84111561107f5761107f610fc0565b50506001821b610fe9565b5060208310610133831016604e8410600b84101617156110ad575081810a610fe9565b6110b78383610fef565b80600019048211156110cb576110cb610fc0565b029392505050565b6000610fa38383611032565b80820260008212600160ff1b841416156110fb576110fb610fc0565b8181058314821517610fe957610fe9610fc0565b600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b6000806040838503121561115c57600080fd5b505080516020909101519092909150565b60006020828403121561117f57600080fd5b5051919050565b80518015158114610e6957600080fd5b805163ffffffff81168114610e6957600080fd5b600060a082840312156111bc57600080fd5b60405160a0810181811067ffffffffffffffff821117156111ed57634e487b7160e01b600052604160045260246000fd5b6040526111f983611186565b815261120760208401611186565b602082015261121860408401611196565b604082015261122960608401611196565b6060820152608083015161123c81610ee2565b60808201529392505050565b8082028115828204841417610fe957610fe9610fc0565b634e487b7160e01b600052601260045260246000fd5b6000826112845761128461125f565b500490565b80820180821115610fe957610fe9610fc0565b80820182811260008312801582168215821617156112bc576112bc610fc0565b505092915050565b6000826112d3576112d361125f565b600160ff1b8214600019841416156112ed576112ed610fc0565b500590565b818103600083128015838313168383128216171561131257611312610fc0565b5092915050565b600060c0828403121561132b57600080fd5b60405160c0810181811067ffffffffffffffff8211171561135c57634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a0820152809150509291505056fea2646970667358221220c9a9a874969f3d5a0af1b1f1b2edb473a19af4feebdf63232622479d509c333464736f6c63430008110033'

type OptionPricerConstructorParams =
  | [linkLibraryAddresses: OptionPricerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: OptionPricerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  )
}

export class OptionPricer__factory extends ContractFactory {
  constructor(...args: OptionPricerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      const [linkLibraryAddresses, signer] = args
      super(_abi, OptionPricer__factory.linkBytecode(linkLibraryAddresses), signer)
    }
  }

  static linkBytecode(linkLibraryAddresses: OptionPricerLibraryAddresses): string {
    let linkedBytecode = _bytecode

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$eb86d565a3113b3c398b1080d0d395c3b4\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/BlackScholes.sol:BlackScholes'].replace(/^0x/, '').toLowerCase()
    )

    return linkedBytecode
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<OptionPricer> {
    return super.deploy(overrides || {}) as Promise<OptionPricer>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: string }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): OptionPricer {
    return super.attach(address) as OptionPricer
  }
  override connect(signer: Signer): OptionPricer__factory {
    return super.connect(signer) as OptionPricer__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): OptionPricerInterface {
    return new utils.Interface(_abi) as OptionPricerInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OptionPricer {
    return new Contract(address, _abi, signerOrProvider) as OptionPricer
  }
}

export interface OptionPricerLibraryAddresses {
  ['contracts/libraries/BlackScholes.sol:BlackScholes']: string
}
