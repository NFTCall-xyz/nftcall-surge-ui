/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../common'
import type { OptionPricer, OptionPricerInterface } from '../../contracts/OptionPricer'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AlreadyInitialised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
    ],
    name: 'IllegalStrikePrice',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'delta',
    outputs: [
      {
        internalType: 'int256',
        name: 'callDelta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'putDelta',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'enum OptionType',
        name: 'ot',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
    ],
    name: 'getAdjustedVol',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum OptionType',
        name: 'ot',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'getPremiumDeltaStdVega',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'riskCache_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracle_',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'optionPrices',
    outputs: [
      {
        internalType: 'uint256',
        name: 'call',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'put',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'optionPricesDeltaStdVega',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'callPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'putPrice',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'callDelta',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'putDelta',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'vega',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'stdVega',
            type: 'uint256',
          },
        ],
        internalType: 'struct BlackScholes.PricesDeltaStdVega',
        name: 'pricesDeltaStdVega',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'skewP1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'skewP2',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deltaP1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deltaP2',
        type: 'uint256',
      },
    ],
    name: 'updatePricerParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60806040526000805460ff60a01b191690556103e8620000226006600a620001c2565b6200002f906030620001d7565b6200003b9190620001f1565b6008553480156200004b57600080fd5b5062000057336200005d565b62000214565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000104578160001904821115620000e857620000e8620000ad565b80851615620000f657918102915b93841c9390800290620000c8565b509250929050565b6000826200011d57506001620001bc565b816200012c57506000620001bc565b8160018114620001455760028114620001505762000170565b6001915050620001bc565b60ff841115620001645762000164620000ad565b50506001821b620001bc565b5060208310610133831016604e8410600b841016171562000195575081810a620001bc565b620001a18383620000c3565b8060001904821115620001b857620001b8620000ad565b0290505b92915050565b6000620001d083836200010c565b9392505050565b8082028115828204841417620001bc57620001bc620000ad565b6000826200020f57634e487b7160e01b600052601260045260246000fd5b500490565b61119380620002246000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610141578063b891f7b01461015c578063c0c53b8b1461016f578063c14c293114610182578063f2fde38b146101e157600080fd5b806302e1d4d6146100a357806311277a25146100db57806326790bbc146100fc578063493443a214610124578063715018a614610139575b600080fd5b6100b66100b1366004610d00565b6101f4565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b6100ee6100e9366004610d59565b61029c565b6040519081526020016100d2565b61010f61010a366004610d95565b6107e0565b604080519283526020830191909152016100d2565b610137610132366004610d95565b6108bb565b005b6101376108f7565b6000546040516001600160a01b0390911681526020016100d2565b61010f61016a366004610d95565b61090b565b61013761017d366004610dc7565b610997565b610195610190366004610d95565b610abb565b6040516100d29190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b6101376101ef366004610e0a565b610bc9565b600080600080600061020889898989610abb565b905060008a600181111561021e5761021e610e2c565b03610245578060000151816040015182608001518360a00151945094509450945050610290565b60018a600181111561025957610259610e2c565b03610280578060200151816060015182608001518360a00151945094509450945050610290565b6000806000809450945094509450505b95509550955095915050565b60035460405163220386fb60e21b81526001600160a01b038581166004830152600092839283929091169063880e1bec906024016040805180830381865afa1580156102ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103109190610e42565b60025460405163153623c960e11b81526001600160a01b038a811660048301529395509193506000921690632a6c4792906024016040805180830381865afa158015610360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190610e42565b50905081600087600181111561039c5761039c610e2c565b036104f8578386116103d657604051633177075360e11b815233600482015260248101859052604481018790526064015b60405180910390fd5b6103e26006600a610f62565b600554859081906103f3828b610f6e565b6103fd898c610f6e565b6104079089610f81565b6104119190610f81565b61041b9190610f81565b6104259190610fae565b61042f9190610fae565b6104399190610fae565b6104456006600a610f62565b6004548690610454828b610f6e565b61045e9088610f81565b6104689190610f81565b6104729190610fae565b61047c9190610fae565b6104869190610fc2565b6104909082610fd5565b905061049e6012600a610f62565b6104aa6006600a610f62565b60008413156104bb576007546104bf565b6006545b6104c98585610ffd565b6104d39190610ffd565b6104dd919061102d565b6104e7919061102d565b6104f1908261105b565b9050610660565b83861061052857604051633177075360e11b815233600482015260248101859052604481018790526064016103cd565b6000866105358680610f81565b61053f9190610fae565b905061054d6006600a610f62565b6005548690819061055e8286610f6e565b6105688a87610f6e565b610572908a610f81565b61057c9190610f81565b6105869190610f81565b6105909190610fae565b61059a9190610fae565b6105a49190610fae565b6105b06006600a610f62565b60045487906105bf8286610f6e565b6105c99089610f81565b6105d39190610f81565b6105dd9190610fae565b6105e79190610fae565b6105f19190610fc2565b6105fb9083610fd5565b91506106096012600a610f62565b6106156006600a610f62565b60008512156106265760075461062a565b6006545b6106348686610ffd565b61063e9190610ffd565b610648919061102d565b610652919061102d565b61065c9083610fd5565b9150505b600154604080516278744560e21b815290516000926001600160a01b0316916301e1d1149160048083019260209291908290030181865afa1580156106a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cd9190611082565b6106d96006600a610f62565b600160009054906101000a90046001600160a01b03166001600160a01b0316632e9403886040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107509190611082565b61075a9190610f81565b6107649190610fae565b905060026107746006600a610f62565b61077e9190610fae565b8111156107d4576107916006600a610f62565b600261079f6006600a610f62565b6107a99190610fae565b6107b39083610f6e565b6107bd9084610ffd565b6107c7919061102d565b6107d19083610fd5565b91505b50979650505050505050565b600080806107f060066012610f6e565b6107fb90600a610f62565b905060006040518060a00160405280868152602001878152602001898152602001888152602001836008546108309190610ffd565b9052604051634698f9d560e11b815290915073__$eb86d565a3113b3c398b1080d0d395c3b4$__90638d31f3aa9061086c90849060040161109b565b6040805180830381865af4158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac9190610e42565b90999098509650505050505050565b6108c3610c42565b6040805160808101825285815260208101859052908101839052606001819052600493909355600591909155600655600755565b6108ff610c42565b6109096000610c9c565b565b6000808061091b60066012610f6e565b61092690600a610f62565b905060006040518060a001604052808681526020018781526020018981526020018881526020018360085461095b9190610ffd565b905260405163b6e62e5960e01b815290915073__$eb86d565a3113b3c398b1080d0d395c3b4$__9063b6e62e599061086c90849060040161109b565b61099f610c42565b600054600160a01b900460ff16156109cc5760405163161b906f60e01b81523060048201526024016103cd565b6000805460ff60a01b1916600160a01b179055600180546001600160a01b038086166001600160a01b0319928316179092556002805485841690831617905560038054928416929091169190911790556064610a2a6006600a610f62565b610a3590600a610f81565b610a3f9190610fae565b6004556064610a506006600a610f62565b610a5b906014610f81565b610a659190610fae565b6005556064610a766006600a610f62565b610a81906032610f81565b610a8b9190610fae565b6006908155606490610a9e90600a610f62565b610aa9906014610f81565b610ab39190610fae565b600755505050565b610af46040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000610b0260066012610f6e565b610b0d90600a610f62565b905060006040518060a0016040528085815260200186815260200188815260200187815260200183600854610b429190610ffd565b9052604051626dab0f60e31b815290915073__$eb86d565a3113b3c398b1080d0d395c3b4$__9063036d587890610b7d90849060040161109b565b60c060405180830381865af4158015610b9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbe91906110d5565b979650505050505050565b610bd1610c42565b6001600160a01b038116610c365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103cd565b610c3f81610c9c565b50565b6000546001600160a01b031633146109095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103cd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803560028110610cfb57600080fd5b919050565b600080600080600060a08688031215610d1857600080fd5b610d2186610cec565b97602087013597506040870135966060810135965060800135945092505050565b80356001600160a01b0381168114610cfb57600080fd5b600080600060608486031215610d6e57600080fd5b610d7784610d42565b9250610d8560208501610cec565b9150604084013590509250925092565b60008060008060808587031215610dab57600080fd5b5050823594602084013594506040840135936060013592509050565b600080600060608486031215610ddc57600080fd5b610de584610d42565b9250610df360208501610d42565b9150610e0160408501610d42565b90509250925092565b600060208284031215610e1c57600080fd5b610e2582610d42565b9392505050565b634e487b7160e01b600052602160045260246000fd5b60008060408385031215610e5557600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610eb7578160001904821115610e9d57610e9d610e66565b80851615610eaa57918102915b93841c9390800290610e81565b509250929050565b600082610ece57506001610f5c565b81610edb57506000610f5c565b8160018114610ef15760028114610efb57610f17565b6001915050610f5c565b60ff841115610f0c57610f0c610e66565b50506001821b610f5c565b5060208310610133831016604e8410600b8410161715610f3a575081810a610f5c565b610f448383610e7c565b8060001904821115610f5857610f58610e66565b0290505b92915050565b6000610e258383610ebf565b81810381811115610f5c57610f5c610e66565b8082028115828204841417610f5c57610f5c610e66565b634e487b7160e01b600052601260045260246000fd5b600082610fbd57610fbd610f98565b500490565b80820180821115610f5c57610f5c610e66565b8082018281126000831280158216821582161715610ff557610ff5610e66565b505092915050565b80820260008212600160ff1b8414161561101957611019610e66565b8181058314821517610f5c57610f5c610e66565b60008261103c5761103c610f98565b600160ff1b82146000198414161561105657611056610e66565b500590565b818103600083128015838313168383128216171561107b5761107b610e66565b5092915050565b60006020828403121561109457600080fd5b5051919050565b600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b600060c082840312156110e757600080fd5b60405160c0810181811067ffffffffffffffff8211171561111857634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a0820152809150509291505056fea2646970667358221220be17ebb09943f37f173e2b5f8541dcc764a8d4aa11c179169b731fba1939223964736f6c63430008110033'

type OptionPricerConstructorParams =
  | [linkLibraryAddresses: OptionPricerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: OptionPricerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  )
}

export class OptionPricer__factory extends ContractFactory {
  constructor(...args: OptionPricerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      const [linkLibraryAddresses, signer] = args
      super(_abi, OptionPricer__factory.linkBytecode(linkLibraryAddresses), signer)
    }
  }

  static linkBytecode(linkLibraryAddresses: OptionPricerLibraryAddresses): string {
    let linkedBytecode = _bytecode

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$eb86d565a3113b3c398b1080d0d395c3b4\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/BlackScholes.sol:BlackScholes'].replace(/^0x/, '').toLowerCase()
    )

    return linkedBytecode
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<OptionPricer> {
    return super.deploy(overrides || {}) as Promise<OptionPricer>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): OptionPricer {
    return super.attach(address) as OptionPricer
  }
  override connect(signer: Signer): OptionPricer__factory {
    return super.connect(signer) as OptionPricer__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): OptionPricerInterface {
    return new utils.Interface(_abi) as OptionPricerInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OptionPricer {
    return new Contract(address, _abi, signerOrProvider) as OptionPricer
  }
}

export interface OptionPricerLibraryAddresses {
  ['contracts/libraries/BlackScholes.sol:BlackScholes']: string
}
