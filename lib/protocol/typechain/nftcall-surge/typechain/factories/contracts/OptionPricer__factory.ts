/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { OptionPricer, OptionPricerInterface } from '../../contracts/OptionPricer'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AlreadyInitialised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
    ],
    name: 'IllegalStrikePrice',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'delta',
    outputs: [
      {
        internalType: 'int256',
        name: 'callDelta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'putDelta',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'enum OptionType',
        name: 'ot',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'lockValue',
        type: 'uint256',
      },
    ],
    name: 'getAdjustedVol',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum OptionType',
        name: 'ot',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'getPremiumDeltaStdVega',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'riskCache_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracle_',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'optionPrices',
    outputs: [
      {
        internalType: 'uint256',
        name: 'call',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'put',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'S',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'K',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'duration',
        type: 'uint256',
      },
    ],
    name: 'optionPricesDeltaStdVega',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'callPrice',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'putPrice',
            type: 'uint256',
          },
          {
            internalType: 'int256',
            name: 'callDelta',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'putDelta',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'vega',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'stdVega',
            type: 'uint256',
          },
        ],
        internalType: 'struct BlackScholes.PricesDeltaStdVega',
        name: 'pricesDeltaStdVega',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'skewP1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'skewP2',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deltaP1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deltaP2',
        type: 'uint256',
      },
    ],
    name: 'updatePricerParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60806040526000805460ff60a01b191690556103e8620000226006600a620001c2565b6200002f906030620001d7565b6200003b9190620001f1565b6008553480156200004b57600080fd5b5062000057336200005d565b62000214565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000104578160001904821115620000e857620000e8620000ad565b80851615620000f657918102915b93841c9390800290620000c8565b509250929050565b6000826200011d57506001620001bc565b816200012c57506000620001bc565b8160018114620001455760028114620001505762000170565b6001915050620001bc565b60ff841115620001645762000164620000ad565b50506001821b620001bc565b5060208310610133831016604e8410600b841016171562000195575081810a620001bc565b620001a18383620000c3565b8060001904821115620001b857620001b8620000ad565b0290505b92915050565b6000620001d083836200010c565b9392505050565b8082028115828204841417620001bc57620001bc620000ad565b6000826200020f57634e487b7160e01b600052601260045260246000fd5b500490565b61140680620002246000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063b00d62dd11610066578063b00d62dd1461013b578063b891f7b01461015c578063c0c53b8b1461016f578063c14c293114610182578063f2fde38b146101e157600080fd5b806302e1d4d6146100a357806326790bbc146100db578063493443a214610103578063715018a6146101185780638da5cb5b14610120575b600080fd5b6100b66100b1366004610e9d565b6101f4565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b6100ee6100e9366004610edf565b61029c565b604080519283526020830191909152016100d2565b610116610111366004610edf565b610377565b005b6101166103b3565b6000546040516001600160a01b0390911681526020016100d2565b61014e610149366004610f26565b6103c7565b6040519081526020016100d2565b6100ee61016a366004610edf565b610aa8565b61011661017d366004610f6a565b610b34565b610195610190366004610edf565b610c58565b6040516100d29190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b6101166101ef366004610fb5565b610d66565b600080600080600061020889898989610c58565b905060008a600181111561021e5761021e610fd9565b03610245578060000151816040015182608001518360a00151945094509450945050610290565b60018a600181111561025957610259610fd9565b03610280578060200151816060015182608001518360a00151945094509450945050610290565b6000806000809450945094509450505b95509550955095915050565b600080806102ac60066012611005565b6102b790600a611102565b905060006040518060a00160405280868152602001878152602001898152602001888152602001836008546102ec919061110e565b9052604051634698f9d560e11b815290915073__$eb86d565a3113b3c398b1080d0d395c3b4$__90638d31f3aa9061032890849060040161113e565b6040805180830381865af4158015610344573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103689190611178565b90999098509650505050505050565b61037f610ddf565b6040805160808101825285815260208101859052908101839052606001819052600493909355600591909155600655600755565b6103bb610ddf565b6103c56000610e39565b565b60035460405163220386fb60e21b81526001600160a01b038681166004830152600092839283929091169063880e1bec906024016040805180830381865afa158015610417573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b9190611178565b60025460405163153623c960e11b81526001600160a01b038b811660048301529395509193506000921690632a6c4792906024016040805180830381865afa15801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af9190611178565b5090506000600160009054906101000a90046001600160a01b03166001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b919061119c565b6001546040516353bac0b160e01b81526001600160a01b038c81166004830152929350600092909116906353bac0b19060240160a060405180830381865afa15801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f91906111d9565b9050600081608001516001600160a01b031663d4c3eea06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610609919061119c565b90508460008b600181111561062057610620610fd9565b0361079d57868a1161065a57604051633177075360e11b815233600482015260248101889052604481018b90526064015b60405180910390fd5b6106666006600a611102565b60055488908190610677828f611005565b8b8f6106839190611005565b61068d908c611277565b6106979190611277565b6106a19190611277565b6106ab91906112a4565b6106b591906112a4565b6106bf91906112a4565b6106cb6006600a611102565b60045489906106da828f611005565b6106e4908b611277565b6106ee9190611277565b6106f891906112a4565b61070291906112a4565b61070c91906112b8565b61071690826112cb565b606084015190915063ffffffff16846107316012600a611102565b61073b8c866112b8565b600089131561074c57600754610750565b6006545b61075a8a8761110e565b610764919061110e565b61076e919061110e565b61077891906112f3565b61078291906112f3565b61078c91906112f3565b6107969082611321565b9050610924565b868a106107cd57604051633177075360e11b815233600482015260248101889052604481018b9052606401610651565b60008a6107da8980611277565b6107e491906112a4565b90506107f26006600a611102565b600554899081906108038286611005565b61080d8d87611005565b610817908d611277565b6108219190611277565b61082b9190611277565b61083591906112a4565b61083f91906112a4565b61084991906112a4565b6108556006600a611102565b6004548a906108648286611005565b61086e908c611277565b6108789190611277565b61088291906112a4565b61088c91906112a4565b61089691906112b8565b6108a090836112cb565b606085015190925063ffffffff16856108bb6012600a611102565b6108c58d876112b8565b60008a12156108d6576007546108da565b6006545b6108e48b8861110e565b6108ee919061110e565b6108f8919061110e565b61090291906112f3565b61090c91906112f3565b61091691906112f3565b61092090836112cb565b9150505b600154604080516278744560e21b815290516000926001600160a01b0316916301e1d1149160048083019260209291908290030181865afa15801561096d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610991919061119c565b61099d6006600a611102565b600160009054906101000a90046001600160a01b03166001600160a01b0316632e9403886040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a14919061119c565b610a1e9190611277565b610a2891906112a4565b90506002610a386006600a611102565b610a4291906112a4565b811115610a9857610a556006600a611102565b6002610a636006600a611102565b610a6d91906112a4565b610a779083611005565b610a81908461110e565b610a8b91906112f3565b610a9590836112cb565b91505b509b9a5050505050505050505050565b60008080610ab860066012611005565b610ac390600a611102565b905060006040518060a0016040528086815260200187815260200189815260200188815260200183600854610af8919061110e565b905260405163b6e62e5960e01b815290915073__$eb86d565a3113b3c398b1080d0d395c3b4$__9063b6e62e599061032890849060040161113e565b610b3c610ddf565b600054600160a01b900460ff1615610b695760405163161b906f60e01b8152306004820152602401610651565b6000805460ff60a01b1916600160a01b179055600180546001600160a01b038086166001600160a01b0319928316179092556002805485841690831617905560038054928416929091169190911790556064610bc76006600a611102565b610bd290600a611277565b610bdc91906112a4565b6004556064610bed6006600a611102565b610bf8906014611277565b610c0291906112a4565b6005556064610c136006600a611102565b610c1e906032611277565b610c2891906112a4565b6006908155606490610c3b90600a611102565b610c46906014611277565b610c5091906112a4565b600755505050565b610c916040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000610c9f60066012611005565b610caa90600a611102565b905060006040518060a0016040528085815260200186815260200188815260200187815260200183600854610cdf919061110e565b9052604051626dab0f60e31b815290915073__$eb86d565a3113b3c398b1080d0d395c3b4$__9063036d587890610d1a90849060040161113e565b60c060405180830381865af4158015610d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5b9190611348565b979650505050505050565b610d6e610ddf565b6001600160a01b038116610dd35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610651565b610ddc81610e39565b50565b6000546001600160a01b031633146103c55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610651565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803560028110610e9857600080fd5b919050565b600080600080600060a08688031215610eb557600080fd5b610ebe86610e89565b97602087013597506040870135966060810135965060800135945092505050565b60008060008060808587031215610ef557600080fd5b5050823594602084013594506040840135936060013592509050565b6001600160a01b0381168114610ddc57600080fd5b60008060008060808587031215610f3c57600080fd5b8435610f4781610f11565b9350610f5560208601610e89565b93969395505050506040820135916060013590565b600080600060608486031215610f7f57600080fd5b8335610f8a81610f11565b92506020840135610f9a81610f11565b91506040840135610faa81610f11565b809150509250925092565b600060208284031215610fc757600080fd5b8135610fd281610f11565b9392505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561101857611018610fef565b92915050565b600181815b8085111561105957816000190482111561103f5761103f610fef565b8085161561104c57918102915b93841c9390800290611023565b509250929050565b60008261107057506001611018565b8161107d57506000611018565b8160018114611093576002811461109d576110b9565b6001915050611018565b60ff8411156110ae576110ae610fef565b50506001821b611018565b5060208310610133831016604e8410600b84101617156110dc575081810a611018565b6110e6838361101e565b80600019048211156110fa576110fa610fef565b029392505050565b6000610fd28383611061565b80820260008212600160ff1b8414161561112a5761112a610fef565b818105831482151761101857611018610fef565b600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b6000806040838503121561118b57600080fd5b505080516020909101519092909150565b6000602082840312156111ae57600080fd5b5051919050565b80518015158114610e9857600080fd5b805163ffffffff81168114610e9857600080fd5b600060a082840312156111eb57600080fd5b60405160a0810181811067ffffffffffffffff8211171561121c57634e487b7160e01b600052604160045260246000fd5b604052611228836111b5565b8152611236602084016111b5565b6020820152611247604084016111c5565b6040820152611258606084016111c5565b6060820152608083015161126b81610f11565b60808201529392505050565b808202811582820484141761101857611018610fef565b634e487b7160e01b600052601260045260246000fd5b6000826112b3576112b361128e565b500490565b8082018082111561101857611018610fef565b80820182811260008312801582168215821617156112eb576112eb610fef565b505092915050565b6000826113025761130261128e565b600160ff1b82146000198414161561131c5761131c610fef565b500590565b818103600083128015838313168383128216171561134157611341610fef565b5092915050565b600060c0828403121561135a57600080fd5b60405160c0810181811067ffffffffffffffff8211171561138b57634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a0820152809150509291505056fea26469706673582212206931e4e32062fba49812f133ea5daace81b5abe0a130179d869a202bdd0397c164736f6c63430008110033'

type OptionPricerConstructorParams =
  | [linkLibraryAddresses: OptionPricerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: OptionPricerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  )
}

export class OptionPricer__factory extends ContractFactory {
  constructor(...args: OptionPricerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      const [linkLibraryAddresses, signer] = args
      super(_abi, OptionPricer__factory.linkBytecode(linkLibraryAddresses), signer)
    }
    this.contractName = 'OptionPricer'
  }

  static linkBytecode(linkLibraryAddresses: OptionPricerLibraryAddresses): string {
    let linkedBytecode = _bytecode

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$eb86d565a3113b3c398b1080d0d395c3b4\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/BlackScholes.sol:BlackScholes'].replace(/^0x/, '').toLowerCase()
    )

    return linkedBytecode
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<OptionPricer> {
    return super.deploy(overrides || {}) as Promise<OptionPricer>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: string }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): OptionPricer {
    return super.attach(address) as OptionPricer
  }
  override connect(signer: Signer): OptionPricer__factory {
    return super.connect(signer) as OptionPricer__factory
  }
  static readonly contractName: 'OptionPricer'

  public readonly contractName: 'OptionPricer'

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): OptionPricerInterface {
    return new utils.Interface(_abi) as OptionPricerInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OptionPricer {
    return new Contract(address, _abi, signerOrProvider) as OptionPricer
  }
}

export interface OptionPricerLibraryAddresses {
  ['contracts/libraries/BlackScholes.sol:BlackScholes']: string
}
