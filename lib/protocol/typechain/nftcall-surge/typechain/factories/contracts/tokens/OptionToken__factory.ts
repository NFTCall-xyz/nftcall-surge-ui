/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { OptionToken, OptionTokenInterface } from '../../../contracts/tokens/OptionToken'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collectionAddress',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'name_',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol_',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'baseURI',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AlreadyInitialised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        internalType: 'enum PositionState',
        name: 'state',
        type: 'uint8',
      },
    ],
    name: 'IsNotActive',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        internalType: 'enum PositionState',
        name: 'state',
        type: 'uint8',
      },
    ],
    name: 'IsNotPending',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'NonexistentPosition',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'OnlyVault',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
    ],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
    ],
    name: 'ZeroVaultAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'premium',
        type: 'uint256',
      },
    ],
    name: 'ActivePosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'ClosePosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'ForceClosePosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'Initialize',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'payer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'enum OptionType',
        name: 'optionType',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'strikeId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maximumPremium',
        type: 'uint256',
      },
    ],
    name: 'OpenPosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'baseURI',
        type: 'string',
      },
    ],
    name: 'UpdateBaseURI',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'premium',
        type: 'uint256',
      },
    ],
    name: 'activePosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'closePosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collection',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'forceClosePendingPosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'lockedValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'payer',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'enum OptionType',
        name: 'optionType',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'strikeId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maximumPremium',
        type: 'uint256',
      },
    ],
    name: 'openPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'optionPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'enum PositionState',
            name: 'state',
            type: 'uint8',
          },
          {
            internalType: 'enum OptionType',
            name: 'optionType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'payer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'strikeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'premium',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct OptionPosition',
        name: 'position',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'optionPositionState',
    outputs: [
      {
        internalType: 'enum PositionState',
        name: 'state',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'baseURI',
        type: 'string',
      },
    ],
    name: 'setBaseURI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum OptionType',
        name: 'optionType',
        type: 'uint8',
      },
    ],
    name: 'totalAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum OptionType',
        name: 'optionType',
        type: 'uint8',
      },
    ],
    name: 'totalValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60a0604052600a805460ff60a01b191690556001600e553480156200002357600080fd5b5060405162003354380380620033548339810160408190526200004691620001c3565b8282600062000056838262000304565b50600162000065828262000304565b505050620000826200007c620000a860201b60201c565b620000ac565b6001600160a01b038416608052600f6200009d828262000304565b5050505050620003d0565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200012657600080fd5b81516001600160401b0380821115620001435762000143620000fe565b604051601f8301601f19908116603f011681019082821181831017156200016e576200016e620000fe565b816040528381526020925086838588010111156200018b57600080fd5b600091505b83821015620001af578582018301518183018401529082019062000190565b600093810190920192909252949350505050565b60008060008060808587031215620001da57600080fd5b84516001600160a01b0381168114620001f257600080fd5b60208601519094506001600160401b03808211156200021057600080fd5b6200021e8883890162000114565b945060408701519150808211156200023557600080fd5b620002438883890162000114565b935060608701519150808211156200025a57600080fd5b50620002698782880162000114565b91505092959194509250565b600181811c908216806200028a57607f821691505b602082108103620002ab57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ff57600081815260208120601f850160051c81016020861015620002da5750805b601f850160051c820191505b81811015620002fb57828155600101620002e6565b5050505b505050565b81516001600160401b03811115620003205762000320620000fe565b620003388162000331845462000275565b84620002b1565b602080601f831160018114620003705760008415620003575750858301515b600019600386901b1c1916600185901b178555620002fb565b600085815260208120601f198616915b82811015620003a15788860151825594840194600190910190840162000380565b5085821015620003c05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051612f68620003ec60003960006103b40152612f686000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806370a0823111610125578063b88d4fde116100ad578063d4c3eea01161007c578063d4c3eea014610487578063e31d19111461048f578063e985e9c5146104a2578063f2fde38b146104de578063fbfa77cf146104f157600080fd5b8063b88d4fde1461043b578063c4d66de81461044e578063c87b56dd14610461578063d12b53201461047457600080fd5b80638da5cb5b116100f45780638da5cb5b146103e957806395d89b41146103fa578063a126d60114610402578063a22cb46514610415578063adf7a3961461042857600080fd5b806370a0823114610394578063715018a6146103a75780637de1e536146103af57806387d7fca8146103d657600080fd5b80632986f428116101a85780634f6ccce7116101775780634f6ccce71461032857806352e5491f1461033b57806355f804b31461035b578063578b314a1461036e5780636352211e1461038157600080fd5b80632986f428146102e05780632f745c59146102f3578063313ce5671461030657806342842e0e1461031557600080fd5b806318160ddd116101e457806318160ddd146102935780631a39d8ef146102a557806323b872dd146102ad5780632985be34146102c057600080fd5b806301ffc9a71461021657806306fdde031461023e578063081812fc14610253578063095ea7b31461027e575b600080fd5b6102296102243660046125ef565b610502565b60405190151581526020015b60405180910390f35b61024661052d565b604051610235919061265c565b61026661026136600461266f565b6105bf565b6040516001600160a01b039091168152602001610235565b61029161028c36600461269f565b6105e6565b005b6008545b604051908152602001610235565b600d54610297565b6102916102bb3660046126c9565b610700565b6102d36102ce36600461266f565b610731565b604051610235919061272f565b6102976102ee36600461274c565b610782565b61029761030136600461269f565b6107c1565b60405160128152602001610235565b6102916103233660046126c9565b610857565b61029761033636600461266f565b610872565b61034e61034936600461266f565b610905565b6040516102359190612777565b610291610369366004612869565b610a1e565b61029161037c3660046128b2565b610a6d565b61026661038f36600461266f565b610d71565b6102976103a23660046128d4565b610dd1565b610291610e57565b6102667f000000000000000000000000000000000000000000000000000000000000000081565b6102976103e43660046128ef565b610e6b565b600a546001600160a01b0316610266565b61024661104c565b61029161041036600461266f565b61105b565b61029161042336600461294e565b611296565b61029761043636600461274c565b6112a5565b61029161044936600461298a565b6112bd565b61029161045c3660046128d4565b6112f5565b61024661046f36600461266f565b6113b0565b61029761048236600461266f565b611491565b600c54610297565b61029161049d36600461266f565b6116d4565b6102296104b0366004612a06565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102916104ec3660046128d4565b611788565b600b546001600160a01b0316610266565b60006001600160e01b0319821663780e9d6360e01b1480610527575061052782611801565b92915050565b60606000805461053c90612a39565b80601f016020809104026020016040519081016040528092919081815260200182805461056890612a39565b80156105b55780601f1061058a576101008083540402835291602001916105b5565b820191906000526020600020905b81548152906001019060200180831161059857829003601f168201915b5050505050905090565b60006105ca82611851565b506000908152600460205260409020546001600160a01b031690565b60006105f182610d71565b9050806001600160a01b0316836001600160a01b0316036106635760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061067f575061067f81336104b0565b6106f15760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161065a565b6106fb83836118b0565b505050565b61070a338261191e565b6107265760405162461bcd60e51b815260040161065a90612a6d565b6106fb83838361199d565b60008181526010602052604081205460ff169081600381111561075657610756612705565b0361077d576040516302261b1560e31b81523060048201526024810183905260440161065a565b919050565b60006012600083600181111561079a5761079a612705565b60018111156107ab576107ab612705565b8152602001908152602001600020549050919050565b60006107cc83610dd1565b821061082e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161065a565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6106fb838383604051806020016040528060008152506112bd565b600061087d60085490565b82106108e05760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161065a565b600882815481106108f3576108f3612aba565b90600052602060002001549050919050565b61094f6040805160e0810190915280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b60008281526010602052604090819020815160e081019092528054829060ff16600381111561098057610980612705565b600381111561099157610991612705565b81528154602090910190610100900460ff1660018111156109b4576109b4612705565b60018111156109c5576109c5612705565b815281546201000090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260049091015460a090910152905060008151600381111561075657610756612705565b610a26611b0e565b600f610a328282612b1e565b507f157d450c8fb1377294d9db75af1de2753efc52d8e5578551d70d2c7d9cd74df981604051610a62919061265c565b60405180910390a150565b600b546001600160a01b0316336001600160a01b031614610ac45730335b600b546040516341bd102b60e11b81526001600160a01b039384166004820152918316602483015291909116604482015260640161065a565b600082815260106020526040808220815160e081019092528054829060ff166003811115610af457610af4612705565b6003811115610b0557610b05612705565b81528154602090910190610100900460ff166001811115610b2857610b28612705565b6001811115610b3957610b39612705565b815281546201000090046001600160a01b031660208201526001808301546040830152600283015460608301526003830154608083015260049092015460a09091015290915081516003811115610b9257610b92612705565b14610bb757805160405163296176e960e21b815261065a913091869190600401612bde565b6002815260a081018290526080810151600d8054600090610bd9908490612c18565b9250508190555080608001516011600083602001516001811115610bff57610bff612705565b6001811115610c1057610c10612705565b81526020019081526020016000206000828254610c2d9190612c18565b90915550610c3c905083611491565b6012600083602001516001811115610c5657610c56612705565b6001811115610c6757610c67612705565b81526020019081526020016000206000828254610c849190612c18565b909155505060008381526010602052604090208151815483929190829060ff19166001836003811115610cb957610cb9612705565b021790555060208201518154829061ff001916610100836001811115610ce157610ce1612705565b021790555060408281015182546001600160a01b03909116620100000262010000600160b01b0319909116178255606083015160018301556080830151600283015560a0830151600383015560c0909201516004909101555182815283907f33ea1a186572e2f58323a577d0641406c4f138bd69be72d353e44bf4e7058f819060200160405180910390a2505050565b6000818152600260205260408120546001600160a01b0316806105275760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161065a565b60006001600160a01b038216610e3b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161065a565b506001600160a01b031660009081526003602052604090205490565b610e5f611b0e565b610e696000611b68565b565b600b546000906001600160a01b0316336001600160a01b031614610e90573033610a8b565b82600003610eb357604051630b0e3c6b60e31b815230600482015260240161065a565b600e805460009182610ec483612c2b565b909155506040805160e081019091529091508060018152602001876001811115610ef057610ef0612705565b81526001600160a01b038a1660208083019190915260408083018990526060830188905260006080840181905260a09093018790528483526010909152902081518154829060ff19166001836003811115610f4d57610f4d612705565b021790555060208201518154829061ff001916610100836001811115610f7557610f75612705565b0217905550604082015181546001600160a01b03909116620100000262010000600160b01b0319909116178155606082015160018201556080820151600282015560a0820151600382015560c090910151600490910155610fd581611491565b600c6000828254610fe69190612c18565b9250508190555080876001600160a01b03167ffc0754a64fbbc34376bd7fba4d90dc23138c775c966d8da150cb67f274d66ce58a8989898960405161102f959493929190612c44565b60405180910390a36110418782611bba565b979650505050505050565b60606001805461053c90612a39565b600b546001600160a01b0316336001600160a01b03161461107d573033610a8b565b600260008281526010602052604090205460ff1660038111156110a2576110a2612705565b146110d8576000818152601060205260409081902054905163741d856560e01b815261065a913091849160ff1690600401612bde565b600081815260106020526040808220815160e081019092528054829060ff16600381111561110857611108612705565b600381111561111957611119612705565b81528154602090910190610100900460ff16600181111561113c5761113c612705565b600181111561114d5761114d612705565b815281546201000090046001600160a01b031660208201526001820154604082015260028201546060820152600382015460808083019190915260049092015460a090910152810151600d805492935090916000906111ad908490612c7d565b92505081905550806080015160116000836020015160018111156111d3576111d3612705565b60018111156111e4576111e4612705565b815260200190815260200160002060008282546112019190612c7d565b90915550611210905082611491565b601260008360200151600181111561122a5761122a612705565b600181111561123b5761123b612705565b815260200190815260200160002060008282546112589190612c7d565b90915550611267905082611bd4565b60405182907f76ea9b4ec8740d36765c806fad62b75c4418d245d5264e20b01f07ca9ef48b1c90600090a25050565b6112a1338383611c31565b5050565b60006011600083600181111561079a5761079a612705565b6112c7338361191e565b6112e35760405162461bcd60e51b815260040161065a90612a6d565b6112ef84848484611cff565b50505050565b6112fd611b0e565b600a54600160a01b900460ff161561132a5760405163161b906f60e01b815230600482015260240161065a565b600a805460ff60a01b1916600160a01b1790556001600160a01b03811661136657604051630a227ed760e31b815230600482015260240161065a565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f36b1453565f45af7b509b59d5e2eac8f1948ea9e3e193db6663b4101afb6382c90600090a250565b60606000600f80546113c190612a39565b80601f01602080910402602001604051908101604052809291908181526020018280546113ed90612a39565b801561143a5780601f1061140f5761010080835404028352916020019161143a565b820191906000526020600020905b81548152906001019060200180831161141d57829003601f168201915b50505050509050600081511161145f576040518060200160405280600081525061148a565b8061146984611d32565b60405160200161147a929190612c90565b6040516020818303038152906040525b9392505050565b600081815260106020526040808220815160e08101909252805483929190829060ff1660038111156114c5576114c5612705565b60038111156114d6576114d6612705565b81528154602090910190610100900460ff1660018111156114f9576114f9612705565b600181111561150a5761150a612705565b815281546201000090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260049091015460a090910152905060008151600381111561156357611563612705565b0361158a576040516302261b1560e31b81523060048201526024810184905260440161065a565b6000816020015160018111156115a2576115a2612705565b0361163957608081015161148a906115bc6012600a612da3565b600b546060850151604051634674dce360e01b815260048101919091526001916001600160a01b031690634674dce390602401608060405180830381865afa15801561160c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116309190612daf565b51929190611dc5565b608081015161148a9061164e6012600a612da3565b600b546060850151604051634674dce360e01b815260048101919091526001916001600160a01b031690634674dce390602401608060405180830381865afa15801561169e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c29190612daf565b60200151929190611dc5565b50919050565b600b546001600160a01b0316336001600160a01b0316146116f6573033610a8b565b600160008281526010602052604090205460ff16600381111561171b5761171b612705565b14611751576000818152601060205260409081902054905163296176e960e21b815261065a913091849160ff1690600401612bde565b61175a81611bd4565b60405181907f07273b9650be6ee73b0f43fcae8daa24f5381e93b3262f682a760954a059034190600090a250565b611790611b0e565b6001600160a01b0381166117f55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161065a565b6117fe81611b68565b50565b60006001600160e01b031982166380ac58cd60e01b148061183257506001600160e01b03198216635b5e139f60e01b145b8061052757506301ffc9a760e01b6001600160e01b0319831614610527565b6000818152600260205260409020546001600160a01b03166117fe5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161065a565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906118e582610d71565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061192a83610d71565b9050806001600160a01b0316846001600160a01b0316148061197157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806119955750836001600160a01b031661198a846105bf565b6001600160a01b0316145b949350505050565b826001600160a01b03166119b082610d71565b6001600160a01b0316146119d65760405162461bcd60e51b815260040161065a90612e15565b6001600160a01b038216611a385760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161065a565b611a458383836001611e22565b826001600160a01b0316611a5882610d71565b6001600160a01b031614611a7e5760405162461bcd60e51b815260040161065a90612e15565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b03163314610e695760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161065a565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6112a1828260405180602001604052806000815250611f56565b611bdd81611491565b600c6000828254611bee9190612c7d565b9091555050600081815260106020526040812080546001600160b01b0319168155600181018290556002810182905560038101829055600401556117fe81611f89565b816001600160a01b0316836001600160a01b031603611c925760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161065a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611d0a84848461199d565b611d168484848461202c565b6112ef5760405162461bcd60e51b815260040161065a90612e5a565b60606000611d3f8361212a565b600101905060008167ffffffffffffffff811115611d5f57611d5f6127dd565b6040519080825280601f01601f191660200182016040528015611d89576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611d9357509392505050565b600080611dd3868686612202565b90506001836002811115611de957611de9612705565b148015611e06575060008480611e0157611e01612eac565b868809115b15611e1957611e16600182612c18565b90505b95945050505050565b6001811115611e915760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b606482015260840161065a565b816001600160a01b038516611eed57611ee881600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611f10565b836001600160a01b0316856001600160a01b031614611f1057611f1085826122b0565b6001600160a01b038416611f2c57611f278161234d565b611f4f565b846001600160a01b0316846001600160a01b031614611f4f57611f4f84826123fc565b5050505050565b611f608383612440565b611f6d600084848461202c565b6106fb5760405162461bcd60e51b815260040161065a90612e5a565b6000611f9482610d71565b9050611fa4816000846001611e22565b611fad82610d71565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b1561212257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612070903390899088908890600401612ec2565b6020604051808303816000875af19250505080156120ab575060408051601f3d908101601f191682019092526120a891810190612eff565b60015b612108573d8080156120d9576040519150601f19603f3d011682016040523d82523d6000602084013e6120de565b606091505b5080516000036121005760405162461bcd60e51b815260040161065a90612e5a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611995565b506001611995565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106121695772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310612195576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106121b357662386f26fc10000830492506010015b6305f5e10083106121cb576305f5e100830492506008015b61271083106121df57612710830492506004015b606483106121f1576064830492506002015b600a83106105275760010192915050565b600080806000198587098587029250828110838203039150508060000361223c5783828161223257612232612eac565b049250505061148a565b80841161224857600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b600060016122bd84610dd1565b6122c79190612c7d565b60008381526007602052604090205490915080821461231a576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061235f90600190612c7d565b6000838152600960205260408120546008805493945090928490811061238757612387612aba565b9060005260206000200154905080600883815481106123a8576123a8612aba565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806123e0576123e0612f1c565b6001900381819060005260206000200160009055905550505050565b600061240783610dd1565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166124965760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161065a565b6000818152600260205260409020546001600160a01b0316156124fb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161065a565b612509600083836001611e22565b6000818152600260205260409020546001600160a01b03161561256e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161065a565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146117fe57600080fd5b60006020828403121561260157600080fd5b813561148a816125d9565b60005b8381101561262757818101518382015260200161260f565b50506000910152565b6000815180845261264881602086016020860161260c565b601f01601f19169290920160200192915050565b60208152600061148a6020830184612630565b60006020828403121561268157600080fd5b5035919050565b80356001600160a01b038116811461077d57600080fd5b600080604083850312156126b257600080fd5b6126bb83612688565b946020939093013593505050565b6000806000606084860312156126de57600080fd5b6126e784612688565b92506126f560208501612688565b9150604084013590509250925092565b634e487b7160e01b600052602160045260246000fd5b6004811061272b5761272b612705565b9052565b60208101610527828461271b565b80356002811061077d57600080fd5b60006020828403121561275e57600080fd5b61148a8261273d565b6002811061272b5761272b612705565b600060e08201905061278a82845161271b565b602083015161279c6020840182612767565b5060018060a01b036040840151166040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561280e5761280e6127dd565b604051601f8501601f19908116603f01168101908282118183101715612836576128366127dd565b8160405280935085815286868601111561284f57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561287b57600080fd5b813567ffffffffffffffff81111561289257600080fd5b8201601f810184136128a357600080fd5b611995848235602084016127f3565b600080604083850312156128c557600080fd5b50508035926020909101359150565b6000602082840312156128e657600080fd5b61148a82612688565b60008060008060008060c0878903121561290857600080fd5b61291187612688565b955061291f60208801612688565b945061292d6040880161273d565b9350606087013592506080870135915060a087013590509295509295509295565b6000806040838503121561296157600080fd5b61296a83612688565b91506020830135801515811461297f57600080fd5b809150509250929050565b600080600080608085870312156129a057600080fd5b6129a985612688565b93506129b760208601612688565b925060408501359150606085013567ffffffffffffffff8111156129da57600080fd5b8501601f810187136129eb57600080fd5b6129fa878235602084016127f3565b91505092959194509250565b60008060408385031215612a1957600080fd5b612a2283612688565b9150612a3060208401612688565b90509250929050565b600181811c90821680612a4d57607f821691505b6020821081036116ce57634e487b7160e01b600052602260045260246000fd5b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b601f8211156106fb57600081815260208120601f850160051c81016020861015612af75750805b601f850160051c820191505b81811015612b1657828155600101612b03565b505050505050565b815167ffffffffffffffff811115612b3857612b386127dd565b612b4c81612b468454612a39565b84612ad0565b602080601f831160018114612b815760008415612b695750858301515b600019600386901b1c1916600185901b178555612b16565b600085815260208120601f198616915b82811015612bb057888601518255948401946001909101908401612b91565b5085821015612bce5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b03841681526020810183905260608101611995604083018461271b565b634e487b7160e01b600052601160045260246000fd5b8082018082111561052757610527612c02565b600060018201612c3d57612c3d612c02565b5060010190565b6001600160a01b038616815260a08101612c616020830187612767565b8460408301528360608301528260808301529695505050505050565b8181038181111561052757610527612c02565b60008351612ca281846020880161260c565b835190830190612cb681836020880161260c565b01949350505050565b600181815b80851115612cfa578160001904821115612ce057612ce0612c02565b80851615612ced57918102915b93841c9390800290612cc4565b509250929050565b600082612d1157506001610527565b81612d1e57506000610527565b8160018114612d345760028114612d3e57612d5a565b6001915050610527565b60ff841115612d4f57612d4f612c02565b50506001821b610527565b5060208310610133831016604e8410600b8410161715612d7d575081810a610527565b612d878383612cbf565b8060001904821115612d9b57612d9b612c02565b029392505050565b600061148a8383612d02565b600060808284031215612dc157600080fd5b6040516080810181811067ffffffffffffffff82111715612de457612de46127dd565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612ef590830184612630565b9695505050505050565b600060208284031215612f1157600080fd5b815161148a816125d9565b634e487b7160e01b600052603160045260246000fdfea26469706673582212206358f7a363691974b983ada15ac08b6a3f5062f85e544cf0f2c458052a5fa7d364736f6c63430008110033'

type OptionTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: OptionTokenConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class OptionToken__factory extends ContractFactory {
  constructor(...args: OptionTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    collectionAddress: string,
    name_: string,
    symbol_: string,
    baseURI: string,
    overrides?: Overrides & { from?: string }
  ): Promise<OptionToken> {
    return super.deploy(collectionAddress, name_, symbol_, baseURI, overrides || {}) as Promise<OptionToken>
  }
  override getDeployTransaction(
    collectionAddress: string,
    name_: string,
    symbol_: string,
    baseURI: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(collectionAddress, name_, symbol_, baseURI, overrides || {})
  }
  override attach(address: string): OptionToken {
    return super.attach(address) as OptionToken
  }
  override connect(signer: Signer): OptionToken__factory {
    return super.connect(signer) as OptionToken__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): OptionTokenInterface {
    return new utils.Interface(_abi) as OptionTokenInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OptionToken {
    return new Contract(address, _abi, signerOrProvider) as OptionToken
  }
}
