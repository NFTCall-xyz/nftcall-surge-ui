/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../../common'
import type { OptionToken, OptionTokenInterface } from '../../../contracts/tokens/OptionToken'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collectionAddress',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'name_',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol_',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'baseURI',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AlreadyInitialised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        internalType: 'enum PositionState',
        name: 'state',
        type: 'uint8',
      },
    ],
    name: 'IsNotActive',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        internalType: 'enum PositionState',
        name: 'state',
        type: 'uint8',
      },
    ],
    name: 'IsNotPending',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'NonexistentPosition',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'OnlyVault',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
    ],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
    ],
    name: 'ZeroVaultAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'premium',
        type: 'uint256',
      },
    ],
    name: 'ActivePosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'ClosePosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'ForceClosePosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'Initialize',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'payer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'enum OptionType',
        name: 'optionType',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'strikeId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maximumPremium',
        type: 'uint256',
      },
    ],
    name: 'OpenPosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'baseURI',
        type: 'string',
      },
    ],
    name: 'UpdateBaseURI',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'premium',
        type: 'uint256',
      },
    ],
    name: 'activePosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'closePosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collection',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'forceClosePendingPosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'lockedValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'payer',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'enum OptionType',
        name: 'optionType',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'strikeId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maximumPremium',
        type: 'uint256',
      },
    ],
    name: 'openPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'optionPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'enum PositionState',
            name: 'state',
            type: 'uint8',
          },
          {
            internalType: 'enum OptionType',
            name: 'optionType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'payer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'strikeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'premium',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct OptionPosition',
        name: 'position',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'optionPositionState',
    outputs: [
      {
        internalType: 'enum PositionState',
        name: 'state',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'baseURI',
        type: 'string',
      },
    ],
    name: 'setBaseURI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60a0604052600a805460ff60a01b191690556001600e553480156200002357600080fd5b5060405162002f8638038062002f868339810160408190526200004691620001c3565b8282600062000056838262000304565b50600162000065828262000304565b505050620000826200007c620000a860201b60201c565b620000ac565b6001600160a01b038416608052600f6200009d828262000304565b5050505050620003d0565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200012657600080fd5b81516001600160401b0380821115620001435762000143620000fe565b604051601f8301601f19908116603f011681019082821181831017156200016e576200016e620000fe565b816040528381526020925086838588010111156200018b57600080fd5b600091505b83821015620001af578582018301518183018401529082019062000190565b600093810190920192909252949350505050565b60008060008060808587031215620001da57600080fd5b84516001600160a01b0381168114620001f257600080fd5b60208601519094506001600160401b03808211156200021057600080fd5b6200021e8883890162000114565b945060408701519150808211156200023557600080fd5b620002438883890162000114565b935060608701519150808211156200025a57600080fd5b50620002698782880162000114565b91505092959194509250565b600181811c908216806200028a57607f821691505b602082108103620002ab57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ff57600081815260208120601f850160051c81016020861015620002da5750805b601f850160051c820191505b81811015620002fb57828155600101620002e6565b5050505b505050565b81516001600160401b03811115620003205762000320620000fe565b620003388162000331845462000275565b84620002b1565b602080601f831160018114620003705760008415620003575750858301515b600019600386901b1c1916600185901b178555620002fb565b600085815260208120601f198616915b82811015620003a15788860151825594840194600190910190840162000380565b5085821015620003c05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051612b9a620003ec60003960006103710152612b9a6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063715018a61161010f578063c4d66de8116100a2578063e31d191111610071578063e31d191114610439578063e985e9c51461044c578063f2fde38b14610488578063fbfa77cf1461049b57600080fd5b8063c4d66de8146103f8578063c87b56dd1461040b578063d12b53201461041e578063d4c3eea01461043157600080fd5b806395d89b41116100de57806395d89b41146103b7578063a126d601146103bf578063a22cb465146103d2578063b88d4fde146103e557600080fd5b8063715018a6146103645780637de1e5361461036c57806387d7fca8146103935780638da5cb5b146103a657600080fd5b80632f745c591161018757806355f804b31161015657806355f804b314610318578063578b314a1461032b5780636352211e1461033e57806370a082311461035157600080fd5b80632f745c59146102bf57806342842e0e146102d25780634f6ccce7146102e557806352e5491f146102f857600080fd5b806318160ddd116101c357806318160ddd146102725780631a39d8ef1461028457806323b872dd1461028c5780632985be341461029f57600080fd5b806301ffc9a7146101f557806306fdde031461021d578063081812fc14610232578063095ea7b31461025d575b600080fd5b610208610203366004612222565b6104ac565b60405190151581526020015b60405180910390f35b6102256104d7565b604051610214919061228f565b6102456102403660046122a2565b610569565b6040516001600160a01b039091168152602001610214565b61027061026b3660046122d2565b610590565b005b6008545b604051908152602001610214565b600d54610276565b61027061029a3660046122fc565b6106aa565b6102b26102ad3660046122a2565b6106db565b6040516102149190612362565b6102766102cd3660046122d2565b61072c565b6102706102e03660046122fc565b6107c2565b6102766102f33660046122a2565b6107dd565b61030b6103063660046122a2565b610870565b6040516102149190612380565b610270610326366004612472565b610989565b6102706103393660046124bb565b6109d8565b61024561034c3660046122a2565b610aca565b61027661035f3660046124dd565b610b2a565b610270610bb0565b6102457f000000000000000000000000000000000000000000000000000000000000000081565b6102766103a13660046124f8565b610bc4565b600a546001600160a01b0316610245565b610225610dbf565b6102706103cd3660046122a2565b610dce565b6102706103e036600461255d565b610ec7565b6102706103f3366004612599565b610ed6565b6102706104063660046124dd565b610f0e565b6102256104193660046122a2565b610fc9565b61027661042c3660046122a2565b6110aa565b600c54610276565b6102706104473660046122a2565b6112ed565b61020861045a366004612615565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102706104963660046124dd565b6113bb565b600b546001600160a01b0316610245565b60006001600160e01b0319821663780e9d6360e01b14806104d157506104d182611434565b92915050565b6060600080546104e690612648565b80601f016020809104026020016040519081016040528092919081815260200182805461051290612648565b801561055f5780601f106105345761010080835404028352916020019161055f565b820191906000526020600020905b81548152906001019060200180831161054257829003601f168201915b5050505050905090565b600061057482611484565b506000908152600460205260409020546001600160a01b031690565b600061059b82610aca565b9050806001600160a01b0316836001600160a01b03160361060d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106295750610629813361045a565b61069b5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610604565b6106a583836114e3565b505050565b6106b43382611551565b6106d05760405162461bcd60e51b81526004016106049061267c565b6106a58383836115d0565b60008181526010602052604081205460ff169081600381111561070057610700612338565b03610727576040516302261b1560e31b815230600482015260248101839052604401610604565b919050565b600061073783610b2a565b82106107995760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610604565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6106a583838360405180602001604052806000815250610ed6565b60006107e860085490565b821061084b5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610604565b6008828154811061085e5761085e6126c9565b90600052602060002001549050919050565b6108ba6040805160e0810190915280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b60008281526010602052604090819020815160e081019092528054829060ff1660038111156108eb576108eb612338565b60038111156108fc576108fc612338565b81528154602090910190610100900460ff16600181111561091f5761091f612338565b600181111561093057610930612338565b815281546201000090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260049091015460a090910152905060008151600381111561070057610700612338565b610991611741565b600f61099d828261272d565b507f157d450c8fb1377294d9db75af1de2753efc52d8e5578551d70d2c7d9cd74df9816040516109cd919061228f565b60405180910390a150565b600b546001600160a01b03163314610a1457600b546040516341bd102b60e11b815261060491309133916001600160a01b0316906004016127ed565b60008281526010602052604090206001815460ff166003811115610a3a57610a3a612338565b14610a6257805460405163296176e960e21b8152610604913091869160ff1690600401612810565b805460ff19166002908117825560038201839055810154600d8054600090610a8b90849061284a565b909155505060405182815283907f33ea1a186572e2f58323a577d0641406c4f138bd69be72d353e44bf4e7058f819060200160405180910390a2505050565b6000818152600260205260408120546001600160a01b0316806104d15760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610604565b60006001600160a01b038216610b945760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610604565b506001600160a01b031660009081526003602052604090205490565b610bb8611741565b610bc2600061179b565b565b600b546000906001600160a01b03163314610c0357600b546040516341bd102b60e11b815261060491309133916001600160a01b0316906004016127ed565b82600003610c2657604051630b0e3c6b60e31b8152306004820152602401610604565b600e805460009182610c378361285d565b909155506040805160e081019091529091508060018152602001876001811115610c6357610c63612338565b81526001600160a01b038a1660208083019190915260408083018990526060830188905260006080840181905260a09093018790528483526010909152902081518154829060ff19166001836003811115610cc057610cc0612338565b021790555060208201518154829061ff001916610100836001811115610ce857610ce8612338565b0217905550604082015181546001600160a01b03909116620100000262010000600160b01b0319909116178155606082015160018201556080820151600282015560a0820151600382015560c090910151600490910155610d48816110aa565b600c6000828254610d59919061284a565b9250508190555080876001600160a01b03167ffc0754a64fbbc34376bd7fba4d90dc23138c775c966d8da150cb67f274d66ce58a89898989604051610da2959493929190612876565b60405180910390a3610db487826117ed565b979650505050505050565b6060600180546104e690612648565b600b546001600160a01b03163314610e0a57600b546040516341bd102b60e11b815261060491309133916001600160a01b0316906004016127ed565b600260008281526010602052604090205460ff166003811115610e2f57610e2f612338565b14610e65576000818152601060205260409081902054905163741d856560e01b8152610604913091849160ff1690600401612810565b600081815260106020526040812060020154600d805491929091610e8a9084906128af565b90915550610e99905081611807565b60405181907f76ea9b4ec8740d36765c806fad62b75c4418d245d5264e20b01f07ca9ef48b1c90600090a250565b610ed2338383611864565b5050565b610ee03383611551565b610efc5760405162461bcd60e51b81526004016106049061267c565b610f0884848484611932565b50505050565b610f16611741565b600a54600160a01b900460ff1615610f435760405163161b906f60e01b8152306004820152602401610604565b600a805460ff60a01b1916600160a01b1790556001600160a01b038116610f7f57604051630a227ed760e31b8152306004820152602401610604565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f36b1453565f45af7b509b59d5e2eac8f1948ea9e3e193db6663b4101afb6382c90600090a250565b60606000600f8054610fda90612648565b80601f016020809104026020016040519081016040528092919081815260200182805461100690612648565b80156110535780601f1061102857610100808354040283529160200191611053565b820191906000526020600020905b81548152906001019060200180831161103657829003601f168201915b50505050509050600081511161107857604051806020016040528060008152506110a3565b8061108284611965565b6040516020016110939291906128c2565b6040516020818303038152906040525b9392505050565b600081815260106020526040808220815160e08101909252805483929190829060ff1660038111156110de576110de612338565b60038111156110ef576110ef612338565b81528154602090910190610100900460ff16600181111561111257611112612338565b600181111561112357611123612338565b815281546201000090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260049091015460a090910152905060008151600381111561117c5761117c612338565b036111a3576040516302261b1560e31b815230600482015260248101849052604401610604565b6000816020015160018111156111bb576111bb612338565b036112525760808101516110a3906111d56012600a6129d5565b600b546060850151604051634674dce360e01b815260048101919091526001916001600160a01b031690634674dce390602401608060405180830381865afa158015611225573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124991906129e1565b519291906119f8565b60808101516110a3906112676012600a6129d5565b600b546060850151604051634674dce360e01b815260048101919091526001916001600160a01b031690634674dce390602401608060405180830381865afa1580156112b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112db91906129e1565b602001519291906119f8565b50919050565b600b546001600160a01b0316331461132957600b546040516341bd102b60e11b815261060491309133916001600160a01b0316906004016127ed565b600160008281526010602052604090205460ff16600381111561134e5761134e612338565b14611384576000818152601060205260409081902054905163296176e960e21b8152610604913091849160ff1690600401612810565b61138d81611807565b60405181907f07273b9650be6ee73b0f43fcae8daa24f5381e93b3262f682a760954a059034190600090a250565b6113c3611741565b6001600160a01b0381166114285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610604565b6114318161179b565b50565b60006001600160e01b031982166380ac58cd60e01b148061146557506001600160e01b03198216635b5e139f60e01b145b806104d157506301ffc9a760e01b6001600160e01b03198316146104d1565b6000818152600260205260409020546001600160a01b03166114315760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610604565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061151882610aca565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061155d83610aca565b9050806001600160a01b0316846001600160a01b031614806115a457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806115c85750836001600160a01b03166115bd84610569565b6001600160a01b0316145b949350505050565b826001600160a01b03166115e382610aca565b6001600160a01b0316146116095760405162461bcd60e51b815260040161060490612a47565b6001600160a01b03821661166b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610604565b6116788383836001611a55565b826001600160a01b031661168b82610aca565b6001600160a01b0316146116b15760405162461bcd60e51b815260040161060490612a47565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b03163314610bc25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610604565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610ed2828260405180602001604052806000815250611b89565b611810816110aa565b600c600082825461182191906128af565b9091555050600081815260106020526040812080546001600160b01b03191681556001810182905560028101829055600381018290556004015561143181611bbc565b816001600160a01b0316836001600160a01b0316036118c55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610604565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61193d8484846115d0565b61194984848484611c5f565b610f085760405162461bcd60e51b815260040161060490612a8c565b6060600061197283611d5d565b600101905060008167ffffffffffffffff811115611992576119926123e6565b6040519080825280601f01601f1916602001820160405280156119bc576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846119c657509392505050565b600080611a06868686611e35565b90506001836002811115611a1c57611a1c612338565b148015611a39575060008480611a3457611a34612ade565b868809115b15611a4c57611a4960018261284a565b90505b95945050505050565b6001811115611ac45760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610604565b816001600160a01b038516611b2057611b1b81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611b43565b836001600160a01b0316856001600160a01b031614611b4357611b438582611ee3565b6001600160a01b038416611b5f57611b5a81611f80565b611b82565b846001600160a01b0316846001600160a01b031614611b8257611b82848261202f565b5050505050565b611b938383612073565b611ba06000848484611c5f565b6106a55760405162461bcd60e51b815260040161060490612a8c565b6000611bc782610aca565b9050611bd7816000846001611a55565b611be082610aca565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b15611d5557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ca3903390899088908890600401612af4565b6020604051808303816000875af1925050508015611cde575060408051601f3d908101601f19168201909252611cdb91810190612b31565b60015b611d3b573d808015611d0c576040519150601f19603f3d011682016040523d82523d6000602084013e611d11565b606091505b508051600003611d335760405162461bcd60e51b815260040161060490612a8c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506115c8565b5060016115c8565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611d9c5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611dc8576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611de657662386f26fc10000830492506010015b6305f5e1008310611dfe576305f5e100830492506008015b6127108310611e1257612710830492506004015b60648310611e24576064830492506002015b600a83106104d15760010192915050565b6000808060001985870985870292508281108382030391505080600003611e6f57838281611e6557611e65612ade565b04925050506110a3565b808411611e7b57600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006001611ef084610b2a565b611efa91906128af565b600083815260076020526040902054909150808214611f4d576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611f92906001906128af565b60008381526009602052604081205460088054939450909284908110611fba57611fba6126c9565b906000526020600020015490508060088381548110611fdb57611fdb6126c9565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061201357612013612b4e565b6001900381819060005260206000200160009055905550505050565b600061203a83610b2a565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166120c95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610604565b6000818152600260205260409020546001600160a01b03161561212e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610604565b61213c600083836001611a55565b6000818152600260205260409020546001600160a01b0316156121a15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610604565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461143157600080fd5b60006020828403121561223457600080fd5b81356110a38161220c565b60005b8381101561225a578181015183820152602001612242565b50506000910152565b6000815180845261227b81602086016020860161223f565b601f01601f19169290920160200192915050565b6020815260006110a36020830184612263565b6000602082840312156122b457600080fd5b5035919050565b80356001600160a01b038116811461072757600080fd5b600080604083850312156122e557600080fd5b6122ee836122bb565b946020939093013593505050565b60008060006060848603121561231157600080fd5b61231a846122bb565b9250612328602085016122bb565b9150604084013590509250925092565b634e487b7160e01b600052602160045260246000fd5b6004811061235e5761235e612338565b9052565b602081016104d1828461234e565b6002811061235e5761235e612338565b600060e08201905061239382845161234e565b60208301516123a56020840182612370565b5060018060a01b036040840151166040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612417576124176123e6565b604051601f8501601f19908116603f0116810190828211818310171561243f5761243f6123e6565b8160405280935085815286868601111561245857600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561248457600080fd5b813567ffffffffffffffff81111561249b57600080fd5b8201601f810184136124ac57600080fd5b6115c8848235602084016123fc565b600080604083850312156124ce57600080fd5b50508035926020909101359150565b6000602082840312156124ef57600080fd5b6110a3826122bb565b60008060008060008060c0878903121561251157600080fd5b61251a876122bb565b9550612528602088016122bb565b945060408701356002811061253c57600080fd5b959894975094956060810135955060808101359460a0909101359350915050565b6000806040838503121561257057600080fd5b612579836122bb565b91506020830135801515811461258e57600080fd5b809150509250929050565b600080600080608085870312156125af57600080fd5b6125b8856122bb565b93506125c6602086016122bb565b925060408501359150606085013567ffffffffffffffff8111156125e957600080fd5b8501601f810187136125fa57600080fd5b612609878235602084016123fc565b91505092959194509250565b6000806040838503121561262857600080fd5b612631836122bb565b915061263f602084016122bb565b90509250929050565b600181811c9082168061265c57607f821691505b6020821081036112e757634e487b7160e01b600052602260045260246000fd5b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b601f8211156106a557600081815260208120601f850160051c810160208610156127065750805b601f850160051c820191505b8181101561272557828155600101612712565b505050505050565b815167ffffffffffffffff811115612747576127476123e6565b61275b816127558454612648565b846126df565b602080601f83116001811461279057600084156127785750858301515b600019600386901b1c1916600185901b178555612725565b600085815260208120601f198616915b828110156127bf578886015182559484019460019091019084016127a0565b50858210156127dd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b038416815260208101839052606081016115c8604083018461234e565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d1576104d1612834565b60006001820161286f5761286f612834565b5060010190565b6001600160a01b038616815260a081016128936020830187612370565b8460408301528360608301528260808301529695505050505050565b818103818111156104d1576104d1612834565b600083516128d481846020880161223f565b8351908301906128e881836020880161223f565b01949350505050565b600181815b8085111561292c57816000190482111561291257612912612834565b8085161561291f57918102915b93841c93908002906128f6565b509250929050565b600082612943575060016104d1565b81612950575060006104d1565b816001811461296657600281146129705761298c565b60019150506104d1565b60ff84111561298157612981612834565b50506001821b6104d1565b5060208310610133831016604e8410600b84101617156129af575081810a6104d1565b6129b983836128f1565b80600019048211156129cd576129cd612834565b029392505050565b60006110a38383612934565b6000608082840312156129f357600080fd5b6040516080810181811067ffffffffffffffff82111715612a1657612a166123e6565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612b2790830184612263565b9695505050505050565b600060208284031215612b4357600080fd5b81516110a38161220c565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220546cf943faa53a46198fe9c58b5456f29a0e9b4786d4016034c532c56004304b64736f6c63430008110033'

type OptionTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: OptionTokenConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class OptionToken__factory extends ContractFactory {
  constructor(...args: OptionTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    collectionAddress: PromiseOrValue<string>,
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptionToken> {
    return super.deploy(collectionAddress, name_, symbol_, baseURI, overrides || {}) as Promise<OptionToken>
  }
  override getDeployTransaction(
    collectionAddress: PromiseOrValue<string>,
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(collectionAddress, name_, symbol_, baseURI, overrides || {})
  }
  override attach(address: string): OptionToken {
    return super.attach(address) as OptionToken
  }
  override connect(signer: Signer): OptionToken__factory {
    return super.connect(signer) as OptionToken__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): OptionTokenInterface {
    return new utils.Interface(_abi) as OptionTokenInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OptionToken {
    return new Contract(address, _abi, signerOrProvider) as OptionToken
  }
}
