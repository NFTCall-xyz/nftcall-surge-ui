/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, type Overrides, Signer, utils } from 'ethers'

import type { OptionToken, OptionTokenInterface } from '../../../contracts/tokens/OptionToken'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'collectionAddress',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'name_',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol_',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'baseURI',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AlreadyInitialised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        internalType: 'enum PositionState',
        name: 'state',
        type: 'uint8',
      },
    ],
    name: 'IsNotActive',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        internalType: 'enum PositionState',
        name: 'state',
        type: 'uint8',
      },
    ],
    name: 'IsNotPending',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'NonexistentPosition',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'OnlyVault',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
    ],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'thrower',
        type: 'address',
      },
    ],
    name: 'ZeroVaultAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'premium',
        type: 'uint256',
      },
    ],
    name: 'ActivePosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'ClosePosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'ForceClosePosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'Initialize',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'payer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'enum OptionType',
        name: 'optionType',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'strikeId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maximumPremium',
        type: 'uint256',
      },
    ],
    name: 'OpenPosition',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'baseURI',
        type: 'string',
      },
    ],
    name: 'UpdateBaseURI',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'premium',
        type: 'uint256',
      },
    ],
    name: 'activePosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'closePosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collection',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'forceClosePendingPosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultAddress',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'lockedValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'payer',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'enum OptionType',
        name: 'optionType',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'strikeId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maximumPremium',
        type: 'uint256',
      },
    ],
    name: 'openPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'optionPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'enum PositionState',
            name: 'state',
            type: 'uint8',
          },
          {
            internalType: 'enum OptionType',
            name: 'optionType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'payer',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'strikeId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'premium',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maximumPremium',
            type: 'uint256',
          },
        ],
        internalType: 'struct OptionPosition',
        name: 'position',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'positionId',
        type: 'uint256',
      },
    ],
    name: 'optionPositionState',
    outputs: [
      {
        internalType: 'enum PositionState',
        name: 'state',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'baseURI',
        type: 'string',
      },
    ],
    name: 'setBaseURI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum OptionType',
        name: 'optionType',
        type: 'uint8',
      },
    ],
    name: 'totalAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum OptionType',
        name: 'optionType',
        type: 'uint8',
      },
    ],
    name: 'totalValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60a0604052600a805460ff60a01b191690556001600e553480156200002357600080fd5b5060405162003390380380620033908339810160408190526200004691620001c3565b8282600062000056838262000304565b50600162000065828262000304565b505050620000826200007c620000a860201b60201c565b620000ac565b6001600160a01b038416608052600f6200009d828262000304565b5050505050620003d0565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200012657600080fd5b81516001600160401b0380821115620001435762000143620000fe565b604051601f8301601f19908116603f011681019082821181831017156200016e576200016e620000fe565b816040528381526020925086838588010111156200018b57600080fd5b600091505b83821015620001af578582018301518183018401529082019062000190565b600093810190920192909252949350505050565b60008060008060808587031215620001da57600080fd5b84516001600160a01b0381168114620001f257600080fd5b60208601519094506001600160401b03808211156200021057600080fd5b6200021e8883890162000114565b945060408701519150808211156200023557600080fd5b620002438883890162000114565b935060608701519150808211156200025a57600080fd5b50620002698782880162000114565b91505092959194509250565b600181811c908216806200028a57607f821691505b602082108103620002ab57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ff57600081815260208120601f850160051c81016020861015620002da5750805b601f850160051c820191505b81811015620002fb57828155600101620002e6565b5050505b505050565b81516001600160401b03811115620003205762000320620000fe565b620003388162000331845462000275565b84620002b1565b602080601f831160018114620003705760008415620003575750858301515b600019600386901b1c1916600185901b178555620002fb565b600085815260208120601f198616915b82811015620003a15788860151825594840194600190910190840162000380565b5085821015620003c05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051612fa4620003ec600039600061039a0152612fa46000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c8063715018a61161011a578063b88d4fde116100ad578063d4c3eea01161007c578063d4c3eea01461046d578063e31d191114610475578063e985e9c514610488578063f2fde38b146104c4578063fbfa77cf146104d757600080fd5b8063b88d4fde14610421578063c4d66de814610434578063c87b56dd14610447578063d12b53201461045a57600080fd5b806395d89b41116100e957806395d89b41146103e0578063a126d601146103e8578063a22cb465146103fb578063adf7a3961461040e57600080fd5b8063715018a61461038d5780637de1e5361461039557806387d7fca8146103bc5780638da5cb5b146103cf57600080fd5b80632986f4281161019d57806352e5491f1161016c57806352e5491f1461032157806355f804b314610341578063578b314a146103545780636352211e1461036757806370a082311461037a57600080fd5b80632986f428146102d55780632f745c59146102e857806342842e0e146102fb5780634f6ccce71461030e57600080fd5b806318160ddd116101d957806318160ddd146102885780631a39d8ef1461029a57806323b872dd146102a25780632985be34146102b557600080fd5b806301ffc9a71461020b57806306fdde0314610233578063081812fc14610248578063095ea7b314610273575b600080fd5b61021e610219366004612608565b6104e8565b60405190151581526020015b60405180910390f35b61023b610513565b60405161022a9190612675565b61025b610256366004612688565b6105a5565b6040516001600160a01b03909116815260200161022a565b6102866102813660046126b8565b6105cc565b005b6008545b60405190815260200161022a565b600d5461028c565b6102866102b03660046126e2565b6106e6565b6102c86102c3366004612688565b610717565b60405161022a9190612748565b61028c6102e3366004612765565b610768565b61028c6102f63660046126b8565b6107a7565b6102866103093660046126e2565b61083d565b61028c61031c366004612688565b610858565b61033461032f366004612688565b6108eb565b60405161022a9190612790565b61028661034f366004612882565b610a04565b6102866103623660046128cb565b610a53565b61025b610375366004612688565b610d3c565b61028c6103883660046128ed565b610d9c565b610286610e22565b61025b7f000000000000000000000000000000000000000000000000000000000000000081565b61028c6103ca366004612908565b610e36565b600a546001600160a01b031661025b565b61023b611031565b6102866103f6366004612688565b611040565b610286610409366004612967565b611295565b61028c61041c366004612765565b6112a4565b61028661042f3660046129a3565b6112bc565b6102866104423660046128ed565b6112f4565b61023b610455366004612688565b6113af565b61028c610468366004612688565b611490565b600c5461028c565b610286610483366004612688565b6116d3565b61021e610496366004612a1f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102866104d23660046128ed565b6117a1565b600b546001600160a01b031661025b565b60006001600160e01b0319821663780e9d6360e01b148061050d575061050d8261181a565b92915050565b60606000805461052290612a52565b80601f016020809104026020016040519081016040528092919081815260200182805461054e90612a52565b801561059b5780601f106105705761010080835404028352916020019161059b565b820191906000526020600020905b81548152906001019060200180831161057e57829003601f168201915b5050505050905090565b60006105b08261186a565b506000908152600460205260409020546001600160a01b031690565b60006105d782610d3c565b9050806001600160a01b0316836001600160a01b0316036106495760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061066557506106658133610496565b6106d75760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610640565b6106e183836118c9565b505050565b6106f03382611937565b61070c5760405162461bcd60e51b815260040161064090612a86565b6106e18383836119b6565b60008181526010602052604081205460ff169081600381111561073c5761073c61271e565b03610763576040516302261b1560e31b815230600482015260248101839052604401610640565b919050565b6000601260008360018111156107805761078061271e565b60018111156107915761079161271e565b8152602001908152602001600020549050919050565b60006107b283610d9c565b82106108145760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610640565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6106e1838383604051806020016040528060008152506112bc565b600061086360085490565b82106108c65760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610640565b600882815481106108d9576108d9612ad3565b90600052602060002001549050919050565b6109356040805160e0810190915280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b60008281526010602052604090819020815160e081019092528054829060ff1660038111156109665761096661271e565b60038111156109775761097761271e565b81528154602090910190610100900460ff16600181111561099a5761099a61271e565b60018111156109ab576109ab61271e565b815281546201000090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260049091015460a090910152905060008151600381111561073c5761073c61271e565b610a0c611b27565b600f610a188282612b37565b507f157d450c8fb1377294d9db75af1de2753efc52d8e5578551d70d2c7d9cd74df981604051610a489190612675565b60405180910390a150565b600b546001600160a01b03163314610a8f57600b546040516341bd102b60e11b815261064091309133916001600160a01b031690600401612bf7565b600082815260106020526040808220815160e081019092528054829060ff166003811115610abf57610abf61271e565b6003811115610ad057610ad061271e565b81528154602090910190610100900460ff166001811115610af357610af361271e565b6001811115610b0457610b0461271e565b815281546201000090046001600160a01b031660208201526001808301546040830152600283015460608301526003830154608083015260049092015460a09091015290915081516003811115610b5d57610b5d61271e565b14610b8257805160405163296176e960e21b8152610640913091869190600401612c1a565b6002815260a081018290526080810151600d8054600090610ba4908490612c54565b9250508190555080608001516011600083602001516001811115610bca57610bca61271e565b6001811115610bdb57610bdb61271e565b81526020019081526020016000206000828254610bf89190612c54565b90915550610c07905083611490565b6012600083602001516001811115610c2157610c2161271e565b6001811115610c3257610c3261271e565b81526020019081526020016000206000828254610c4f9190612c54565b909155505060008381526010602052604090208151815483929190829060ff19166001836003811115610c8457610c8461271e565b021790555060208201518154829061ff001916610100836001811115610cac57610cac61271e565b021790555060408281015182546001600160a01b03909116620100000262010000600160b01b0319909116178255606083015160018301556080830151600283015560a0830151600383015560c0909201516004909101555182815283907f33ea1a186572e2f58323a577d0641406c4f138bd69be72d353e44bf4e7058f819060200160405180910390a2505050565b6000818152600260205260408120546001600160a01b03168061050d5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610640565b60006001600160a01b038216610e065760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610640565b506001600160a01b031660009081526003602052604090205490565b610e2a611b27565b610e346000611b81565b565b600b546000906001600160a01b03163314610e7557600b546040516341bd102b60e11b815261064091309133916001600160a01b031690600401612bf7565b82600003610e9857604051630b0e3c6b60e31b8152306004820152602401610640565b600e805460009182610ea983612c67565b909155506040805160e081019091529091508060018152602001876001811115610ed557610ed561271e565b81526001600160a01b038a1660208083019190915260408083018990526060830188905260006080840181905260a09093018790528483526010909152902081518154829060ff19166001836003811115610f3257610f3261271e565b021790555060208201518154829061ff001916610100836001811115610f5a57610f5a61271e565b0217905550604082015181546001600160a01b03909116620100000262010000600160b01b0319909116178155606082015160018201556080820151600282015560a0820151600382015560c090910151600490910155610fba81611490565b600c6000828254610fcb9190612c54565b9250508190555080876001600160a01b03167ffc0754a64fbbc34376bd7fba4d90dc23138c775c966d8da150cb67f274d66ce58a89898989604051611014959493929190612c80565b60405180910390a36110268782611bd3565b979650505050505050565b60606001805461052290612a52565b600b546001600160a01b0316331461107c57600b546040516341bd102b60e11b815261064091309133916001600160a01b031690600401612bf7565b600260008281526010602052604090205460ff1660038111156110a1576110a161271e565b146110d7576000818152601060205260409081902054905163741d856560e01b8152610640913091849160ff1690600401612c1a565b600081815260106020526040808220815160e081019092528054829060ff1660038111156111075761110761271e565b60038111156111185761111861271e565b81528154602090910190610100900460ff16600181111561113b5761113b61271e565b600181111561114c5761114c61271e565b815281546201000090046001600160a01b031660208201526001820154604082015260028201546060820152600382015460808083019190915260049092015460a090910152810151600d805492935090916000906111ac908490612cb9565b92505081905550806080015160116000836020015160018111156111d2576111d261271e565b60018111156111e3576111e361271e565b815260200190815260200160002060008282546112009190612cb9565b9091555061120f905082611490565b60126000836020015160018111156112295761122961271e565b600181111561123a5761123a61271e565b815260200190815260200160002060008282546112579190612cb9565b90915550611266905082611bed565b60405182907f76ea9b4ec8740d36765c806fad62b75c4418d245d5264e20b01f07ca9ef48b1c90600090a25050565b6112a0338383611c4a565b5050565b6000601160008360018111156107805761078061271e565b6112c63383611937565b6112e25760405162461bcd60e51b815260040161064090612a86565b6112ee84848484611d18565b50505050565b6112fc611b27565b600a54600160a01b900460ff16156113295760405163161b906f60e01b8152306004820152602401610640565b600a805460ff60a01b1916600160a01b1790556001600160a01b03811661136557604051630a227ed760e31b8152306004820152602401610640565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f36b1453565f45af7b509b59d5e2eac8f1948ea9e3e193db6663b4101afb6382c90600090a250565b60606000600f80546113c090612a52565b80601f01602080910402602001604051908101604052809291908181526020018280546113ec90612a52565b80156114395780601f1061140e57610100808354040283529160200191611439565b820191906000526020600020905b81548152906001019060200180831161141c57829003601f168201915b50505050509050600081511161145e5760405180602001604052806000815250611489565b8061146884611d4b565b604051602001611479929190612ccc565b6040516020818303038152906040525b9392505050565b600081815260106020526040808220815160e08101909252805483929190829060ff1660038111156114c4576114c461271e565b60038111156114d5576114d561271e565b81528154602090910190610100900460ff1660018111156114f8576114f861271e565b60018111156115095761150961271e565b815281546201000090046001600160a01b0316602082015260018201546040820152600282015460608201526003820154608082015260049091015460a09091015290506000815160038111156115625761156261271e565b03611589576040516302261b1560e31b815230600482015260248101849052604401610640565b6000816020015160018111156115a1576115a161271e565b03611638576080810151611489906115bb6012600a612ddf565b600b546060850151604051634674dce360e01b815260048101919091526001916001600160a01b031690634674dce390602401608060405180830381865afa15801561160b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162f9190612deb565b51929190611dde565b60808101516114899061164d6012600a612ddf565b600b546060850151604051634674dce360e01b815260048101919091526001916001600160a01b031690634674dce390602401608060405180830381865afa15801561169d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c19190612deb565b60200151929190611dde565b50919050565b600b546001600160a01b0316331461170f57600b546040516341bd102b60e11b815261064091309133916001600160a01b031690600401612bf7565b600160008281526010602052604090205460ff1660038111156117345761173461271e565b1461176a576000818152601060205260409081902054905163296176e960e21b8152610640913091849160ff1690600401612c1a565b61177381611bed565b60405181907f07273b9650be6ee73b0f43fcae8daa24f5381e93b3262f682a760954a059034190600090a250565b6117a9611b27565b6001600160a01b03811661180e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610640565b61181781611b81565b50565b60006001600160e01b031982166380ac58cd60e01b148061184b57506001600160e01b03198216635b5e139f60e01b145b8061050d57506301ffc9a760e01b6001600160e01b031983161461050d565b6000818152600260205260409020546001600160a01b03166118175760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610640565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906118fe82610d3c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061194383610d3c565b9050806001600160a01b0316846001600160a01b0316148061198a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806119ae5750836001600160a01b03166119a3846105a5565b6001600160a01b0316145b949350505050565b826001600160a01b03166119c982610d3c565b6001600160a01b0316146119ef5760405162461bcd60e51b815260040161064090612e51565b6001600160a01b038216611a515760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610640565b611a5e8383836001611e3b565b826001600160a01b0316611a7182610d3c565b6001600160a01b031614611a975760405162461bcd60e51b815260040161064090612e51565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b03163314610e345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610640565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6112a0828260405180602001604052806000815250611f6f565b611bf681611490565b600c6000828254611c079190612cb9565b9091555050600081815260106020526040812080546001600160b01b03191681556001810182905560028101829055600381018290556004015561181781611fa2565b816001600160a01b0316836001600160a01b031603611cab5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610640565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611d238484846119b6565b611d2f84848484612045565b6112ee5760405162461bcd60e51b815260040161064090612e96565b60606000611d5883612143565b600101905060008167ffffffffffffffff811115611d7857611d786127f6565b6040519080825280601f01601f191660200182016040528015611da2576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611dac57509392505050565b600080611dec86868661221b565b90506001836002811115611e0257611e0261271e565b148015611e1f575060008480611e1a57611e1a612ee8565b868809115b15611e3257611e2f600182612c54565b90505b95945050505050565b6001811115611eaa5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610640565b816001600160a01b038516611f0657611f0181600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611f29565b836001600160a01b0316856001600160a01b031614611f2957611f2985826122c9565b6001600160a01b038416611f4557611f4081612366565b611f68565b846001600160a01b0316846001600160a01b031614611f6857611f688482612415565b5050505050565b611f798383612459565b611f866000848484612045565b6106e15760405162461bcd60e51b815260040161064090612e96565b6000611fad82610d3c565b9050611fbd816000846001611e3b565b611fc682610d3c565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160a01b0384163b1561213b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612089903390899088908890600401612efe565b6020604051808303816000875af19250505080156120c4575060408051601f3d908101601f191682019092526120c191810190612f3b565b60015b612121573d8080156120f2576040519150601f19603f3d011682016040523d82523d6000602084013e6120f7565b606091505b5080516000036121195760405162461bcd60e51b815260040161064090612e96565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506119ae565b5060016119ae565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106121825772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106121ae576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106121cc57662386f26fc10000830492506010015b6305f5e10083106121e4576305f5e100830492506008015b61271083106121f857612710830492506004015b6064831061220a576064830492506002015b600a831061050d5760010192915050565b60008080600019858709858702925082811083820303915050806000036122555783828161224b5761224b612ee8565b0492505050611489565b80841161226157600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b600060016122d684610d9c565b6122e09190612cb9565b600083815260076020526040902054909150808214612333576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061237890600190612cb9565b600083815260096020526040812054600880549394509092849081106123a0576123a0612ad3565b9060005260206000200154905080600883815481106123c1576123c1612ad3565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806123f9576123f9612f58565b6001900381819060005260206000200160009055905550505050565b600061242083610d9c565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166124af5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610640565b6000818152600260205260409020546001600160a01b0316156125145760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610640565b612522600083836001611e3b565b6000818152600260205260409020546001600160a01b0316156125875760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610640565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461181757600080fd5b60006020828403121561261a57600080fd5b8135611489816125f2565b60005b83811015612640578181015183820152602001612628565b50506000910152565b60008151808452612661816020860160208601612625565b601f01601f19169290920160200192915050565b6020815260006114896020830184612649565b60006020828403121561269a57600080fd5b5035919050565b80356001600160a01b038116811461076357600080fd5b600080604083850312156126cb57600080fd5b6126d4836126a1565b946020939093013593505050565b6000806000606084860312156126f757600080fd5b612700846126a1565b925061270e602085016126a1565b9150604084013590509250925092565b634e487b7160e01b600052602160045260246000fd5b600481106127445761274461271e565b9052565b6020810161050d8284612734565b80356002811061076357600080fd5b60006020828403121561277757600080fd5b61148982612756565b600281106127445761274461271e565b600060e0820190506127a3828451612734565b60208301516127b56020840182612780565b5060018060a01b036040840151166040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612827576128276127f6565b604051601f8501601f19908116603f0116810190828211818310171561284f5761284f6127f6565b8160405280935085815286868601111561286857600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561289457600080fd5b813567ffffffffffffffff8111156128ab57600080fd5b8201601f810184136128bc57600080fd5b6119ae8482356020840161280c565b600080604083850312156128de57600080fd5b50508035926020909101359150565b6000602082840312156128ff57600080fd5b611489826126a1565b60008060008060008060c0878903121561292157600080fd5b61292a876126a1565b9550612938602088016126a1565b945061294660408801612756565b9350606087013592506080870135915060a087013590509295509295509295565b6000806040838503121561297a57600080fd5b612983836126a1565b91506020830135801515811461299857600080fd5b809150509250929050565b600080600080608085870312156129b957600080fd5b6129c2856126a1565b93506129d0602086016126a1565b925060408501359150606085013567ffffffffffffffff8111156129f357600080fd5b8501601f81018713612a0457600080fd5b612a138782356020840161280c565b91505092959194509250565b60008060408385031215612a3257600080fd5b612a3b836126a1565b9150612a49602084016126a1565b90509250929050565b600181811c90821680612a6657607f821691505b6020821081036116cd57634e487b7160e01b600052602260045260246000fd5b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b601f8211156106e157600081815260208120601f850160051c81016020861015612b105750805b601f850160051c820191505b81811015612b2f57828155600101612b1c565b505050505050565b815167ffffffffffffffff811115612b5157612b516127f6565b612b6581612b5f8454612a52565b84612ae9565b602080601f831160018114612b9a5760008415612b825750858301515b600019600386901b1c1916600185901b178555612b2f565b600085815260208120601f198616915b82811015612bc957888601518255948401946001909101908401612baa565b5085821015612be75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b038416815260208101839052606081016119ae6040830184612734565b634e487b7160e01b600052601160045260246000fd5b8082018082111561050d5761050d612c3e565b600060018201612c7957612c79612c3e565b5060010190565b6001600160a01b038616815260a08101612c9d6020830187612780565b8460408301528360608301528260808301529695505050505050565b8181038181111561050d5761050d612c3e565b60008351612cde818460208801612625565b835190830190612cf2818360208801612625565b01949350505050565b600181815b80851115612d36578160001904821115612d1c57612d1c612c3e565b80851615612d2957918102915b93841c9390800290612d00565b509250929050565b600082612d4d5750600161050d565b81612d5a5750600061050d565b8160018114612d705760028114612d7a57612d96565b600191505061050d565b60ff841115612d8b57612d8b612c3e565b50506001821b61050d565b5060208310610133831016604e8410600b8410161715612db9575081810a61050d565b612dc38383612cfb565b8060001904821115612dd757612dd7612c3e565b029392505050565b60006114898383612d3e565b600060808284031215612dfd57600080fd5b6040516080810181811067ffffffffffffffff82111715612e2057612e206127f6565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612f3190830184612649565b9695505050505050565b600060208284031215612f4d57600080fd5b8151611489816125f2565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ed3efa168c437d4adfe854ad29cba54f79e469fc6d2425f380989eb5775e7fb064736f6c63430008110033'

type OptionTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: OptionTokenConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class OptionToken__factory extends ContractFactory {
  constructor(...args: OptionTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
    this.contractName = 'OptionToken'
  }

  override deploy(
    collectionAddress: string,
    name_: string,
    symbol_: string,
    baseURI: string,
    overrides?: Overrides & { from?: string }
  ): Promise<OptionToken> {
    return super.deploy(collectionAddress, name_, symbol_, baseURI, overrides || {}) as Promise<OptionToken>
  }
  override getDeployTransaction(
    collectionAddress: string,
    name_: string,
    symbol_: string,
    baseURI: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(collectionAddress, name_, symbol_, baseURI, overrides || {})
  }
  override attach(address: string): OptionToken {
    return super.attach(address) as OptionToken
  }
  override connect(signer: Signer): OptionToken__factory {
    return super.connect(signer) as OptionToken__factory
  }
  static readonly contractName: 'OptionToken'

  public readonly contractName: 'OptionToken'

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): OptionTokenInterface {
    return new utils.Interface(_abi) as OptionTokenInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OptionToken {
    return new Contract(address, _abi, signerOrProvider) as OptionToken
  }
}
