/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { FunctionFragment, Result } from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers'

import type { OnEvent, TypedEvent, TypedEventFilter, TypedListener } from '../../common'

export interface IPremiumInterface extends utils.Interface {
  functions: {
    'getCallPremium(uint256,uint256,uint256,uint256)': FunctionFragment
    'getPutPremium(uint256,uint256,uint256,uint256)': FunctionFragment
    'precision()': FunctionFragment
  }

  getFunction(nameOrSignatureOrTopic: 'getCallPremium' | 'getPutPremium' | 'precision'): FunctionFragment

  encodeFunctionData(
    functionFragment: 'getCallPremium',
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'getPutPremium',
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'precision', values?: undefined): string

  decodeFunctionResult(functionFragment: 'getCallPremium', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'getPutPremium', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'precision', data: BytesLike): Result

  events: {}
}

export interface IPremium extends BaseContract {
  contractName: 'IPremium'

  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  interface: IPremiumInterface

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>

  listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>
  listeners(eventName?: string): Array<Listener>
  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this
  removeAllListeners(eventName?: string): this
  off: OnEvent<this>
  on: OnEvent<this>
  once: OnEvent<this>
  removeListener: OnEvent<this>

  functions: {
    getCallPremium(
      entryPrice: BigNumberish,
      strikePrice: BigNumberish,
      duration: BigNumberish,
      vol: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    getPutPremium(
      entryPrice: BigNumberish,
      strikePrice: BigNumberish,
      duration: BigNumberish,
      vol: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    precision(overrides?: CallOverrides): Promise<[BigNumber]>
  }

  getCallPremium(
    entryPrice: BigNumberish,
    strikePrice: BigNumberish,
    duration: BigNumberish,
    vol: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  getPutPremium(
    entryPrice: BigNumberish,
    strikePrice: BigNumberish,
    duration: BigNumberish,
    vol: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  precision(overrides?: CallOverrides): Promise<BigNumber>

  callStatic: {
    getCallPremium(
      entryPrice: BigNumberish,
      strikePrice: BigNumberish,
      duration: BigNumberish,
      vol: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    getPutPremium(
      entryPrice: BigNumberish,
      strikePrice: BigNumberish,
      duration: BigNumberish,
      vol: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    precision(overrides?: CallOverrides): Promise<BigNumber>
  }

  filters: {}

  estimateGas: {
    getCallPremium(
      entryPrice: BigNumberish,
      strikePrice: BigNumberish,
      duration: BigNumberish,
      vol: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    getPutPremium(
      entryPrice: BigNumberish,
      strikePrice: BigNumberish,
      duration: BigNumberish,
      vol: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    precision(overrides?: CallOverrides): Promise<BigNumber>
  }

  populateTransaction: {
    getCallPremium(
      entryPrice: BigNumberish,
      strikePrice: BigNumberish,
      duration: BigNumberish,
      vol: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    getPutPremium(
      entryPrice: BigNumberish,
      strikePrice: BigNumberish,
      duration: BigNumberish,
      vol: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    precision(overrides?: CallOverrides): Promise<PopulatedTransaction>
  }
}
